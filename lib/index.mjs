var ci=Object.defineProperty,mi=Object.defineProperties;var li=Object.getOwnPropertyDescriptors;var Tt=Object.getOwnPropertySymbols;var zo=Object.prototype.hasOwnProperty,Zo=Object.prototype.propertyIsEnumerable;var Ho=(o,t,e)=>t in o?ci(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e,x=(o,t)=>{for(var e in t||(t={}))zo.call(t,e)&&Ho(o,e,t[e]);if(Tt)for(var e of Tt(t))Zo.call(t,e)&&Ho(o,e,t[e]);return o},K=(o,t)=>mi(o,li(t));var ee=(o,t)=>{var e={};for(var n in o)zo.call(o,n)&&t.indexOf(n)<0&&(e[n]=o[n]);if(o!=null&&Tt)for(var n of Tt(o))t.indexOf(n)<0&&Zo.call(o,n)&&(e[n]=o[n]);return e};import Ci from"axios";import{get as $t,set as Xo}from"lodash";import di from"pino";import pi from"pino-pretty";var jt={},en={},fi=pi({colorize:!0,levelFirst:!0,translateTime:"SYS:yyyymmdd HH:MM:ss.l"}),yi=di({base:null,level:"silent"},fi);function M(o){let t=$t(jt,o);if(!t){let e=$t(en,o);t=yi.child({name:o},{level:e}),Xo(jt,o,t)}return t.logWithError=(...e)=>{let n=e.map(r=>typeof r=="object"?JSON.stringify(r):r).join(", ");throw new Error(n)},t}function ru(o,t){Xo(en,o,t);let e=$t(jt,o);e&&(e.level=t)}import{PublicKey as Mi}from"@solana/web3.js";import Bi from"bn.js";import Ti from"big.js";import Lt from"bn.js";import V from"bn.js";var At=M("Raydium_bignumber"),Yt=(n=>(n[n.ROUND_DOWN=0]="ROUND_DOWN",n[n.ROUND_HALF_UP=1]="ROUND_HALF_UP",n[n.ROUND_UP=2]="ROUND_UP",n))(Yt||{}),ae=new V(0),pe=new V(1),cu=new V(2),mu=new V(3),lu=new V(5),be=new V(10),nn=new V(100),du=new V(1e3),pu=new V(1e4),tn=9007199254740991;function S(o){if(o instanceof V)return o;if(typeof o=="string"){if(o.match(/^-?[0-9]+$/))return new V(o);At.logWithError(`invalid BigNumberish string: ${o}`)}return typeof o=="number"?(o%1&&At.logWithError(`BigNumberish number underflow: ${o}`),(o>=tn||o<=-tn)&&At.logWithError(`BigNumberish number overflow: ${o}`),new V(String(o))):typeof o=="bigint"?new V(o.toString()):(At.logWithError(`invalid BigNumberish value: ${o}`),new V(0))}function Qt(o){return be.pow(S(o))}function ue(o){var u;if(o===void 0)return{denominator:"1",numerator:"0"};if(o instanceof V)return{numerator:o.toString(),denominator:"1"};if(o instanceof I)return{denominator:o.denominator.toString(),numerator:o.numerator.toString()};let t=String(o),[,e="",n="",r=""]=(u=t.replace(",","").match(/(-?)(\d*)\.?(\d*)/))!=null?u:[],i="1"+"0".repeat(r.length),a=e+(n==="0"?"":n)+r||"0";return{denominator:i,numerator:a,sign:e,int:n,dec:r}}function Ht(o,t){let e=o.divmod(t);return e.mod.isZero()?e.div:e.div.negative!==0?e.div.isubn(1):e.div.iaddn(1)}function bi(o){var n;let[,t="",e=""]=(n=o.toFixed(2).match(/(-?)(\d*)\.?(\d*)/))!=null?n:[];return`${t}${e}`}function xe(o,t=0){return o instanceof V?o:new V(bi(Ke(o).mul(be.pow(new V(String(t))))))}function Ke(o){if(o instanceof oe)return new I(o.numerator,o.denominator);if(o instanceof j)return o.adjusted;if(o instanceof O)try{return Ke(o.toExact())}catch{return new I(ae)}if(o instanceof I)return o;let t=String(o),e=ue(t);return new I(e.numerator,e.denominator)}function It(o,t){let{numerator:e,denominator:n}=ue(o);return new oe(new V(e),new V(n).mul(t!=null&&t.alreadyDecimaled?new V(100):new V(1)))}function Qe(o){let{token:t,numberPrice:e,decimalDone:n}=o,r=new C({mint:"",decimals:6,symbol:"usd",name:"usd",skipMint:!0}),{numerator:i,denominator:a}=ue(e),u=n?new V(i).mul(be.pow(new V(t.decimals))):i,c=new V(a).mul(be.pow(new V(r.decimals)));return new j({baseToken:r,denominator:c.toString(),quoteToken:new C(K(x({},t),{skipMint:!0,mint:""})),numerator:u.toString()})}function rn(o,t){if(o==null||t==null)return;let e=Ke(o),n=Ke(t);return e.mul(n)}function on(o){let t=new C({mint:"",decimals:6,symbol:"usd",name:"usd",skipMint:!0}),e=xe(rn(o,10**t.decimals));return new O(t,e)}function He(o,t){return on(!t||!o?0:rn(o,t))}import gi from"toformat";var Pi=gi,ze=Pi;import St from"big.js";import wi from"decimal.js-light";var xt=M("module/fraction"),zt=ze(St),Ze=ze(wi),hi={[0]:Ze.ROUND_DOWN,[1]:Ze.ROUND_HALF_UP,[2]:Ze.ROUND_UP},ki={[0]:St.roundDown,[1]:St.roundHalfUp,[2]:St.roundUp},I=class{constructor(t,e=pe){this.numerator=S(t),this.denominator=S(e)}get quotient(){return this.numerator.div(this.denominator)}invert(){return new I(this.denominator,this.numerator)}add(t){let e=t instanceof I?t:new I(S(t));return this.denominator.eq(e.denominator)?new I(this.numerator.add(e.numerator),this.denominator):new I(this.numerator.mul(e.denominator).add(e.numerator.mul(this.denominator)),this.denominator.mul(e.denominator))}sub(t){let e=t instanceof I?t:new I(S(t));return this.denominator.eq(e.denominator)?new I(this.numerator.sub(e.numerator),this.denominator):new I(this.numerator.mul(e.denominator).sub(e.numerator.mul(this.denominator)),this.denominator.mul(e.denominator))}mul(t){let e=t instanceof I?t:new I(S(t));return new I(this.numerator.mul(e.numerator),this.denominator.mul(e.denominator))}div(t){let e=t instanceof I?t:new I(S(t));return new I(this.numerator.mul(e.denominator),this.denominator.mul(e.numerator))}toSignificant(t,e={groupSeparator:""},n=1){Number.isInteger(t)||xt.logWithError(`${t} is not an integer.`),t<=0&&xt.logWithError(`${t} is not positive.`),Ze.set({precision:t+1,rounding:hi[n]});let r=new Ze(this.numerator.toString()).div(this.denominator.toString()).toSignificantDigits(t);return r.toFormat(r.decimalPlaces(),e)}toFixed(t,e={groupSeparator:""},n=1){return Number.isInteger(t)||xt.logWithError(`${t} is not an integer.`),t<0&&xt.logWithError(`${t} is negative.`),zt.DP=t,zt.RM=ki[n]||1,new zt(this.numerator.toString()).div(this.denominator.toString()).toFormat(t,e)}isZero(){return this.numerator.isZero()}};var Ai=M("Raydium_amount"),an=ze(Ti);function Ii(o,t){let e="0",n="0";if(o.includes(".")){let r=o.split(".");r.length===2?([e,n]=r,n=n.padEnd(t,"0")):Ai.logWithError(`invalid number string, num: ${o}`)}else e=o;return[e,n.slice(0,t)||n]}var O=class extends I{constructor(e,n,r=!0,i){let a=new Lt(0),u=be.pow(new Lt(e.decimals));if(r)a=S(n);else{let c=new Lt(0),m=new Lt(0);if(typeof n=="string"||typeof n=="number"||typeof n=="bigint"){let[d,p]=Ii(n.toString(),e.decimals);c=S(d),m=S(p)}c=c.mul(u),a=c.add(m)}super(a,u);this.logger=M(i||"Amount"),this.token=e}get raw(){return this.numerator}isZero(){return this.raw.isZero()}gt(e){return this.token.equals(e.token)||this.logger.logWithError("gt token not equals"),this.raw.gt(e.raw)}lt(e){return this.token.equals(e.token)||this.logger.logWithError("lt token not equals"),this.raw.lt(e.raw)}add(e){return this.token.equals(e.token)||this.logger.logWithError("add token not equals"),new O(this.token,this.raw.add(e.raw))}subtract(e){return this.token.equals(e.token)||this.logger.logWithError("sub token not equals"),new O(this.token,this.raw.sub(e.raw))}toSignificant(e=this.token.decimals,n,r=0){return super.toSignificant(e,n,r)}toFixed(e=this.token.decimals,n,r=0){return e>this.token.decimals&&this.logger.logWithError("decimals overflow"),super.toFixed(e,n,r)}toExact(e={groupSeparator:""}){return an.DP=this.token.decimals,new an(this.numerator.toString()).div(this.denominator.toString()).toFormat(e)}};import{PublicKey as xi}from"@solana/web3.js";var sn={symbol:"SOL",name:"Solana",decimals:9},Y={symbol:"WSOL",name:"Wrapped SOL",mint:"So11111111111111111111111111111111111111112",decimals:9,extensions:{coingeckoId:"solana"}},Xe={isQuantumSOL:!0,isLp:!1,official:!0,mint:new xi(Y.mint),decimals:9,symbol:"SOL",id:"sol",name:"solana",icon:"https://img.raydium.io/icon/So11111111111111111111111111111111111111112.png",extensions:{coingeckoId:"solana"}};import{PublicKey as Zt}from"@solana/web3.js";import{TOKEN_PROGRAM_ID as Si}from"@solana/spl-token";import{PublicKey as ne,SystemProgram as Li,SYSVAR_RENT_PUBKEY as _i}from"@solana/web3.js";function s({pubkey:o,isSigner:t=!1,isWritable:e=!0}){return{pubkey:o,isWritable:e,isSigner:t}}var Oe=[s({pubkey:Si,isWritable:!1}),s({pubkey:Li.programId,isWritable:!1}),s({pubkey:_i,isWritable:!1})];function E({publicKey:o,transformSol:t}){if(o instanceof ne)return t&&o.equals(U)?Se:o;if(t&&o===U.toBase58())return Se;if(typeof o=="string")try{return new ne(o)}catch{throw new Error("invalid public key")}throw new Error("invalid public key")}function un(o){try{return new ne(o)}catch{return o}}var _t=new ne("4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R"),cn=new ne("Ea5SjE2Y6yvCeW5dYTn7PYMuW5ikXkvbGdcmSnXeaLjS"),Vu=new ne("SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt"),mn=new ne("EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"),ln=new ne("Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB"),dn=new ne("mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So"),pn=new ne("7dHbWXmci3dT8UFYWYZweBLXgycu7Y3iL6trKn1Y7ARj"),fn=new ne("USDH1SM1ojwWUga67PGrgFWUHibbjqMvuMaDkRJTgkX"),Cu=new ne("NRVwhjBQiUPYtfDT5zRBVJajzFQHaBUNtC7SNVvqRFa"),Wu=new ne("ANAxByE6G2WjFp7A4NqtWYXb3mgruyzZYg3spfxe6Lbo"),yn=new ne("7vfCXTUXx5WJV5JADk17DUJ4ksgau7utNKj4b963voxs"),Se=new ne("So11111111111111111111111111111111111111112"),U=ne.default;var Xt=class{constructor({mint:t,decimals:e,symbol:n="UNKNOWN",name:r="UNKNOWN",skipMint:i=!1}){if(t===U.toBase58()||t instanceof Zt&&U.equals(t)){this.decimals=Y.decimals,this.symbol=Y.symbol,this.name=Y.name,this.mint=new Zt(Y.mint);return}this.decimals=e,this.symbol=n,this.name=r,this.mint=i?Zt.default:E({publicKey:t})}equals(t){return this===t?!0:this.mint.equals(t.mint)}},C=Xt;C.WSOL=new Xt(Y);var to=class{constructor({decimals:t,symbol:e="UNKNOWN",name:n="UNKNOWN"}){this.decimals=t,this.symbol=e,this.name=n}equals(t){return this===t}},eo=to;eo.SOL=new to(sn);function zu(o,t){return o instanceof C&&t instanceof C?o.equals(t):o instanceof C||t instanceof C?!1:o===t}var bn=new I(nn),oe=class extends I{toSignificant(t=5,e,n){return this.mul(bn).toSignificant(t,e,n)}toFixed(t=2,e,n){return this.mul(bn).toFixed(t,e,n)}};var Ri=M("Raydium_price"),j=class extends I{constructor(e){let{baseToken:n,quoteToken:r,numerator:i,denominator:a}=e;super(i,a);this.baseToken=n,this.quoteToken=r,this.scalar=new I(Qt(n.decimals),Qt(r.decimals))}get raw(){return new I(this.numerator,this.denominator)}get adjusted(){return super.mul(this.scalar)}invert(){return new j({baseToken:this.quoteToken,quoteToken:this.baseToken,denominator:this.numerator,numerator:this.denominator})}mul(e){this.quoteToken!==e.baseToken&&Ri.logWithError("mul token not equals");let n=super.mul(e);return new j({baseToken:this.baseToken,quoteToken:e.quoteToken,denominator:n.denominator,numerator:n.numerator})}toSignificant(e=this.quoteToken.decimals,n,r){return this.adjusted.toSignificant(e,n,r)}toFixed(e=this.quoteToken.decimals,n,r){return this.adjusted.toFixed(e,n,r)}};async function gn(o){new Promise(t=>setTimeout(t,o))}function kc(){return new Date().getTime()}var Ki=[C,O,Mi,I,Bi,j,oe];function Oi(o){return typeof o=="object"&&o!==null&&!Ki.some(t=>typeof t=="object"&&o instanceof t)}function me(o){return typeof o=="string"?un(o):Array.isArray(o)?o.map(t=>me(t)):Oi(o)?Object.fromEntries(Object.entries(o).map(([t,e])=>[t,me(e)])):o}import{PACKET_DATA_SIZE as qi,PublicKey as hn,sendAndConfirmTransaction as Pn,Transaction as Rt}from"@solana/web3.js";var Le=M("Raydium_txTool"),Mt=class{constructor(t){this.instructions=[];this.endInstructions=[];this.signers=[];this.connection=t.connection,this.feePayer=t.feePayer,this.signAllTransactions=t.signAllTransactions,this.owner=t.owner}get AllTxData(){return{instructions:this.instructions,endInstructions:this.endInstructions,signers:this.signers}}get allInstructions(){return[...this.instructions,...this.endInstructions]}addInstruction({instructions:t=[],endInstructions:e=[],signers:n=[]}){return this.instructions.push(...t),this.endInstructions.push(...e),this.signers.push(...n),this}build(t){let e=new Rt;return this.allInstructions.length&&e.add(...this.allInstructions),e.feePayer=this.feePayer,{transaction:e,signers:this.signers,execute:async()=>{var r;let n=await wn(this.connection);if(e.recentBlockhash=n,(r=this.owner)!=null&&r.isKeyPair)return Pn(this.connection,e,this.signers);if(this.signAllTransactions){this.signers.length&&e.partialSign(...this.signers);let i=await this.signAllTransactions([e]);return await this.connection.sendRawTransaction(i[0].serialize(),{skipPreflight:!0})}throw new Error("please connect wallet first")},extInfo:t||{}}}buildMultiTx(t){let{extraPreBuildData:e=[],extInfo:n}=t,{transaction:r}=this.build(n),i=e.filter(c=>c.transaction.instructions.length>0),a=[...i.map(c=>c.transaction),r],u=[...i.map(c=>c.signers),this.signers];return{transactions:a,signers:u,execute:async()=>{var m;let c=await wn(this.connection);if((m=this.owner)!=null&&m.isKeyPair)return await Promise.all(a.map(async(d,p)=>(d.recentBlockhash=c,await Pn(this.connection,d,u[p]))));if(this.signAllTransactions){let d=a.map((f,b)=>(f.recentBlockhash=c,u[b].length&&f.partialSign(...u[b]),f)),p=await this.signAllTransactions(d),y=[];for(let f=0;f<p.length;f+=1){let b=await this.connection.sendRawTransaction(p[f].serialize(),{skipPreflight:!0});y.push(b)}return y}throw new Error("please connect wallet first")},extInfo:n||{}}}};async function wn(o){var t,e;try{return((e=await((t=o.getLatestBlockhash)==null?void 0:t.call(o)))==null?void 0:e.blockhash)||(await o.getRecentBlockhash()).blockhash}catch{return(await o.getRecentBlockhash()).blockhash}}function Fi(o,t){o.length<1&&Le.logWithError(`no instructions provided: ${o.toString()}`),t.length<1&&Le.logWithError(`no signers provided:, ${t.toString()}`);let e=new Rt;e.recentBlockhash="11111111111111111111111111111111",e.feePayer=t[0],e.add(...o);let n=e.compileMessage().serialize();return t.length+t.length*64+n.length}async function kn(o,t,e){let n=new hn("RaydiumSimuLateTransaction11111111111111111"),r=[],i=new Rt;i.feePayer=n;for(let c of t)Fi([...i.instructions,c],[n])>qi&&(r.push(i),i=new Rt,i.feePayer=n),i.add(c);i.instructions.length>0&&r.push(i);let a=[];try{a=await Promise.all(r.map(c=>o.simulateTransaction(c)))}catch(c){c instanceof Error&&Le.logWithError(`failed to simulate for instructions, RPC_ERROR, ${c.message}`)}let u=[];for(let c of a){let{value:m}=c;if(Le.debug(`simulate result: ${JSON.stringify(c)}`),m.logs){let d=m.logs.filter(p=>p&&p.includes(e));Le.debug(`filteredLog: ${JSON.stringify(u)}`),d.length||Le.logWithError(` "simulate log not match keyword, keyword: ${e}`),u.push(...d)}}return u}function Tn(o,t){let e=o.match(/{["\w:,]+}/g);return!e||e.length!==1?Le.logWithError(`simulate log fail to match json, keyword: ${t}`):e[0]}function ge(o,t){let n=new RegExp(`"${t}":(\\d+)`,"g").exec(o);return!n||n.length!==2?Le.logWithError(`simulate log fail to match key", key: ${t}`):n[1]}async function Pe(o,t){let[e,n]=await hn.findProgramAddress(o,t);return{publicKey:e,nonce:n}}var le=class{constructor(t){this._owner=t}get publicKey(){return le.isKeyPair(this._owner)?this._owner.publicKey:this._owner}get signer(){return le.isKeyPair(this._owner)?this._owner:void 0}get isKeyPair(){return le.isKeyPair(this._owner)}get isPublicKey(){return le.isPublicKey(this._owner)}static isKeyPair(t){return t.secretKey!==void 0}static isPublicKey(t){return!le.isKeyPair(t)}};function An(o,t=1,e=[]){let n=[...o];if(t<=0)return e;for(;n.length;)e.push(n.splice(0,t));return e}function Kc(o,...t){return o.filter(e=>t.every(n=>n.includes(e)))}function Oc(o,...t){return o.filter(e=>t.every(n=>!n.includes(e)))}function qc(o){return[...new Set(o)]}import{PublicKey as Ni}from"@solana/web3.js";var oo=M("Raydium_accountInfo_util");async function vi(o,t,e){let{batchRequest:n,commitment:r}=x({batchRequest:!1},e),i=An(t,100),a=new Array(i.length).fill([]);if(n){let u=i.map(m=>{let d=o._buildArgs([m.map(p=>p.toBase58())],r,"base64");return{methodName:"getMultipleAccounts",args:d}});a=(await o._rpcBatchRequest(u)).map(m=>(m.error&&oo.logWithError(`failed to get info for multiple accounts, RPC_ERROR, ${m.error.message}`),m.result.value.map(d=>{if(d){let{data:p,executable:y,lamports:f,owner:b,rentEpoch:h}=d;return p.length!==2&&p[1]!=="base64"&&oo.logWithError("info must be base64 encoded, RPC_ERROR"),{data:Buffer.from(p[0],"base64"),executable:y,lamports:f,owner:new Ni(b),rentEpoch:h}}return null})))}else try{a=await Promise.all(i.map(u=>o.getMultipleAccountsInfo(u,r)))}catch(u){u instanceof Error&&oo.logWithError(`failed to get info for multiple accounts, RPC_ERROR, ${u.message}`)}return a.flat()}async function In(o,t,e){let n=await vi(o,t.map(r=>r.pubkey),e);return t.map((r,i)=>K(x({},r),{accountInfo:n[i]}))}function te(o){if(o instanceof oe)return new I(o.numerator,o.denominator);if(o instanceof j)return o.adjusted;if(o instanceof O)try{return te(o.toExact())}catch{return new I(ae)}if(o instanceof I)return o;let t=String(o),e=ue(t);return new I(e.numerator,e.denominator)}function $c(o){var n;if(o instanceof oe)return{fr:new I(o.numerator,o.denominator)};if(o instanceof j)return{fr:o.adjusted};if(o instanceof O)return{fr:te(o.toExact()),decimals:o.token.decimals};if(o instanceof I)return{fr:o};let t=String(o),e=ue(t);return{fr:new I(e.numerator,e.denominator),decimals:(n=e.dec)==null?void 0:n.length}}function jc(o,t){if(o==null||t==null)return!1;let e=te(o),n=te(t);return e.sub(n).numerator,e.sub(n).numerator.lt(ae)}function Di(o,t){if(o==null||t==null)return!1;let e=te(o),n=te(t);return e.sub(n).numerator.gt(ae)}function Yc(o,t){if(o==null||t==null)return!1;let e=te(o),n=te(t);return e.sub(n).numerator.lte(ae)}function xn(o,t){if(o==null||t==null)return!1;let e=te(o),n=te(t);return e.sub(n).numerator.gte(ae)}function Ei(o,t){if(o==null||t==null)return!1;let e=te(o),n=te(t);return e.sub(n).numerator.eq(ae)}function no(o,t){if(o==null||t==null)return;let e=te(o),n=te(t);try{return e.div(n)}catch{return e}}function Sn(o,t){if(o==null||t==null)return;let e=te(o),n=te(t);return e.sub(n)}function Bt(o){return o==null?!1:!Ei(o,0)}function Ln(o,t){return Di(t,o)?t:o}var _n=o=>typeof o=="number",Rn=o=>o?new Date(o):new Date,Vi=o=>Rn(o).getTime();function et(o,t,e){let n=_n(t)?t*((e==null?void 0:e.unit)==="s"?1e3:1):t;return new Date(o).getTime()<=n}function Ee(o,t,e){let n=_n(t)?t*((e==null?void 0:e.unit)==="s"?1e3:1):t;return new Date(o).getTime()>n}function ro(o,t){let n=Vi(o)+(t.days?t.days*24*60*60*1e3:0)+(t.hours?t.hours*60*60*1e3:0)+(t.minutes?t.minutes*60*1e3:0)+(t.seconds?t.seconds*1e3:0)+(t.milliseconds?t.milliseconds:0);return Rn(n)}var Ve=M("Raydium_Api");async function lm(o,t,e=1e3){let n;for(;n==null;)try{Ve.debug(`Request ${o} through endlessRetry`),n=await t()}catch(r){Ve.error(`Request ${o} failed, retry after ${e} ms`,r),await gn(e)}return n}var Kt=class{constructor({cluster:t,timeout:e}){this.cluster=t,this.api=Ci.create({baseURL:"https://api.raydium.io/v2",timeout:e}),this.api.interceptors.request.use(n=>{let{method:r,baseURL:i,url:a}=n;return Ve.debug(`${r==null?void 0:r.toUpperCase()} ${i}${a}`),n},n=>(Ve.error("Request failed"),Promise.reject(n))),this.api.interceptors.response.use(n=>{let{config:r,data:i,status:a}=n,{method:u,baseURL:c,url:m}=r;return Ve.debug(`${u==null?void 0:u.toUpperCase()} ${c}${m}  ${a}`),i},n=>{let{config:r,response:i={}}=n,{status:a}=i,{method:u,baseURL:c,url:m}=r;return Ve.error(`${u.toUpperCase()} ${c}${m} ${a||n.message}`),Promise.reject(n)})}async getTokens(){return this.api.get("/sdk/token/raydium.mainnet.json")}async getLiquidityPools(){return this.api.get(`/sdk/liquidity/${this.cluster}.json`)}async getPairsInfo(){return this.api.get("https://api.raydium.io/v2/main/pairs")}async getFarmPools(){return this.api.get(`/sdk/farm-v2/${this.cluster}.json`)}async getCoingeckoPrice(t){return this.api.get(`https://api.coingecko.com/api/v3/simple/price?ids=${t.join(",")}&vs_currencies=usd`)}async getRaydiumTokenPrice(){return this.api.get("https://api.raydium.io/v2/main/price")}async getBlockSlotCountForSecond(t){if(!t)return 2;let n=(await this.api.post(t,{id:"getRecentPerformanceSamples",jsonrpc:"2.0",method:"getRecentPerformanceSamples",params:[4]})).result.map(r=>r.numSlots);return n.reduce((r,i)=>r+i,0)/n.length/60}};import{merge as zs}from"lodash";var Ot="please provide owner in load() initialization or you can set by calling raydium.setOwner(owner)",Mn="please provide connection in load() initialization or set it by raydium.setConnection(connection)";import{getAssociatedTokenAddress as Vn,createAssociatedTokenAccountInstruction as Cn,TOKEN_PROGRAM_ID as Qa}from"@solana/spl-token";import{PublicKey as Ha}from"@solana/web3.js";var io=(...o)=>o.map(t=>{try{return typeof t=="object"?JSON.stringify(t):t}catch{return t}}).join(", "),ie=class{constructor({scope:t,moduleName:e}){this.disabled=!1;this.scope=t,this.logger=M(e)}createTxBuilder(t){return this.scope.checkOwner(),new Mt({connection:this.scope.connection,feePayer:t||this.scope.ownerPubKey,owner:this.scope.owner,signAllTransactions:this.scope.signAllTransactions})}logDebug(...t){this.logger.debug(io(t))}logInfo(...t){this.logger.info(io(t))}logAndCreateError(...t){let e=io(t);throw new Error(e)}checkDisabled(){(this.disabled||!this.scope)&&this.logAndCreateError("module not working")}};import{createInitializeAccountInstruction as va,createCloseAccountInstruction as Da,createTransferInstruction as Ea,TOKEN_PROGRAM_ID as Va}from"@solana/spl-token";import{Keypair as Ca,PublicKey as Wa,SystemProgram as Ua}from"@solana/web3.js";import Ga from"bn.js";import{PublicKey as Oa}from"@solana/web3.js";import Nn,{isBN as vn}from"bn.js";import{bits as Wi,BitStructure as Ui,blob as Gi,Blob as Ji,cstr as $i,f32 as ji,f32be as Yi,f64 as Qi,f64be as Hi,greedy as zi,Layout as Zi,ns64 as Xi,ns64be as ea,nu64 as ta,nu64be as oa,offset as na,s16 as ra,s16be as ia,s24 as aa,s24be as sa,s32 as ua,s32be as ca,s40 as ma,s40be as la,s48 as da,s48be as pa,s8 as fa,seq as ya,struct as km,Structure as ba,u16 as ga,u16be as Pa,u24 as wa,u24be as ha,u32 as ka,u32be as Ta,u40 as Aa,u40be as Ia,u48 as xa,u48be as Sa,u8 as La,UInt as _a,union as Ra,Union as Ma,unionLayoutDiscriminator as Ba,utf8 as Ka}from"@solana/buffer-layout";var tt=Zi,Bn=ba,Kn=Ma,Tm=Ui,ao=_a,On=Ji,Am=zi,qt=La,Im=ga,xm=wa,ot=ka,Sm=Aa,Lm=xa,_m=ta,Rm=Pa,Mm=ha,Bm=Ta,Km=Ia,Om=Sa,qm=oa,Fm=fa,Nm=ra,vm=aa,Dm=ua,Em=ma,Vm=da,Cm=Xi,Wm=ia,Um=sa,Gm=ca,Jm=la,$m=pa,jm=ea,Ym=ji,Qm=Yi,Hm=Qi,zm=Hi;var qn=ya,Fn=Ra,Zm=Ba,Ce=Gi,Xm=$i,el=Ka,so=Wi,uo=na;var We=class extends tt{constructor(e,n,r){super(e,r);this.blob=Ce(e),this.signed=n}decode(e,n=0){let r=new Nn(this.blob.decode(e,n),10,"le");return this.signed?r.fromTwos(this.span*8).clone():r}encode(e,n,r=0){return typeof e=="number"&&(e=new Nn(e)),this.signed&&(e=e.toTwos(this.span*8)),this.blob.encode(e.toArrayLike(Buffer,"le",this.span),n,r)}},Dn=class extends tt{constructor(e){super(8,e);this._lower=so(ot(),!1),this._upper=so(ot(),!1)}addBoolean(e){this._lower.fields.length<32?this._lower.addBoolean(e):this._upper.addBoolean(e)}decode(e,n=0){let r=this._lower.decode(e,n),i=this._upper.decode(e,n+this._lower.span);return x(x({},r),i)}encode(e,n,r=0){return this._lower.encode(e,n,r)+this._upper.encode(e,n,r+this._lower.span)}};function v(o){return new ao(1,o)}function qe(o){return new ao(4,o)}function l(o){return new We(8,!1,o)}function Q(o){return new We(16,!1,o)}function il(o){return new We(8,!0,o)}function al(o){return new We(16,!0,o)}var we=class extends tt{constructor(e,n,r,i){super(e.span,i);this.layout=e,this.decoder=n,this.encoder=r}decode(e,n){return this.decoder(this.layout.decode(e,n))}encode(e,n,r){return this.layout.encode(this.encoder(e),n,r)}getSpan(e,n){return this.layout.getSpan(e,n)}};function k(o){return new we(Ce(32),t=>new Oa(t),t=>t.toBuffer(),o)}var co=class extends tt{constructor(e,n){super(-1,n);this.layout=e,this.discriminator=qt()}encode(e,n,r=0){return e==null?this.discriminator.encode(0,n,r):(this.discriminator.encode(1,n,r),this.layout.encode(e,n,r+1)+1)}decode(e,n=0){let r=this.discriminator.decode(e,n);if(r===0)return null;if(r===1)return this.layout.decode(e,n+1);throw new Error("Invalid option "+this.property)}getSpan(e,n=0){let r=this.discriminator.decode(e,n);if(r===0)return 1;if(r===1)return this.layout.getSpan(e,n+1)+1;throw new Error("Invalid option "+this.property)}};function sl(o,t){return new co(o,t)}function ul(o){return new we(qt(),qa,Fa,o)}function qa(o){if(o===0)return!1;if(o===1)return!0;throw new Error("Invalid bool: "+o)}function Fa(o){return o?1:0}function cl(o,t){let e=ot("length"),n=R([e,H(o,uo(e,-e.span),"values")]);return new we(n,({values:r})=>r,r=>({values:r}),t)}function ml(o,t,e){let n=R([l("tag"),t.replicate("data")]);function r({tag:i,data:a}){if(!i.eq(o))throw new Error("Invalid tag, expected: "+o.toString("hex")+", got: "+i.toString("hex"));return a}return new we(n,r,i=>({tag:o,data:i}),e)}function Na(o){let t=ot("length"),e=R([t,Ce(uo(t,-t.span),"data")]);return new we(e,({data:n})=>n,n=>({data:n}),o)}function ll(o){return new we(Na(),t=>t.toString("utf-8"),t=>Buffer.from(t,"utf-8"),o)}function dl(o,t){let e=Fn(qt(),t);return o.forEach((n,r)=>e.addVariant(r,n,n.property)),e}function pl(o,t,e){let n=R([H(o,t,"values")]);return new we(n,({values:r})=>r,r=>({values:r}),e)}var mo=class extends Bn{decode(t,e){return super.decode(t,e)}};function R(o,t,e){return new mo(o,t,e)}var lo=class extends Kn{encodeInstruction(t){let e=Math.max(...Object.values(this.registry).map(r=>r.span)),n=Buffer.alloc(e);return n.slice(0,this.encode(t,n))}decodeInstruction(t){return this.decode(t)}};function fl(o,t,e){return new lo(o,t,e)}var po=class extends On{decode(t,e){let n=super.decode(t,e);if(!n.every(r=>r===0))throw new Error("nonzero padding bytes");return n}};function yl(o){return new po(o)}function H(o,t,e){let n,r=typeof t=="number"?t:vn(t)?t.toNumber():new Proxy(t,{get(i,a){if(!n){let u=Reflect.get(i,"count");n=vn(u)?u.toNumber():u,Reflect.set(i,"count",n)}return Reflect.get(i,a)},set(i,a,u){return a==="count"&&(n=u),Reflect.set(i,a,u)}});return qn(o,r,e)}var he=R([k("mint"),k("owner"),l("amount"),qe("delegateOption"),k("delegate"),v("state"),qe("isNativeOption"),l("isNative"),l("delegatedAmount"),qe("closeAuthorityOption"),k("closeAuthority")]);function Ja(o){let{mint:t,tokenAccount:e,owner:n}=o;return va(e,t,n)}function Fe(o){let{tokenAccount:t,payer:e,multiSigners:n=[],owner:r}=o;return Da(t,e,r,n)}async function _e(o){let{connection:t,amount:e,commitment:n,payer:r,owner:i,skipCloseAccount:a}=o,u=await t.getMinimumBalanceForRentExemption(he.span,n),c=S(e).add(new Ga(u)),m=Ca.generate();return{signers:[m],instructions:[Ua.createAccount({fromPubkey:r,newAccountPubkey:m.publicKey,lamports:c.toNumber(),space:he.span,programId:Va}),Ja({mint:new Wa(Y.mint),tokenAccount:m.publicKey,owner:i})],endInstructions:a?[]:[Fe({tokenAccount:m.publicKey,payer:r,owner:i})]}}function Ue({source:o,destination:t,owner:e,amount:n,multiSigners:r=[]}){return Ea(o,t,e,S(n).toNumber(),r)}import{PublicKey as $a}from"@solana/web3.js";import ja from"bn.js";var Ya=M("Raydium_Util");function En({solAccountResp:o,tokenAccountResp:t}){let e=[],n=[];for(let{pubkey:r,account:i}of t.value){if(i.data.length!==he.span)throw Ya.error("invalid token account layout length","publicKey",r.toBase58()),new Error("invalid token account layout length");let a=he.decode(i.data),{mint:u,amount:c}=a;e.push({publicKey:r,mint:u,amount:c,isNative:!1}),n.push({pubkey:r,accountInfo:a})}return o&&e.push({mint:$a.default,amount:new ja(o.lamports),isNative:!0}),{tokenAccounts:e,tokenAccountRawInfos:n}}var nt=class extends ie{constructor(e){super(e);this._tokenAccounts=[];this._tokenAccountRawInfos=[];this._ataCache=new Map;this._accountListener=[];this._clientOwnedToken=!1;let{tokenAccounts:n,tokenAccountRawInfos:r}=e;this._tokenAccounts=n||[],this._tokenAccountRawInfos=r||[],this._clientOwnedToken=!!(n||r)}get tokenAccounts(){return this._tokenAccounts}get tokenAccountRawInfos(){return this._tokenAccountRawInfos}updateTokenAccount({tokenAccounts:e,tokenAccountRawInfos:n}){return e&&(this._tokenAccounts=e),n&&(this._tokenAccountRawInfos=n),this._accountChangeListenerId&&this.scope.connection.removeAccountChangeListener(this._accountChangeListenerId),this._accountChangeListenerId=void 0,this._clientOwnedToken=!0,this}addAccountChangeListener(e){return this._accountListener.push(e),this}removeAccountChangeListener(e){return this._accountListener=this._accountListener.filter(n=>n!==e),this}async getAssociatedTokenAccount(e){this.scope.checkOwner();let n=`${this.scope.ownerPubKey.toBase58()}_${e.toBase58()}`;if(this._ataCache.has(n))return this._ataCache.get(n);let r=await Vn(e,this.scope.ownerPubKey,!0);return this._ataCache.set(n,r),r}async fetchWalletTokenAccounts(e){if(this._clientOwnedToken||!(e!=null&&e.forceUpdate)&&this._tokenAccounts.length)return{tokenAccounts:this._tokenAccounts,tokenAccountRawInfos:this._tokenAccountRawInfos};this.scope.checkOwner();let r=x(x({},{}),e),i=await this.scope.connection.getAccountInfo(this.scope.ownerPubKey,r.commitment),a=await this.scope.connection.getTokenAccountsByOwner(this.scope.ownerPubKey,{programId:Qa},r.commitment),{tokenAccounts:u,tokenAccountRawInfos:c}=En({solAccountResp:i,tokenAccountResp:a});return this._tokenAccounts=u,this._tokenAccountRawInfos=c,this._accountChangeListenerId&&this.scope.connection.removeAccountChangeListener(this._accountChangeListenerId),this._accountChangeListenerId=this.scope.connection.onAccountChange(this.scope.ownerPubKey,()=>this.fetchWalletTokenAccounts({forceUpdate:!0}),"confirmed"),{tokenAccounts:u,tokenAccountRawInfos:c}}async getCreatedTokenAccount({mint:e,associatedOnly:n=!0}){await this.fetchWalletTokenAccounts();let r=this._tokenAccounts.filter(({mint:a})=>a==null?void 0:a.equals(e)).sort((a,u)=>a.amount.lt(u.amount)?1:-1),i=await this.getAssociatedTokenAccount(e);for(let a of r){let{publicKey:u}=a;if(u)return n&&i.equals(u),u}}async checkOrCreateAta({mint:e,autoUnwrapWSOLToSOL:n}){var u;await this.fetchWalletTokenAccounts();let r=(u=this.scope.account.tokenAccounts.find(({mint:c})=>(c==null?void 0:c.toBase58())===e.toBase58()))==null?void 0:u.publicKey,i=this.scope.ownerPubKey,a={};if(!r){let c=await this.getAssociatedTokenAccount(e),m=await Cn(i,c,i,e);a.instructions=[m],r=c}return n&&Y.mint===e.toBase58()&&(a.endInstructions=[Fe({owner:i,payer:i,tokenAccount:r})]),{pubKey:r,newInstructions:a}}async handleTokenAccount(e){let{side:n,amount:r,mint:i,tokenAccount:a,payer:u=this.scope.ownerPubKey,bypassAssociatedCheck:c,skipCloseAccount:m}=e,d=this.createTxBuilder(),p=await Vn(i,this.scope.ownerPubKey,!0);if(new Ha(Y.mint).equals(i)){let y=await _e({connection:this.scope.connection,owner:this.scope.ownerPubKey,payer:u,amount:r,skipCloseAccount:m});return d.addInstruction(y),x({tokenAccount:y.signers[0].publicKey},y)}else if(!a||n==="out"&&!p.equals(a)&&!c)return{tokenAccount:p,instructions:[Cn(this.scope.ownerPubKey,p,this.scope.ownerPubKey,i)]};return{tokenAccount:a}}};import{TOKEN_PROGRAM_ID as ut,createAssociatedTokenAccountInstruction as bs}from"@solana/spl-token";import{Keypair as gs,PublicKey as Z,SystemProgram as br,SYSVAR_CLOCK_PUBKEY as Ps,TransactionInstruction as ct}from"@solana/web3.js";import To from"bn.js";import{PublicKey as at}from"@solana/web3.js";var fo=R([v("instruction")]),yo=R([v("instruction")]),za=R([l("rewardState"),l("rewardOpenTime"),l("rewardEndTime"),l("rewardLastUpdateTime"),l("totalReward"),l("totalRewardEmissioned"),l("rewardClaimed"),l("rewardPerSecond"),Q("accRewardPerShare"),k("rewardVault"),k("rewardMint"),k("rewardSender"),l("rewardType"),H(l(),15,"padding")]),Za=R([l("state"),l("nonce"),k("lpVault"),k("rewardVault"),k(),k(),l(),l(),l("totalReward"),Q("perShareReward"),l("lastSlot"),l("perSlotReward")]),Xa=R([l("state"),l("nonce"),k("lpVault"),k("rewardVaultA"),l("totalRewardA"),Q("perShareRewardA"),l("perSlotRewardA"),v("option"),k("rewardVaultB"),Ce(7),l("totalRewardB"),Q("perShareRewardB"),l("perSlotRewardB"),l("lastSlot"),k()]),es=R([l(),l("state"),l("nonce"),l("validRewardTokenNum"),Q("rewardMultiplier"),l("rewardPeriodMax"),l("rewardPeriodMin"),l("rewardPeriodExtend"),k("lpMint"),k("lpVault"),H(za,5,"rewardInfos"),k("creator"),k(),H(l(),32,"padding")]),Wn=new Proxy(Za,{get(o,t,e){return t==="decode"?(...n)=>{let r=o.decode(...n);return K(x({},r),{version:3,rewardInfos:[{rewardVault:r.rewardVault,totalReward:r.totalReward,perSlotReward:r.perSlotReward,perShareReward:r.perShareReward}]})}:Reflect.get(o,t,e)}}),Un=new Proxy(Xa,{get(o,t,e){return t==="decode"?(...n)=>{let r=o.decode(...n);return K(x({},r),{version:5,rewardInfos:[{rewardVault:r.rewardVaultA,totalReward:r.totalRewardA,perSlotReward:r.perSlotRewardA,perShareReward:r.perShareRewardA},{rewardVault:r.rewardVaultB,totalReward:r.totalRewardB,perSlotReward:r.perSlotRewardB,perShareReward:r.perShareRewardB}]})}:Reflect.get(o,t,e)}}),rt=new Proxy(es,{get(o,t,e){return t==="decode"?(...n)=>{let r=o.decode(...n);return K(x({},r),{version:6,rewardInfos:r.rewardInfos.map(i=>{var a;return K(x({},i),{rewardType:((a=Object.entries(Ft).find(u=>String(u[1])===i.rewardType.toString()))!=null?a:["Standard SPL"])[0]})})})}:Reflect.get(o,t,e)}}),ts=R([l("isSet"),l("rewardPerSecond"),l("rewardOpenTime"),l("rewardEndTime"),l("rewardType")]),bo=R([v("instruction"),l("nonce"),H(ts,5,"rewardTimeInfo")]),go=R([v("instruction"),l("rewardReopenTime"),l("rewardEndTime"),l("rewardPerSecond")]),Po=R([v("instruction"),l("isSet"),l("rewardPerSecond"),l("rewardOpenTime"),l("rewardEndTime")]),Xl=R([l("state"),k("id"),k("owner"),l("deposited"),H(l(),1,"rewardDebts")]),Gn=R([l("state"),k("id"),k("owner"),l("deposited"),H(Q(),1,"rewardDebts"),H(l(),17)]),ed=R([l("state"),k("id"),k("owner"),l("deposited"),H(l(),2,"rewardDebts")]),Jn=R([l("state"),k("id"),k("owner"),l("deposited"),H(Q(),2,"rewardDebts"),H(l(),17)]),$n=R([l(),l("state"),k("id"),k("owner"),l("deposited"),H(Q(),5,"rewardDebts"),H(l(),16)]),it=R([v("instruction"),l("amount")]);var jn=M("Raydium_farm_config"),Yn="EhhTKczWMGQt46ynNeRX1WfeagwwJd7ufHvCDjRxjo5Q",os=new at(Yn),Qn="9KEPoZmtHUrBbhWN1v1KWLMkkvwY6WLtAVUCPRtRjP4z",ns=new at(Qn),Hn="FarmqiPv5eAj3j1GMdMCMUGXqPUvmquZtMy86QH6rzhG",rs=new at(Hn),zn={[Yn]:3,[Qn]:5,[Hn]:6},Zn={3:os,5:ns,6:rs},Xn=new at("4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R"),er=new at("FrspKwj8i3pNmKwXreTveC4fu7KL5ZbGeXdZBe2XViu1"),tr={3:Wn,5:Un,6:rt},or={3:Gn,5:Jn,6:$n},wo=o=>[3,5,6].indexOf(o)!==-1,is={3:10,5:11,6:1},nr=o=>{let t=is[o];return t||jn.logWithError("invalid deposit farm version"),t},as={3:11,5:12,6:2},rr=o=>{let t=as[o];return t||jn.logWithError("invalid withdraw farm version"),t},ir=o=>{var a;let{version:t,rewardInfos:e,rewardTokenAccountsPublicKeys:n}=o,r=`rewardInfo:${JSON.stringify(e)}, rewardAccount:${JSON.stringify(n)}`,i={3:()=>{if(e.length!==1||n.length!==1)return`rewardInfos or rewardTokenAccounts lengths not equal 1: ${r}`},5:()=>{if(e.length!==n.length)return`rewardInfos and rewardTokenAccounts lengths not equal: ${r}`},6:()=>{if(!n.length||e.length!==n.length)return`no rewardTokenAccounts or rewardInfos and rewardTokenAccounts lengths not equal: ${r}`}};return(a=i[t])==null?void 0:a.call(i)},Ft={"Standard SPL":0,"Option tokens":1};import{SystemProgram as ss,SYSVAR_RENT_PUBKEY as us,TransactionInstruction as ar}from"@solana/web3.js";import cs from"bn.js";var ms=M("Raydium_farm_instruction");async function sr(o){let{version:t,id:e,ledger:n,programId:r,owner:i}=o,a={3:9,5:10}[t];a||ms.logWithError(`invalid farm pool version: ${t}`);let u=Buffer.alloc(fo.span);fo.encode({instruction:a},u);let c=[s({pubkey:e}),s({pubkey:n}),s({pubkey:i,isWritable:!1}),s({pubkey:ss.programId,isWritable:!1}),s({pubkey:us,isWritable:!1})];return new ar({programId:r,keys:c,data:u})}function ur(o){var n;let t=Buffer.alloc(bo.span);bo.encode({instruction:0,nonce:new cs(o.nonce),rewardTimeInfo:o.rewardInfoConfig},t);let e=[...Oe,s({pubkey:o.farmKeyPair.publicKey}),s({pubkey:o.farmAuthority,isWritable:!1}),s({pubkey:o.lpVault}),s({pubkey:o.lpMint,isWritable:!1}),s({pubkey:o.lockVault}),s({pubkey:o.lockMint,isWritable:!1}),s({pubkey:(n=o.lockUserAccount)!=null?n:U}),s({pubkey:o.owner,isWritable:!1,isSigner:!0})];for(let r of o.rewardInfo)e.push(s({pubkey:r.rewardMint,isWritable:!1}),s({pubkey:r.rewardVault}),s({pubkey:r.userRewardToken}));return new ar({programId:o.programId,keys:e,data:t})}import z from"bn.js";var st=M("Raydium.farm.util");async function Nt({programId:o,poolId:t,mint:e,type:n}){let{publicKey:r}=await Pe([t.toBuffer(),e.toBuffer(),Buffer.from(n==="lpVault"?"lp_vault_associated_seed":n==="rewardVault"?"reward_vault_associated_seed":"","utf-8")],o);return r}function ls(o){let e=E({publicKey:o}).toBase58();return zn[e]}async function ho({programId:o,poolId:t,owner:e}){let{publicKey:n}=await Pe([t.toBuffer(),e.toBuffer(),Buffer.from(ls(o)===6?"farmer_info_associated_seed":"staker_info_v2_associated_seed","utf-8")],o);return n}var cr=async({programId:o,poolId:t})=>await Pe([t.toBuffer()],o);function mr(o){return Zn[o]}function lr(o){return{isSet:new z(1),rewardPerSecond:S(o.rewardPerSecond),rewardOpenTime:S(o.rewardOpenTime),rewardEndTime:S(o.rewardEndTime),rewardType:S(o.rewardType)}}function ko(o){return S(o.rewardEndTime).sub(S(o.rewardOpenTime)).mul(S(o.rewardPerSecond))}function ds(o){let t=or[o];return t||st.logWithError("invalid version",o),t}function ps(o){let t=tr[o];return t||st.logWithError("invalid version",o),t}function fs(o,t,e,n){if(o.version===3||o.version===5){if(o.lastSlot.gte(new z(e)))return o;let r=new z(e).sub(o.lastSlot);o.lastSlot=new z(e);for(let i of o.rewardInfos){if(t.amount.eq(new z(0)))continue;let a=i.perSlotReward.mul(r);i.perShareReward=i.perShareReward.add(a.mul(new z(10).pow(new z(o.version===3?9:15))).div(t.amount)),i.totalReward=i.totalReward.add(a)}}else if(o.version===6)for(let r of o.rewardInfos){if(r.rewardState.eq(new z(0)))continue;let i=z.min(new z(n),r.rewardEndTime);if(r.rewardOpenTime.gte(i))continue;let u=i.sub(r.rewardLastUpdateTime).mul(r.rewardPerSecond),c=r.totalReward.sub(r.totalRewardEmissioned);c.lt(u)?(u=c,r.rewardLastUpdateTime=r.rewardLastUpdateTime.add(c.div(r.rewardPerSecond))):r.rewardLastUpdateTime=i,!t.amount.eq(new z(0))&&(r.accRewardPerShare=r.accRewardPerShare.add(u.mul(o.rewardMultiplier).div(t.amount)),r.totalRewardEmissioned=r.totalRewardEmissioned.add(u))}return o}async function ys({connection:o,farmPools:t,owner:e,config:n}){var y;let r=!1,i=!1,a=new z(10),u=[];for(let f of t){let b=me(f);b.version===6?i=!0:r=!0,u.push({pubkey:b.id,version:b.version,key:"state",poolId:b.id},{pubkey:b.lpVault,version:b.version,key:"lpVault",poolId:b.id}),e&&u.push({pubkey:await ho({programId:b.programId,poolId:b.id,owner:e}),version:b.version,key:"ledger",poolId:b.id})}let c={},m=await In(o,u,n);for(let{pubkey:f,version:b,key:h,poolId:L,accountInfo:g}of m){let T=L.toBase58();if(c[T]=x({},c[T]),h==="state"){let _=ps(b);(!g||!g.data||g.data.length!==_.span)&&st.logWithError(`invalid farm state account info, pools.id, ${f}`),c[T].state=_.decode(g.data)}else if(h==="lpVault")(!g||!g.data||g.data.length!==he.span)&&st.logWithError(`invalid farm lp vault account info, pools.lpVault, ${f}`),c[T].lpVault=he.decode(g.data);else if(h==="ledger"){let _=ds(b);g&&g.data&&(g.data.length!==_.span&&st.logWithError(`invalid farm ledger account info, ledger, ${f}`),c[T].ledger=_.decode(g.data))}}let d=i||r?await o.getSlot():0,p=i&&(y=await o.getBlockTime(d))!=null?y:0;for(let f of Object.keys(c))c[f].state=fs(c[f].state,c[f].lpVault,d,p);for(let[f,{state:b,ledger:h}]of Object.entries(c))if(h){let L=b.version===6?b.rewardMultiplier:b.rewardInfos.length===1?a.pow(new z(9)):a.pow(new z(15)),g=b.rewardInfos.map((T,_)=>{let A=h.rewardDebts[_];return h.deposited.mul(b.version===6?T.accRewardPerShare:T.perShareReward).div(L).sub(A)});c[f].wrapped=K(x({},c[f].wrapped),{pendingRewards:g})}return c}async function dr(o){let{farmPools:t}=o,e=await ys(o);return t.map((r,i)=>K(x(x(x({},t[i]),me(r)),e[r.id]),{jsonInfo:t[i]}))}function pr(o,t=Date.now()){if(o.version===6){let e=o.state.rewardInfos;if(e.every(({rewardOpenTime:n})=>et(t,n.toNumber(),{unit:"s"})))return"upcoming pool";if(e.every(({rewardEndTime:n})=>Ee(t,n.toNumber(),{unit:"s"})))return"closed pool"}else{let e=o.state.rewardInfos.map(({perSlotReward:n})=>n);if(e.length===2){if(String(e[0])==="0"&&String(e[1])!=="0")return"normal fusion pool";if(String(e[0])!=="0"&&String(e[1])!=="0")return"dual fusion pool";if(String(e[0])==="0"&&String(e[1])==="0")return"closed pool"}else if(e.length===1&&String(e[0])==="0")return"closed pool"}}function fr(o){return o.state.rewardInfos.length===1&&String(o.lpMint)===_t.toBase58()}function yr(o,t){return o.version===6?o.state.rewardInfos.map(({rewardPerSecond:e,rewardOpenTime:n,rewardEndTime:r},i)=>{var y;let a=et(t.currentBlockChainDate,n.toNumber(),{unit:"s"}),u=Ee(t.currentBlockChainDate,r.toNumber(),{unit:"s"});if(a||u)return;let c=t.rewardTokens[i];if(!c)return;let m=t.rewardTokenPrices[i];if(!m)return;let d=He(new I(e,pe).div(be.pow(new z(c.decimals||1))).mul(new z(60*60*24*365)),m);return t.tvl?t.tvl.isZero()?Ke(0):d.div((y=t.tvl)!=null?y:pe):void 0}):o.state.rewardInfos.map(({perSlotReward:n},r)=>{var m;let i=t.rewardTokens[r];if(!i)return;let a=t.rewardTokenPrices[r];if(!a)return;let u=He(new I(n,pe).div(be.pow(new z(i.decimals||1))).mul(new z(t.blockSlotCountForSecond*60*60*24*365)),a);return t.tvl?t.tvl.isZero()?Ke(0):u.div((m=t.tvl)!=null?m:pe):void 0})}var mt=class extends ie{constructor(){super(...arguments);this._farmPools=[];this._hydratedFarmPools=[];this._hydratedFarmMap=new Map;this._sdkParsedFarmPools=[];this._lpTokenInfoMap=new Map}async load(e){var r;await this.scope.liquidity.load(e),await this.scope.fetchFarms(e==null?void 0:e.forceUpdate);let n=((r=this.scope.apiData.farmPools)==null?void 0:r.data)||{};this._farmPools=Object.keys(n||{}).reduce((i,a)=>{var u,c;return i.concat(((c=(u=n[a]).map)==null?void 0:c.call(u,m=>{let d=this.scope.token.allTokenMap.get(m.baseMint),p=this.scope.token.allTokenMap.get(m.quoteMint);return d&&p&&this._lpTokenInfoMap.set(m.lpMint,new C({mint:m.lpMint,decimals:d.decimals,symbol:`${d.symbol} - ${p.name}`,name:`${d.symbol} - ${p.name} LP`})),K(x({},m),{name:m.symbol,category:a})}))||[])},[]),await this.fetchSdkFarmInfo()}async fetchSdkFarmInfo(){var e;this._sdkParsedFarmPools=await dr({connection:this.scope.connection,farmPools:this._farmPools,owner:(e=this.scope.owner)==null?void 0:e.publicKey,config:{commitment:"confirmed"}})}async loadHydratedFarmInfo(e){let{forceUpdate:n,skipPrice:r}=e||{};if(this._hydratedFarmPools.length&&!n)return this._hydratedFarmPools;await this.scope.farm.load(),!r&&await this.scope.token.fetchTokenPrices(),await this.scope.liquidity.loadPairs();let i=await this.scope.chainTimeOffset(),a=ro(Date.now()+i,{minutes:0}),u=await this.scope.api.getBlockSlotCountForSecond(this.scope.connection.rpcEndpoint),c=Object.fromEntries(this.scope.liquidity.allPairs.map(m=>[m.ammId,{apr30d:m.apr30d,apr7d:m.apr7d,apr24h:m.apr24h}]));return this._hydratedFarmPools=this._sdkParsedFarmPools.map(m=>{let d=this.hydrateFarmInfo({farmInfo:m,blockSlotCountForSecond:u,farmAprs:c,currentBlockChainDate:a,chainTimeOffset:i});return this._hydratedFarmMap.set(m.id.toBase58(),d),d}),this._hydratedFarmPools}get allFarms(){return this._farmPools}get allParsedFarms(){return this._sdkParsedFarmPools}get allHydratedFarms(){return this._hydratedFarmPools}get allHydratedFarmMap(){return this._hydratedFarmMap}getFarm(e){let n=E({publicKey:e}),r=this.allFarms.find(i=>i.id===n.toBase58());return r||this.logAndCreateError("invalid farm id"),r}getParsedFarm(e){let n=E({publicKey:e}),r=this.allParsedFarms.find(i=>n.equals(i.id));return r||this.logAndCreateError("invalid farm id"),r}getLpTokenInfo(e){let n=E({publicKey:e}),r=this._lpTokenInfoMap.get(n.toBase58());return r||this.logAndCreateError("LP Token not found",n.toBase58()),r}lpDecimalAmount({mint:e,amount:n}){let r=ue(n),i=this.getLpTokenInfo(e);return xe(new I(r.numerator,r.denominator).mul(new To(10).pow(new To(i.decimals))))}hydrateFarmInfo(e){var gt,Pt,Je,$e,je,wt,vo,Do,Eo,Vo,Co,Wo;let{farmInfo:n,blockSlotCountForSecond:r,farmAprs:i,currentBlockChainDate:a,chainTimeOffset:u=0}=e,c=pr(n,a),m=fr(n),d=c==="dual fusion pool",p=c==="normal fusion pool",y=c==="closed pool"&&!n.upcoming,f=n.version!==6?n.upcoming&&y:n.upcoming,b=n.version!==6&&n.upcoming&&!y,h=((gt=this.scope.liquidity.allPools.find(B=>B.lpMint===n.lpMint.toBase58()))==null?void 0:gt.version)===5,L=m?this.scope.mintToToken(n.lpMint):this.getLpTokenInfo(n.lpMint),g=this.scope.mintToToken(m?n.lpMint:n.baseMint),T=this.scope.mintToToken(m?n.lpMint:n.quoteMint);g!=null&&g.symbol;let _=m?`${(Pt=g==null?void 0:g.symbol)!=null?Pt:"unknown"}`:`${(Je=g==null?void 0:g.symbol)!=null?Je:"unknown"}-${($e=T==null?void 0:T.symbol)!=null?$e:"unknown"}`,A=n.jsonInfo.rewardInfos.map(({rewardMint:B})=>this.scope.mintToToken(B)),q=(je=n.wrapped)==null?void 0:je.pendingRewards.map((B,W)=>A[W]?new O(A[W],xe(Ln(B,0))):void 0),F=m?this.scope.token.tokenPrices.get(n.lpMint.toBase58()):this.scope.liquidity.lpPriceMap.get(n.lpMint.toBase58()),N=L&&new O(L,n.lpVault.amount),J=F&&L?He(new O(L,n.lpVault.amount),F):void 0,D=yr(n,{tvl:J,currentBlockChainDate:a,rewardTokens:A,rewardTokenPrices:(wt=n.rewardInfos.map(({rewardMint:B})=>this.scope.token.tokenPrices.get(B.toBase58())))!=null?wt:[],blockSlotCountForSecond:r}),G=(vo=this.scope.liquidity.allPools.find(B=>B.lpMint===n.lpMint.toBase58()))==null?void 0:vo.id,X=G?It((Do=i[G])==null?void 0:Do.apr7d,{alreadyDecimaled:!0}):void 0,$=G?It((Eo=i[G])==null?void 0:Eo.apr30d,{alreadyDecimaled:!0}):void 0,re=G?It((Vo=i[G])==null?void 0:Vo.apr24h,{alreadyDecimaled:!0}):void 0,se=D.reduce((B,W)=>B?W?B.add(W):B:W,X),Ie=D.reduce((B,W)=>B?W?B.add(W):B:W,$),ce=D.reduce((B,W)=>B?W?B.add(W):B:W,re),fe=n.version===6?n.state.rewardInfos.map((B,W)=>{var $o,jo,Yo,Qo;let{rewardOpenTime:Ye,rewardEndTime:ht,rewardPerSecond:Gt}=B,Be=Ye.toNumber()?new Date(Ye.toNumber()*1e3+u):void 0,ye=ht.toNumber()?new Date(ht.toNumber()*1e3+u):void 0,Jt=Date.now()+u;if(!Be&&!ye)return;let De=this.scope.mintToToken((Yo=(jo=B.rewardMint)!=null?jo:($o=n.rewardInfos[W])==null?void 0:$o.rewardMint)==null?void 0:Yo.toBase58()),Uo=Boolean(Be&&et(Jt,Be)),Go=Boolean(ye&&Ee(Jt,ye)),Jo=!Be&&!ye||!Go&&!Uo,ri=Jo&&Ee(Jt,ro(ye,{seconds:-((Qo=n.jsonInfo.rewardPeriodExtend)!=null?Qo:72*60*60)})),ii=De&&this.scope.mintToTokenAmount({mint:De.mint,amount:Sn(B.totalReward,B.totalRewardEmissioned).toFixed(De.decimals)}),ai=q==null?void 0:q[W],si=D[W],ui=Boolean(ye),kt=n.rewardInfos[W];return K(x(x({},kt),B),{owner:kt==null?void 0:kt.rewardSender,apr:si,token:De,userPendingReward:ai,userHavedReward:ui,perSecond:De&&this.scope.mintToTokenAmount({mint:De.mint,amount:Gt}).toSignificant(),openTime:Be,endTime:ye,isOptionToken:B.rewardType==="Option tokens",isRewardBeforeStart:Uo,isRewardEnded:Go,isRewarding:Jo,isRwardingBeforeEnd72h:ri,claimableRewards:ii,version:6})}).filter(B=>!!B):n.state.rewardInfos.map((B,W)=>{let Ye=q==null?void 0:q[W],ht=D[W],Gt=A[W],{perSlotReward:Be}=B,ye=Bt(Ye)||Bt(Be);return K(x({},B),{apr:ht,token:Gt,userPendingReward:Ye,userHavedReward:ye,version:n.version})}),de=L&&((Co=n.ledger)==null?void 0:Co.deposited)?new O(L,(Wo=n.ledger)==null?void 0:Wo.deposited):void 0;return K(x({},n),{lp:L,lpPrice:F,base:g,quote:T,name:_,isStakePool:m,isDualFusionPool:d,isNormalFusionPool:p,isClosedPool:y,isUpcomingPool:f,isStablePool:h,isNewPool:b,totalApr7d:se,raydiumFeeApr7d:X,totalApr24h:ce,raydiumFeeApr24h:re,totalApr30d:Ie,raydiumFeeApr30d:$,ammId:G,tvl:J,userHasStaked:Bt(de),rewards:fe,userStakedLpAmount:de,stakedLpAmount:N})}async _getUserRewardInfo({payer:e,rewardInfo:n}){if(n.rewardMint.equals(U)){let r=await _e({connection:this.scope.connection,owner:this.scope.ownerPubKey,payer:e,amount:ko(n)});return{rewardPubKey:r.signers[0].publicKey,newInstruction:r}}return{rewardPubKey:await this.scope.account.getCreatedTokenAccount({mint:n.rewardMint})}}async create({poolId:e,rewardInfos:n,payer:r}){this.checkDisabled(),this.scope.checkOwner();let i=E({publicKey:e}),a=this.scope.liquidity.allPools.find(A=>A.id===i.toBase58());a||this.logAndCreateError("invalid pool id");let c={lpMint:new Z(a.lpMint),lockInfo:{lockMint:Xn,lockVault:er},version:6,rewardInfos:n,programId:mr(6)},m=this.createTxBuilder(),d=r!=null?r:this.scope.ownerPubKey,p=gs.generate(),y=await this.scope.connection.getMinimumBalanceForRentExemption(rt.span);m.addInstruction({instructions:[br.createAccount({fromPubkey:d,newAccountPubkey:p.publicKey,lamports:y,space:rt.span,programId:c.programId})],signers:[p]});let{publicKey:f,nonce:b}=await cr({programId:c.programId,poolId:p.publicKey}),h=await Nt({programId:c.programId,poolId:p.publicKey,mint:c.lpMint,type:"lpVault"}),L=[],g=[];for(let A of c.rewardInfos){A.rewardOpenTime>=A.rewardEndTime&&this.logAndCreateError("start time error","rewardInfo.rewardOpenTime",A.rewardOpenTime.toString()),Ft[A.rewardType]||this.logAndCreateError("rewardType error",A.rewardType),A.rewardPerSecond<=0&&this.logAndCreateError("rewardPerSecond error",A.rewardPerSecond.toString()),L.push(lr(A));let{rewardPubKey:q,newInstruction:F}=await this._getUserRewardInfo({rewardInfo:A,payer:d});F&&m.addInstruction(F),q||this.logAndCreateError("cannot found target token accounts",this.scope.account.tokenAccounts);let N=A.rewardMint.equals(U)?new Z(Y.mint):A.rewardMint;g.push({rewardMint:N,rewardVault:await Nt({programId:c.programId,poolId:p.publicKey,mint:N,type:"rewardVault"}),userRewardToken:q})}let T=await this.scope.account.getCreatedTokenAccount({mint:c.lockInfo.lockMint});T||this.logAndCreateError("cannot found lock vault","tokenAccounts",this.scope.account.tokenAccounts);let _=ur({farmKeyPair:p,owner:this.scope.ownerPubKey,farmAuthority:f,lpVault:h,lpMint:c.lpMint,lockVault:c.lockInfo.lockVault,lockMint:c.lockInfo.lockMint,lockUserAccount:T,programId:c.programId,rewardInfo:g,rewardInfoConfig:L,nonce:b});return await m.addInstruction({instructions:[_]}).build()}async restartReward({farmId:e,payer:n,newRewardInfo:r}){let i=this.getFarm(e);i.version!==6&&this.logAndCreateError("invalid farm version",i.version);let a={id:new Z(i.id),rewardInfos:i.rewardInfos,lpVault:new Z(i.lpVault),programId:new Z(i.programId)};r.rewardOpenTime>=r.rewardEndTime&&this.logAndCreateError("start time error","newRewardInfo",r);let u=n||this.scope.ownerPubKey,c=r.rewardMint.equals(U)?new Z(Y.mint):r.rewardMint,m=a.rewardInfos.find(L=>new Z(L.rewardMint).equals(c));m||this.logAndCreateError("configuration does not exist","rewardMint",c);let d=m.rewardVault?new Z(m.rewardVault):U,p=this.createTxBuilder(),{rewardPubKey:y,newInstruction:f}=await this._getUserRewardInfo({rewardInfo:r,payer:u});f&&p.addInstruction(f),y||this.logAndCreateError("cannot found target token accounts",this.scope.account.tokenAccounts);let b=Buffer.alloc(go.span);go.encode({instruction:3,rewardReopenTime:S(r.rewardOpenTime),rewardEndTime:S(r.rewardEndTime),rewardPerSecond:S(r.rewardPerSecond)},b);let h=[s({pubkey:ut,isWritable:!1}),s({pubkey:a.id}),s({pubkey:a.lpVault,isWritable:!1}),s({pubkey:d}),s({pubkey:y}),s({pubkey:this.scope.ownerPubKey,isWritable:!1,isSigner:!0})];return await p.addInstruction({instructions:[new ct({programId:a.programId,keys:h,data:b})]}).build()}async addNewRewardToken(e){let{farmId:n,newRewardInfo:r,payer:i}=e,a=this.getFarm(n);a.version!==6&&this.logAndCreateError("invalid farm version",a.version);let u=i!=null?i:this.scope.ownerPubKey,c=this.createTxBuilder(),m=await Nt({programId:new Z(a.programId),poolId:new Z(a.id),mint:r.rewardMint,type:"rewardVault"}),{rewardPubKey:d,newInstruction:p}=await this._getUserRewardInfo({rewardInfo:r,payer:u});p&&c.addInstruction(p),d||this.logAndCreateError("annot found target token accounts",this.scope.account.tokenAccounts);let y=r.rewardMint.equals(U)?new Z(Y.mint):r.rewardMint,f=Buffer.alloc(Po.span);Po.encode({instruction:4,isSet:new To(1),rewardPerSecond:S(r.rewardPerSecond),rewardOpenTime:S(r.rewardOpenTime),rewardEndTime:S(r.rewardEndTime)},f);let b=[...Oe,s({pubkey:new Z(a.id)}),s({pubkey:new Z(a.authority),isWritable:!1}),s({pubkey:y,isWritable:!1}),s({pubkey:m}),s({pubkey:d}),s({pubkey:this.scope.ownerPubKey,isWritable:!1,isSigner:!0})];return await c.addInstruction({instructions:[new ct({programId:new Z(a.programId),keys:b,data:f})]}).build()}async _prepareFarmAccounts(e){let n=this.createTxBuilder(),{farmInfo:r}=e,{pubKey:i,newInstructions:a}=await this.scope.account.checkOrCreateAta({mint:r.lpMint});n.addInstruction(a);let u=await Promise.all(r.rewardInfos.map(async({rewardMint:d})=>{let{pubKey:p,newInstructions:y}=await this.scope.account.checkOrCreateAta({mint:d,autoUnwrapWSOLToSOL:!0});return n.addInstruction(y),p})),c=await ho({programId:new Z(r.programId),poolId:new Z(r.id),owner:this.scope.ownerPubKey});if(!r.ledger&&r.version<6){let d=await sr({id:r.id,programId:r.programId,version:r.version,ledger:c,owner:this.scope.ownerPubKey});n.addInstruction({instructions:[d]})}let m=[s({pubkey:r.id}),s({pubkey:r.authority,isWritable:!1}),s({pubkey:c}),s({pubkey:this.scope.ownerPubKey,isWritable:!1,isSigner:!0}),s({pubkey:i}),s({pubkey:new Z(r.jsonInfo.lpVault)}),s({pubkey:u[0]}),s({pubkey:r.rewardInfos[0].rewardVault}),s({pubkey:Ps,isWritable:!1}),s({pubkey:ut,isWritable:!1})];return{txBuilder:n,lpTokenAccount:i,rewardTokenAccountsPublicKeys:u,ledgerAddress:c,lowVersionKeys:m}}async deposit(e){this.scope.checkOwner();let{farmId:n,amount:r}=e,i=this.getParsedFarm(n),a=i.lpMint,{version:u,rewardInfos:c}=i;wo(u)||this.logAndCreateError("invalid farm version:",u);let{txBuilder:m,ledgerAddress:d,lpTokenAccount:p,lowVersionKeys:y,rewardTokenAccountsPublicKeys:f}=await this._prepareFarmAccounts({mint:a,farmInfo:i}),b=ir({version:u,rewardInfos:c,rewardTokenAccountsPublicKeys:f});b&&this.logAndCreateError(b);let h=Buffer.alloc(it.span);it.encode({instruction:nr(u),amount:S(r)},h);let L=u===6?[s({pubkey:ut,isWritable:!1}),s({pubkey:br.programId,isWritable:!1}),s({pubkey:i.id}),s({pubkey:i.authority,isWritable:!1}),s({pubkey:i.lpVault.mint}),s({pubkey:d}),s({pubkey:this.scope.ownerPubKey,isWritable:!1,isSigner:!0}),s({pubkey:p})]:y;if(u!==3)for(let T=1;T<c.length;T++)L.push(s({pubkey:f[T]})),L.push(s({pubkey:c[T].rewardVault}));let g=new ct({programId:i.programId,keys:L,data:h});return await m.addInstruction({instructions:[g]}).build()}async withdraw(e){this.scope.checkOwner();let{farmId:n,amount:r}=e,i=this.getParsedFarm(n),a=i.lpMint,{version:u,rewardInfos:c}=i;wo(u)||this.logAndCreateError("invalid farm version:",u);let{txBuilder:m,ledgerAddress:d,lpTokenAccount:p,lowVersionKeys:y,rewardTokenAccountsPublicKeys:f}=await this._prepareFarmAccounts({mint:a,farmInfo:i}),b=Buffer.alloc(it.span);it.encode({instruction:rr(u),amount:S(r)},b);let h=u===6?[s({pubkey:ut,isWritable:!1}),s({pubkey:i.id}),s({pubkey:i.authority,isWritable:!1}),s({pubkey:i.lpVault.mint}),s({pubkey:d}),s({pubkey:this.scope.ownerPubKey,isWritable:!1,isSigner:!0}),s({pubkey:p})]:y;if(u!==3)for(let g=1;g<c.length;g++)h.push(s({pubkey:f[g]})),h.push(s({pubkey:c[g].rewardVault}));let L=new ct({programId:i.programId,keys:h,data:b});return await m.addInstruction({instructions:[L]}).build()}async withdrawFarmReward({farmId:e,withdrawMint:n}){var y;this.scope.checkOwner();let r=this.getParsedFarm(e),{version:i}=r;i!==6&&this.logAndCreateError("invalid farm version",r.version);let a=r.rewardInfos.find(f=>f.rewardMint.equals(n.equals(U)?new Z(Y.mint):n));a||this.logAndCreateError("withdraw mint error","rewardInfos",r);let u=(y=a==null?void 0:a.rewardVault)!=null?y:U,c=this.createTxBuilder(),m;if(this._getUserRewardInfo({payer:this.scope.ownerPubKey,rewardInfo:a}),n.equals(U)){let f=await _e({connection:this.scope.connection,owner:this.scope.ownerPubKey,payer:this.scope.ownerPubKey,amount:ko(a)});m=f.signers[0].publicKey,c.addInstruction(f)}else{let f=await this.scope.account.getCreatedTokenAccount({mint:n});f===null?(m=await this.scope.account.getAssociatedTokenAccount(n),c.addInstruction({instructions:[bs(this.scope.ownerPubKey,m,this.scope.ownerPubKey,n)]})):m=f}let d=Buffer.alloc(yo.span);yo.encode({instruction:5},d);let p=[s({pubkey:ut,isWritable:!1}),s({pubkey:r.id}),s({pubkey:r.authority,isWritable:!1}),s({pubkey:r.lpVault.mint,isWritable:!1}),s({pubkey:u}),s({pubkey:m}),s({pubkey:this.scope.ownerPubKey,isWritable:!1,isSigner:!0})];return await c.addInstruction({instructions:[new ct({programId:r.programId,keys:p,data:d})]}).build()}};import{ComputeBudgetProgram as Us}from"@solana/web3.js";import Ae from"bn.js";import{PublicKey as gr}from"@solana/web3.js";import Pr from"bn.js";var wr=(c=>(c[c.Uninitialized=0]="Uninitialized",c[c.Initialized=1]="Initialized",c[c.Disabled=2]="Disabled",c[c.RemoveLiquidityOnly=3]="RemoveLiquidityOnly",c[c.LiquidityOnly=4]="LiquidityOnly",c[c.OrderBook=5]="OrderBook",c[c.Swap=6]="Swap",c[c.WaitingForStart=7]="WaitingForStart",c))(wr||{}),hr=new Pr(25),kr=new Pr(1e4),Tr="675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8",ws=new gr(Tr),Ar="5quBtoiQqxF9Jv6KYKctB59NT3gtJD2Y65kdnB1Uev3h",hs=new gr(Ar),up={[Tr]:4,[Ar]:5},Ir={4:ws,5:hs},xr={4:3,5:3};import{TOKEN_PROGRAM_ID as Bo}from"@solana/spl-token";import{SystemProgram as qs,TransactionInstruction as Te}from"@solana/web3.js";var Ao=R([v("instruction"),l("amountIn"),l("minAmountOut")]),Io=R([v("instruction"),l("maxAmountIn"),l("amountOut")]),xo=R([v("instruction"),v("nonce")]),So=R([v("instruction"),v("nonce"),l("startTime")]),Lo=R([l("status"),l("nonce"),l("maxOrder"),l("depth"),l("baseDecimal"),l("quoteDecimal"),l("state"),l("resetFlag"),l("minSize"),l("volMaxCutRatio"),l("amountWaveRatio"),l("baseLotSize"),l("quoteLotSize"),l("minPriceMultiplier"),l("maxPriceMultiplier"),l("systemDecimalValue"),l("minSeparateNumerator"),l("minSeparateDenominator"),l("tradeFeeNumerator"),l("tradeFeeDenominator"),l("pnlNumerator"),l("pnlDenominator"),l("swapFeeNumerator"),l("swapFeeDenominator"),l("baseNeedTakePnl"),l("quoteNeedTakePnl"),l("quoteTotalPnl"),l("baseTotalPnl"),Q("quoteTotalDeposited"),Q("baseTotalDeposited"),Q("swapBaseInAmount"),Q("swapQuoteOutAmount"),l("swapBase2QuoteFee"),Q("swapQuoteInAmount"),Q("swapBaseOutAmount"),l("swapQuote2BaseFee"),k("baseVault"),k("quoteVault"),k("baseMint"),k("quoteMint"),k("lpMint"),k("openOrders"),k("marketId"),k("marketProgramId"),k("targetOrders"),k("withdrawQueue"),k("lpVault"),k("owner"),l("lpReserve"),H(l(),3,"padding")]),ks=R([l("accountType"),l("status"),l("nonce"),l("maxOrder"),l("depth"),l("baseDecimal"),l("quoteDecimal"),l("state"),l("resetFlag"),l("minSize"),l("volMaxCutRatio"),l("amountWaveRatio"),l("baseLotSize"),l("quoteLotSize"),l("minPriceMultiplier"),l("maxPriceMultiplier"),l("systemDecimalsValue"),l("abortTradeFactor"),l("priceTickMultiplier"),l("priceTick"),l("minSeparateNumerator"),l("minSeparateDenominator"),l("tradeFeeNumerator"),l("tradeFeeDenominator"),l("pnlNumerator"),l("pnlDenominator"),l("swapFeeNumerator"),l("swapFeeDenominator"),l("baseNeedTakePnl"),l("quoteNeedTakePnl"),l("quoteTotalPnl"),l("baseTotalPnl"),l("poolOpenTime"),l("punishPcAmount"),l("punishCoinAmount"),l("orderbookToInitTime"),Q("swapBaseInAmount"),Q("swapQuoteOutAmount"),Q("swapQuoteInAmount"),Q("swapBaseOutAmount"),l("swapQuote2BaseFee"),l("swapBase2QuoteFee"),k("baseVault"),k("quoteVault"),k("baseMint"),k("quoteMint"),k("lpMint"),k("modelDataAccount"),k("openOrders"),k("marketId"),k("marketProgramId"),k("targetOrders"),k("owner"),H(l(),64,"padding")]),_o=R([v("instruction"),l("baseAmountIn"),l("quoteAmountIn"),l("fixedSide")]),Ro=R([v("instruction"),l("amountIn")]),Sr={4:Lo,5:ks};import{PublicKey as Ts}from"@solana/web3.js";var ke=new Ts("CDSr3ssLcRB6XYPJwAfFt18MZvEZp4LjHcvzBVZ45duo"),ve=5e4,As=R([l("x"),l("y"),l("price")]),Is=R([l("accountType"),l("status"),l("multiplier"),l("validDataCount"),H(As,ve,"DataElement")]);function xs(o,t){return[0,ve-2]}function Ss(o){return[0,ve-2]}function Ls(o){return[0,ve-2]}function _s(o,t,e){let[n,r]=xs(t,e),i=n,a=r,u=0,c=t*o.multiplier/e;for(;i<=a;){if(u=Math.floor((a+i)/2),u===0||u>=ve-2)return[u,u,!1];let m=o.DataElement[u].x*o.multiplier/o.DataElement[u].y,d=o.DataElement[u-1].x*o.multiplier/o.DataElement[u-1].y,p=o.DataElement[u+1].x*o.multiplier/o.DataElement[u+1].y;if(c===m)return[u,u,!0];if(c===d)return[u-1,u-1,!0];if(c===p)return[u+1,u+1,!0];if(c<d)a=u-1;else{if(c>d&&c<m)return[u-1,u,!0];if(c>m&&c<p)return[u,u+1,!0];i=u+1}}return[u,u,!1]}function Mo(o,t,e){let[n,r,i]=_s(o,t,e);if(!i)return 0;if(n===r){let a=o.DataElement[n].x;return t*o.multiplier/a}else{let a=o.DataElement[n].x,u=o.DataElement[n].y,c=o.DataElement[r].x,m=o.DataElement[r].y,d=e*(c*u-a*m),p=a*d,y=(c-a)*(t*u-a*e)*m,f=p+y;return t*o.multiplier*d/f}}function Ne(o,t,e){return t*o.multiplier/e}function Lr(o,t,e){return t*e/o.multiplier}function Rs(o,t){let[e,n]=Ss(t),r=e,i=n,a=0,u=t;for(;r<i;){if(a=Math.floor((i+r)/2),a<=0||a>ve-2)return[a,a,!1];let c=o.DataElement[a].x,m=o.DataElement[a-1].x,d=o.DataElement[a+1].x;if(u===c)return[a,a,!0];if(u===m)return[a-1,a-1,!0];if(u===d)return[a+1,a+1,!0];if(u<m)i=a-1;else{if(u>m&&u<c)return[a-1,a,!0];if(u>c&&u<d)return[a,a+1,!0];r=a+1}}return[a,a,!1]}function Ms(o,t){let[e,n]=Ls(t),r=e,i=n,a=0,u=t;for(;r<=i;){if(a=Math.floor((i+r)/2),a<=0||a>=ve-2)return[a,a,!1];let c=o.DataElement[a].y,m=o.DataElement[a-1].y,d=o.DataElement[a+1].y;if(u===c)return[a,a,!0];if(u===m)return[a-1,a-1,!0];if(u===d)return[a+1,a+1,!0];if(u<d)r=a+1;else{if(u<m&&u>c)return[a-1,a,!0];if(u<c&&u>d)return[a,a+1,!0];i=a-1}}return[a,a,!1]}function _r(o,t,e,n){let r=n?t+e:t-e,[i,a,u]=Rs(o,r);if(!u)return[0,0,!1,u];if(i===a)return[o.DataElement[a].price,o.DataElement[a].y,!1,u];{let c=o.DataElement[i].x,m=o.DataElement[a].x,d=o.DataElement[i].price,p=o.DataElement[a].price,y=o.DataElement[i].y,f=o.DataElement[a].y;if(t>=c&&t<=m)return n?[p,f,!0,u]:[d,y,!0,u];{let b,h;return n?(b=d+(p-d)*(t-c)/(m-c),h=y-(r-c)*o.multiplier/p):(b=d+(p-d)*(t-c)/(m-c),h=f+(m-r)*o.multiplier/d),[b,h,!1,u]}}}function Bs(o,t,e,n){let r=n?t-e:t+e,[i,a,u]=Ms(o,r);if(!u)return[0,0,!1,u];if(i===a)return[o.DataElement[a].price,o.DataElement[a].x,!1,u];{let c=o.DataElement[i].x,m=o.DataElement[a].x,d=o.DataElement[i].price,p=o.DataElement[a].price,y=o.DataElement[i].y,f=o.DataElement[a].y;if(t>=f&&t<=y)return n?[p,m,!0,u]:[d,c,!0,u];{let b,h;return n?(b=d+(p-d)*(y-t)/(y-f),h=c+p*(y-r)/o.multiplier):(b=d+(p-d)*(y-t)/(y-f),h=m-d*(r-f)/o.multiplier),[b,h,!1,u]}}}function Ks(o,t){let e=_r(o,t,0,!1);return e[3]?e[0]:0}function Rr(o,t,e,n){let r=Mo(o,t,e),i=Ne(o,t,r),a=Ne(o,e,r),u=Ne(o,n,r),c=!0,[m,d,p,y]=_r(o,i,u,c);if(!y)return 0;if(p)return n*o.multiplier/m;{let f=a-d;return Lr(o,f,r)}}function Mr(o,t,e,n){let r=Mo(o,t,e),i=Ne(o,t,r),a=Ne(o,e,r),u=Ne(o,n,r),c=!1,[m,d,p,y]=Bs(o,a,u,c);if(!y)return 0;if(p)return n*m/o.multiplier;{let f=i-d;return Lr(o,f,r)}}function Os(o){let t=Is.decode(o);return{accountType:t.accountType.toNumber(),status:t.status.toNumber(),multiplier:t.multiplier.toNumber(),validDataCount:t.validDataCount.toNumber(),DataElement:t.DataElement.map(e=>({x:e.x.toNumber(),y:e.y.toNumber(),price:e.price.toNumber()}))}}function Br(o,t,e,n){let r=Ks(o,Ne(o,t,Mo(o,t,e)))/o.multiplier;return n?r:1/r}var vt=class{constructor({connection:t}){this._layoutData={accountType:0,status:0,multiplier:0,validDataCount:0,DataElement:[]};this.connection=t}get stableModelData(){return this._layoutData}async initStableModelLayout(){if(this._layoutData.validDataCount===0&&this.connection){let t=await this.connection.getAccountInfo(ke);t&&(this._layoutData=Os(t==null?void 0:t.data))}}};var Dt=M("Raydium_liquidity_instruction");function Kr(o){let{poolKeys:t,userKeys:e,amountIn:n,amountOut:r,fixedSide:i}=o,{version:a}=t;if(a===4||a===5){let u={poolKeys:t,userKeys:e};if(i==="in")return Fs(K(x({},u),{amountIn:n,minAmountOut:r}),a);if(i==="out")return Ns(K(x({},u),{maxAmountIn:n,amountOut:r}),a);Dt.logWithError("invalid params","params",o)}throw Dt.logWithError("invalid version","poolKeys.version",a),new Error("invalid version")}function Or(o){let t=R([v("instruction"),v("simulateType")]),e=Buffer.alloc(t.span);t.encode({instruction:12,simulateType:0},e);let n=[s({pubkey:o.id,isWritable:!1}),s({pubkey:o.authority,isWritable:!1}),s({pubkey:o.openOrders,isWritable:!1}),s({pubkey:o.baseVault,isWritable:!1}),s({pubkey:o.quoteVault,isWritable:!1}),s({pubkey:o.lpMint,isWritable:!1}),s({pubkey:o.marketId,isWritable:!1})];return new Te({programId:o.programId,keys:n,data:e})}function Fs({poolKeys:o,userKeys:t,amountIn:e,minAmountOut:n},r){let i=Buffer.alloc(Ao.span);Ao.encode({instruction:9,amountIn:S(e),minAmountOut:S(n)},i);let a=[s({pubkey:Bo,isWritable:!1}),s({pubkey:o.id}),s({pubkey:o.authority,isWritable:!1}),s({pubkey:o.openOrders})];return r===4&&a.push(s({pubkey:o.targetOrders})),a.push(s({pubkey:o.baseVault}),s({pubkey:o.quoteVault})),r===5&&a.push(s({pubkey:ke})),a.push(s({pubkey:o.marketProgramId,isWritable:!1}),s({pubkey:o.marketId}),s({pubkey:o.marketBids}),s({pubkey:o.marketAsks}),s({pubkey:o.marketEventQueue}),s({pubkey:o.marketBaseVault}),s({pubkey:o.marketQuoteVault}),s({pubkey:o.marketAuthority,isWritable:!1}),s({pubkey:t.tokenAccountIn}),s({pubkey:t.tokenAccountOut}),s({pubkey:t.owner,isWritable:!1})),new Te({programId:o.programId,keys:a,data:i})}function Ns({poolKeys:o,userKeys:t,maxAmountIn:e,amountOut:n},r){let i=Buffer.alloc(Io.span);Io.encode({instruction:11,maxAmountIn:S(e),amountOut:S(n)},i);let a=[s({pubkey:qs.programId,isWritable:!1}),s({pubkey:o.id}),s({pubkey:o.authority,isWritable:!1}),s({pubkey:o.openOrders}),s({pubkey:o.targetOrders}),s({pubkey:o.baseVault}),s({pubkey:o.quoteVault})];return r===5&&a.push(s({pubkey:ke})),a.push(s({pubkey:o.marketProgramId,isWritable:!1}),s({pubkey:o.marketId}),s({pubkey:o.marketBids}),s({pubkey:o.marketAsks}),s({pubkey:o.marketEventQueue}),s({pubkey:o.marketBaseVault}),s({pubkey:o.marketQuoteVault}),s({pubkey:o.marketAuthority,isWritable:!1}),s({pubkey:t.tokenAccountIn}),s({pubkey:t.tokenAccountOut}),s({pubkey:t.owner,isWritable:!1,isSigner:!0})),new Te({programId:o.programId,keys:a,data:i})}function qr(o){let i=o,{owner:t}=i,e=ee(i,["owner"]),n=Buffer.alloc(xo.span);xo.encode({instruction:10,nonce:e.nonce},n);let r=[...Oe,s({pubkey:e.targetOrders}),s({pubkey:e.withdrawQueue}),s({pubkey:e.authority,isWritable:!1}),s({pubkey:e.lpMint}),s({pubkey:e.baseMint,isWritable:!1}),s({pubkey:e.quoteMint,isWritable:!1}),s({pubkey:e.baseVault}),s({pubkey:e.quoteVault}),s({pubkey:e.lpVault}),s({pubkey:e.marketId,isWritable:!1}),s({pubkey:t,isSigner:!0})];return new Te({programId:e.programId,keys:r,data:n})}function Fr(o){let{poolKeys:t,userKeys:e,startTime:n}=o,r=Buffer.alloc(So.span);So.encode({instruction:0,nonce:t.nonce,startTime:S(n)},r);let i=[...Oe,s({pubkey:t.id}),s({pubkey:t.authority,isWritable:!1}),s({pubkey:t.openOrders}),s({pubkey:t.lpMint}),s({pubkey:t.baseMint,isWritable:!1}),s({pubkey:t.quoteMint,isWritable:!1}),s({pubkey:t.baseVault,isWritable:!1}),s({pubkey:t.quoteVault,isWritable:!1}),s({pubkey:t.withdrawQueue}),s({pubkey:t.targetOrders}),s({pubkey:e.lpTokenAccount}),s({pubkey:t.lpVault,isWritable:!1}),s({pubkey:t.marketProgramId,isWritable:!1}),s({pubkey:t.marketId,isWritable:!1}),s({pubkey:e.payer,isSigner:!0})];return new Te({programId:t.programId,keys:i,data:r})}function Nr(o){let{poolKeys:t,userKeys:e,baseAmountIn:n,quoteAmountIn:r,fixedSide:i}=o,{version:a}=t;if(a===4||a===5){let u=Buffer.alloc(_o.span);_o.encode({instruction:3,baseAmountIn:S(n),quoteAmountIn:S(r),fixedSide:S(i==="base"?0:1)},u);let c=[s({pubkey:Bo,isWritable:!1}),s({pubkey:t.id}),s({pubkey:t.authority,isWritable:!1}),s({pubkey:t.openOrders,isWritable:!1}),s({pubkey:t.targetOrders}),s({pubkey:t.lpMint}),s({pubkey:t.baseVault}),s({pubkey:t.quoteVault})];return a===5&&c.push(s({pubkey:ke})),c.push(s({pubkey:t.marketId,isWritable:!1}),s({pubkey:e.baseTokenAccount}),s({pubkey:e.quoteTokenAccount}),s({pubkey:e.lpTokenAccount}),s({pubkey:e.owner,isWritable:!1,isSigner:!0})),new Te({programId:t.programId,keys:c,data:u})}return Dt.logWithError("invalid version","poolKeys.version",a),new Te({programId:t.programId,keys:[]})}function vr(o){let{poolKeys:t,userKeys:e,amountIn:n}=o,{version:r}=t;if(r===4||r===5){let i=Buffer.alloc(Ro.span);Ro.encode({instruction:4,amountIn:S(n)},i);let a=[s({pubkey:Bo,isWritable:!1}),s({pubkey:t.id}),s({pubkey:t.authority,isWritable:!1}),s({pubkey:t.openOrders}),s({pubkey:t.targetOrders}),s({pubkey:t.lpMint}),s({pubkey:t.baseVault}),s({pubkey:t.quoteVault})];return r===5?a.push(s({pubkey:ke})):a.push(s({pubkey:t.withdrawQueue}),s({pubkey:t.lpVault})),a.push(s({pubkey:t.marketProgramId,isWritable:!1}),s({pubkey:t.marketId}),s({pubkey:t.marketBaseVault}),s({pubkey:t.marketQuoteVault}),s({pubkey:t.marketAuthority,isWritable:!1}),s({pubkey:e.lpTokenAccount}),s({pubkey:e.baseTokenAccount}),s({pubkey:e.quoteTokenAccount}),s({pubkey:e.owner,isWritable:!1,isSigner:!0}),s({pubkey:t.marketEventQueue}),s({pubkey:t.marketBids}),s({pubkey:t.marketAsks})),new Te({programId:t.programId,keys:a,data:i})}return Dt.logWithError("invalid version","poolKeys.version",r),new Te({programId:t.programId,keys:[]})}import{OpenOrders as Es}from"@project-serum/serum";import lt from"bn.js";import{PublicKey as Dr}from"@solana/web3.js";var Ko=M("Raydium_liquidity_serum"),Er="9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin",vs=new Dr(Er),Mp={[Er]:3},Ds={3:vs};function Vr(o){let t=xr[o];return t||Ko.logWithError("invalid version","version",o),t}function Cr(o){let t=Ds[o];return t||Ko.logWithError("invalid version","version",o),t}async function Wr({programId:o,marketId:t}){let e=[t.toBuffer()],n=0,r;for(;n<100;){try{let i=e.concat(Buffer.from([n]),Buffer.alloc(7));r=await Dr.createProgramAddress(i,o)}catch(i){if(i instanceof TypeError)throw i;n++;continue}return{publicKey:r,nonce:n}}throw Ko.logWithError("unable to find a viable program address nonce","params",{programId:o,marketId:t}),new Error("unable to find a viable program address nonce")}var Et=M("Raydium_liquidity_util");function Oo(o,t){let e=o instanceof O?o.token:C.WSOL,{baseMint:n,quoteMint:r}=t;if(e.mint.equals(n))return"base";if(e.mint.equals(r))return"quote";let i=`liquidity getTokenSide - token not match with pool, params: ${JSON.stringify({token:e.mint,baseMint:n,quoteMint:r})}`;throw console.error(i),new Error(i)}function Ge(o,t){let{baseMint:e,quoteMint:n}=t;return o.mint.equals(e)||o.mint.equals(n)}function qo(o){let{status:t,startTime:e}=o,n=t.toNumber();return{[0]:{swap:!1,addLiquidity:!1,removeLiquidity:!1},[1]:{swap:!0,addLiquidity:!0,removeLiquidity:!0},[2]:{swap:!1,addLiquidity:!1,removeLiquidity:!1},[3]:{swap:!1,addLiquidity:!1,removeLiquidity:!0},[4]:{swap:!1,addLiquidity:!0,removeLiquidity:!0},[5]:{swap:!1,addLiquidity:!0,removeLiquidity:!0},[6]:{swap:!0,addLiquidity:!0,removeLiquidity:!0},[7]:{swap:Date.now()/1e3>=e.toNumber(),addLiquidity:!0,removeLiquidity:!0}}[n]||{swap:!1,addLiquidity:!1,removeLiquidity:!1}}function Gp(o){let t=Sr[o];return t||Et.logWithError("invalid version","version",o),t}function Vs(o){let t=Ir[o];return t||Et.logWithError("invalid version","version",o),t}async function Re({name:o,programId:t,marketId:e}){let{publicKey:n}=await Pe([t.toBuffer(),e.toBuffer(),Buffer.from(o,"utf-8")],t);return n}async function Cs({programId:o}){return Pe([Buffer.from([97,109,109,32,97,117,116,104,111,114,105,116,121])],o)}async function Fo({version:o,marketId:t,baseMint:e,quoteMint:n}){let r=Vs(o),[i,a,u]=[E({publicKey:t}),E({publicKey:e,transformSol:!0}),E({publicKey:n,transformSol:!0})],c=await Re({name:"amm_associated_seed",programId:r,marketId:i}),m=await Re({name:"lp_mint_associated_seed",programId:r,marketId:i}),{publicKey:d,nonce:p}=await Cs({programId:r}),y=await Re({name:"coin_vault_associated_seed",programId:r,marketId:i}),f=await Re({name:"pc_vault_associated_seed",programId:r,marketId:i}),b=await Re({name:"temp_lp_token_associated_seed",programId:r,marketId:i}),h=await Re({name:"open_order_associated_seed",programId:r,marketId:i}),L=await Re({name:"target_associated_seed",programId:r,marketId:i}),g=await Re({name:"withdraw_associated_seed",programId:r,marketId:i}),T=Vr(o),_=Cr(T),{publicKey:A}=await Wr({programId:_,marketId:i});return{id:c,baseMint:a,quoteMint:u,lpMint:m,version:o,programId:r,authority:d,nonce:p,baseVault:y,quoteVault:f,lpVault:b,openOrders:h,targetOrders:L,withdrawQueue:g,marketVersion:T,marketProgramId:_,marketId:i,marketAuthority:A}}async function Gr({connection:o,pools:t}){let e=t.map(r=>Or(r));return(await kn(o,e,"GetPoolData")).map(r=>{let i=Tn(r,"GetPoolData"),a=new lt(ge(i,"status")),u=Number(ge(i,"coin_decimals")),c=Number(ge(i,"pc_decimals")),m=Number(ge(i,"lp_decimals")),d=new lt(ge(i,"pool_coin_amount")),p=new lt(ge(i,"pool_pc_amount")),y=new lt(ge(i,"pool_lp_supply")),f="0";try{f=ge(i,"pool_open_time")}catch{f="0"}return{status:a,baseDecimals:u,quoteDecimals:c,lpDecimals:m,baseReserve:d,quoteReserve:p,lpSupply:y,startTime:new lt(f)}})}function Jr(o,t,e){return Ws(o.token,t.token,e)}function Ws(o,t,e){let{baseMint:n,quoteMint:r}=e,i=Ur(o,e),a=Ur(t,e);return i===a&&Et.logWithError("tokens not match with pool","params",{tokenA:o.mint,tokenB:t.mint,baseMint:n,quoteMint:r}),[i,a]}function Ur(o,t){let{baseMint:e,quoteMint:n}=t;return o.mint.equals(e)?"base":o.mint.equals(n)?"quote":(Et.logWithError("token not match with pool","params",{token:o.mint,baseMint:e,quoteMint:n}),"base")}var $r=o=>o==="a"||o==="b";async function Jp(o,t,e){let n=await o.getAccountInfo(t);if(n===null)return null;let r=Lo.decode(n.data),i=await o.getTokenAccountBalance(r.baseVault),a=await o.getTokenAccountBalance(r.quoteVault),u=await Es.load(o,r.openOrders,e),c=10**r.baseDecimal.toNumber(),m=10**r.quoteDecimal.toNumber(),d=u.baseTokenTotal.toNumber()/c,p=u.quoteTokenTotal.toNumber()/m,y=r.baseNeedTakePnl.toNumber()/c,f=r.quoteNeedTakePnl.toNumber()/m,b=i.value.uiAmount+d-y,h=a.value.uiAmount+p-f,L=parseFloat(r.lpReserve.toString()),g=b/h;return{baseAmount:b,quoteAmount:h,lpSupply:L,baseVaultKey:r.baseVault,quoteVaultKey:r.quoteVault,baseVaultBalance:i.value.uiAmount,quoteVaultBalance:a.value.uiAmount,openOrdersKey:r.openOrders,openOrdersTotalBase:d,openOrdersTotalQuote:p,basePnl:y,quotePnl:f,priceInQuote:g}}var dt=class extends ie{constructor(e){super(e);this._poolInfos=[];this._poolInfoMap=new Map;this._pairsInfo=[];this._pairsInfoMap=new Map;this._lpTokenMap=new Map;this._lpPriceMap=new Map;this._officialIds=new Set;this._unOfficialIds=new Set;this._sdkParseInfoCache=new Map;this._stableLayout=new vt({connection:this.scope.connection})}async load(e){if(await this.scope.fetchLiquidity(e==null?void 0:e.forceUpdate),!this.scope.apiData.liquidityPools)return;let{data:n}=this.scope.apiData.liquidityPools,[r,i]=[n.official||[],n.unOfficial||[]];this._poolInfos=[...r,...i],this._officialIds=new Set(r.map(a=>{var c,m;let u=`${(c=this.scope.token.allTokenMap.get(a.baseMint))==null?void 0:c.symbol} - ${(m=this.scope.token.allTokenMap.get(a.quoteMint))==null?void 0:m.symbol}`;return this._poolInfoMap.set(a.id,a),this._lpTokenMap.set(a.lpMint,new C({mint:a.lpMint,decimals:a.lpDecimals,symbol:u,name:`${u} LP`})),a.id})),this._unOfficialIds=new Set(i.map(a=>{var c,m;let u=`${(c=this.scope.token.allTokenMap.get(a.baseMint))==null?void 0:c.symbol} - ${(m=this.scope.token.allTokenMap.get(a.quoteMint))==null?void 0:m.symbol}`;return this._poolInfoMap.set(a.id,a),this._lpTokenMap.set(a.lpMint,new C({mint:a.lpMint,decimals:a.lpDecimals,symbol:u,name:`${u} LP`})),a.id}))}async loadPairs(e){var n;return await this.scope.fetchPairs(e==null?void 0:e.forceUpdate),this._pairsInfo=((n=this.scope.apiData.liquidityPairsInfo)==null?void 0:n.data)||[],this._pairsInfoMap=new Map(this._pairsInfo.map(r=>{let i=this._lpTokenMap.get(r.lpMint),a=i&&r.lpPrice?Qe({token:i,numberPrice:r.lpPrice,decimalDone:!0}):null;return a&&this._lpPriceMap.set(r.lpMint,a),[r.ammId,r]})),this._pairsInfo}get allPools(){return this._poolInfos}get allPoolIdSet(){return{official:this._officialIds,unOfficial:this._unOfficialIds}}get allPoolMap(){return this._poolInfoMap}get allPairs(){return this._pairsInfo}get allPairsMap(){return this._pairsInfoMap}get lpTokenMap(){return this._lpTokenMap}get lpPriceMap(){return this._lpPriceMap}async fetchMultipleInfo(e){return await this._stableLayout.initStableModelLayout(),await Gr(K(x({},e),{connection:this.scope.connection}))}async sdkParseJsonLiquidityInfo(e){if(!e.length)return[];let n=e.map(r=>r.id).join("-");if(this._sdkParseInfoCache.has(n))return this._sdkParseInfoCache.get(n);try{let i=(await this.fetchMultipleInfo({pools:e.map(me)})).map((a,u)=>x(x({jsonInfo:e[u]},me(e[u])),a));return this._sdkParseInfoCache.set(n,i),i}catch(r){return console.error(r),[]}}computeAmountOut({poolKeys:e,poolInfo:n,amountIn:r,outputToken:i,slippage:a}){this.checkDisabled();let u=M("Raydium_computeAmountOut"),c=r.token,m=i;(!Ge(c,e)||!Ge(m,e))&&u.logWithError("token not match with pool","poolKeys",e);let{baseReserve:d,quoteReserve:p}=n;this.logDebug("baseReserve:",d.toString(),"quoteReserve:",p.toString());let y=r.token;this.logDebug("inputToken:",y),this.logDebug("amountIn:",r.toFixed()),this.logDebug("outputToken:",i),this.logDebug("slippage:",`${a.toSignificant()}%`);let f=[d,p],b=Oo(r,e);b==="quote"&&f.reverse(),this.logDebug("input side:",b);let[h,L]=f,g;if(e.version===4)g=new j({baseToken:y,denominator:h,quoteToken:i,numerator:L});else{let $=Br(this._stableLayout.stableModelData,d.toNumber(),p.toNumber(),!1);g=new j({baseToken:y,denominator:b==="quote"?new Ae($*1e6):new Ae(1e6),quoteToken:i,numerator:b==="quote"?new Ae(1e6):new Ae($*1e6)})}this.logDebug("currentPrice:",`1 ${y.symbol} \u2248 ${g.toFixed()} ${i.symbol}`),this.logDebug("currentPrice invert:",`1 ${i.symbol} \u2248 ${g.invert().toFixed()} ${y.symbol}`);let T=r.raw,_=ae,A=ae;if(!T.isZero())if(e.version===4){A=T.mul(hr).div(kr);let $=T.sub(A),re=h.add($);_=L.mul($).div(re)}else{A=T.mul(new Ae(2)).div(new Ae(1e4));let $=T.sub(A),re=b==="quote"?Rr:Mr;_=new Ae(re(this._stableLayout.stableModelData,p.toNumber(),d.toNumber(),$.toNumber()))}let F=new oe(pe).add(a).invert().mul(_).quotient,N=new O(i,_),J=new O(i,F);this.logDebug("amountOut:",N.toFixed(),"minAmountOut:",J.toFixed());let D=new j({baseToken:y,denominator:T.sub(A),quoteToken:i,numerator:_});!T.isZero()&&!_.isZero()&&(D=new j({baseToken:y,denominator:T.sub(A),quoteToken:i,numerator:_}),this.logDebug("executionPrice:",`1 ${y.symbol} \u2248 ${D.toFixed()} ${i.symbol}`),this.logDebug("executionPrice invert:",`1 ${i.symbol} \u2248 ${D.invert().toFixed()} ${y.symbol}`));let G=new oe(parseInt(String(Math.abs(parseFloat(D.toFixed())-parseFloat(g.toFixed()))*1e9)),parseInt(String(parseFloat(g.toFixed())*1e9))),X=new O(y,A);return{amountOut:N,minAmountOut:J,currentPrice:g,executionPrice:D,priceImpact:G,fee:X}}async computePairAmount({poolId:e,amount:n,anotherToken:r,slippage:i}){let a=E({publicKey:e}),u=this._poolInfoMap.get(a.toBase58());u||this.logAndCreateError("pool not found",a.toBase58());let c=(await this.sdkParseJsonLiquidityInfo([u]))[0];c||this.logAndCreateError("pool parseInfo not found",a.toBase58());let{baseReserve:m,quoteReserve:d}=c;this.logDebug("baseReserve:",m.toString(),"quoteReserve:",d.toString());let p=n.token;this.logDebug("tokenIn:",p,"amount:",n.toFixed(),"anotherToken:",r,"slippage:",`${i.toSignificant()}%`);let y=Oo(n,me(u));this.logDebug("input side:",y);let f=ae;n.isZero()||(f=y==="base"?Ht(n.raw.mul(d),m):Ht(n.raw.mul(m),d));let h=new oe(pe).add(i).mul(f).quotient,L=new O(r,f),g=new O(r,h);return this.logDebug("anotherAmount:",L.toFixed(),"maxAnotherAmount:",g.toFixed()),{anotherAmount:L,maxAnotherAmount:g}}async swapWithAMM(e){let{poolKeys:n,payer:r,amountIn:i,amountOut:a,fixedSide:u,config:c}=e;this.logDebug("amountIn:",i),this.logDebug("amountOut:",a),(i.isZero()||a.isZero())&&this.logAndCreateError("amounts must greater than zero","amounts",{amountIn:i.toFixed(),amountOut:a.toFixed()});let{account:m}=this.scope,d=this.createTxBuilder(),{bypassAssociatedCheck:p=!1}=c||{},[y,f]=[i.token,a.token],b=await m.getCreatedTokenAccount({mint:y.mint,associatedOnly:!1}),h=await m.getCreatedTokenAccount({mint:f.mint}),[L,g]=[i.raw,a.raw],F=await m.handleTokenAccount({side:"in",amount:L,mint:y.mint,tokenAccount:b,bypassAssociatedCheck:p}),{tokenAccount:T}=F,_=ee(F,["tokenAccount"]);d.addInstruction(_);let N=await m.handleTokenAccount({side:"out",amount:0,mint:f.mint,tokenAccount:h,payer:r,bypassAssociatedCheck:p}),{tokenAccount:A}=N,q=ee(N,["tokenAccount"]);return d.addInstruction(q),d.addInstruction({instructions:[Kr({poolKeys:n,userKeys:{tokenAccountIn:T,tokenAccountOut:A,owner:this.scope.ownerPubKey},amountIn:L,amountOut:g,fixedSide:u})]}),d.buildMultiTx({extInfo:{amountOut:a}})}async createPool(e){this.checkDisabled(),this.scope.checkOwner(),e.version!==4&&this.logAndCreateError("invalid version","poolKeys.version",e.version);let n=this.createTxBuilder(),r=await Fo(e);return await n.addInstruction({instructions:[qr(K(x({},r),{owner:this.scope.ownerPubKey}))]}).build()}async initPool(e){e.version!==4&&this.logAndCreateError("invalid version","poolKeys.version",e.version);let{baseAmount:n,quoteAmount:r,startTime:i=0,config:a}=e,u=await Fo(e),{baseMint:c,quoteMint:m,lpMint:d,baseVault:p,quoteVault:y}=u,f=this.createTxBuilder(),{account:b}=this.scope,h=!!(a!=null&&a.bypassAssociatedCheck),L=await b.getCreatedTokenAccount({mint:c,associatedOnly:!1}),g=await b.getCreatedTokenAccount({mint:m,associatedOnly:!1});!L&&!g&&this.logAndCreateError("cannot found target token accounts","tokenAccounts",b.tokenAccounts);let T=await b.getCreatedTokenAccount({mint:d,associatedOnly:!1}),D=await b.handleTokenAccount({side:"in",amount:n.raw,mint:c,tokenAccount:L,bypassAssociatedCheck:h}),{tokenAccount:_}=D,A=ee(D,["tokenAccount"]);f.addInstruction(A);let G=await b.handleTokenAccount({side:"in",amount:r.raw,mint:m,tokenAccount:g,bypassAssociatedCheck:h}),{tokenAccount:q}=G,F=ee(G,["tokenAccount"]);f.addInstruction(F);let X=await b.handleTokenAccount({side:"out",amount:0,mint:d,tokenAccount:T,bypassAssociatedCheck:h}),{tokenAccount:N}=X,J=ee(X,["tokenAccount"]);return f.addInstruction(J),f.addInstruction({instructions:[Ue({source:_,destination:p,owner:this.scope.ownerPubKey,amount:n.raw}),Ue({source:q,destination:y,owner:this.scope.ownerPubKey,amount:r.raw}),Fr({poolKeys:u,userKeys:{lpTokenAccount:N,payer:this.scope.ownerPubKey},startTime:i})]}),await f.build()}async addLiquidity(e){let{poolId:n,amountInA:r,amountInB:i,fixedSide:a,config:u}=e,c=E({publicKey:n}),m=this.allPools.find(wt=>wt.id===c.toBase58());m||this.logAndCreateError("pool not found",n);let p=(await this.sdkParseJsonLiquidityInfo([m]))[0];p||this.logAndCreateError("pool parse error",p),this.logDebug("amountInA:",r,"amountInB:",i),(r.isZero()||i.isZero())&&this.logAndCreateError("amounts must greater than zero","amountInA & amountInB",{amountInA:r.toFixed(),amountInB:i.toFixed()});let{account:y}=this.scope,f=(u==null?void 0:u.bypassAssociatedCheck)||!1,[b,h]=[r.token,i.token],L=await y.getCreatedTokenAccount({mint:b.mint,associatedOnly:!1}),g=await y.getCreatedTokenAccount({mint:h.mint,associatedOnly:!1});!L&&!g&&this.logAndCreateError("cannot found target token accounts","tokenAccounts",y.tokenAccounts);let T=await y.getCreatedTokenAccount({mint:p.lpMint}),_=[b,h],A=[L,g],q=[r.raw,i.raw],[F]=Jr(r,i,p),N="base";(!["quote","base"].includes(F)||!$r(a))&&this.logAndCreateError("invalid fixedSide","fixedSide",a),F==="quote"?(_.reverse(),A.reverse(),q.reverse(),N=a==="a"?"quote":"base"):F==="base"&&(N=a==="a"?"base":"quote");let[J,D]=_,[G,X]=A,[$,re]=q,se=this.createTxBuilder(),Je=await y.handleTokenAccount({side:"in",amount:$,mint:J.mint,tokenAccount:G,bypassAssociatedCheck:f}),{tokenAccount:Ie}=Je,ce=ee(Je,["tokenAccount"]);se.addInstruction(ce);let $e=await y.handleTokenAccount({side:"in",amount:re,mint:D.mint,tokenAccount:X,bypassAssociatedCheck:f}),{tokenAccount:fe}=$e,de=ee($e,["tokenAccount"]);se.addInstruction(de);let je=await y.handleTokenAccount({side:"out",amount:0,mint:p.lpMint,tokenAccount:T,bypassAssociatedCheck:f}),{tokenAccount:gt}=je,Pt=ee(je,["tokenAccount"]);return se.addInstruction(Pt),se.addInstruction({instructions:[Nr({poolKeys:p,userKeys:{baseTokenAccount:Ie,quoteTokenAccount:fe,lpTokenAccount:gt,owner:this.scope.ownerPubKey},baseAmountIn:$,quoteAmountIn:re,fixedSide:N})]}),await se.build()}async removeLiquidity(e){let{poolId:n,amountIn:r,config:i}=e,a=E({publicKey:n}),u=this.allPools.find(D=>D.id===a.toBase58());u||this.logAndCreateError("pool not found",n);let m=(await this.sdkParseJsonLiquidityInfo([u]))[0];m||this.logAndCreateError("pool pass error",m);let{baseMint:d,quoteMint:p,lpMint:y}=m;this.logDebug("amountIn:",r),r.isZero()&&this.logAndCreateError("amount must greater than zero","amountIn",r.toFixed()),r.token.mint.equals(y)||this.logAndCreateError("amountIn's token not match lpMint","amountIn",r);let{account:f}=this.scope,b=await f.getCreatedTokenAccount({mint:y,associatedOnly:!1});b||this.logAndCreateError("cannot found lpTokenAccount","tokenAccounts",f.tokenAccounts);let h=await f.getCreatedTokenAccount({mint:d}),L=await f.getCreatedTokenAccount({mint:p}),g=this.createTxBuilder(),T=(i==null?void 0:i.bypassAssociatedCheck)||!1,N=await f.handleTokenAccount({side:"out",amount:0,mint:d,tokenAccount:h,bypassAssociatedCheck:T}),{tokenAccount:_}=N,A=ee(N,["tokenAccount"]);g.addInstruction(A);let J=await f.handleTokenAccount({side:"out",amount:0,mint:p,tokenAccount:L,bypassAssociatedCheck:T}),{tokenAccount:q}=J,F=ee(J,["tokenAccount"]);return g.addInstruction(F),g.addInstruction({instructions:[Us.requestUnits({units:4e5,additionalFee:0}),vr({poolKeys:m,userKeys:{lpTokenAccount:b,baseTokenAccount:_,quoteTokenAccount:q,owner:this.scope.ownerPubKey},amountIn:r.raw})]}),await g.build()}lpMintToTokenAmount({poolId:e,amount:n,decimalDone:r}){let i=E({publicKey:e});i||this.logAndCreateError("pool not found");let a=this._poolInfoMap.get(i.toBase58()),u=ue(n),c=new C({mint:a.lpMint,decimals:a.lpDecimals}),m=r?new I(u.numerator,u.denominator):new I(u.numerator,u.denominator).mul(new Ae(10).pow(new Ae(c.decimals)));return new O(c,xe(m))}getFixedSide({poolId:e,inputMint:n}){let[r,i]=[E({publicKey:e}),E({publicKey:n})],a=this._poolInfoMap.get(r.toBase58());a||this.logAndCreateError("pool not found",r.toBase58());let u=a.baseMint===i.toBase58();return(i.equals(Se)||i.equals(U))&&(u=!u),u?"a":"b"}};import{PublicKey as Xr}from"@solana/web3.js";import{intersection as ei,xor as Qs}from"lodash";import{PublicKey as Gs}from"@solana/web3.js";var Js="routeUGWgWzqBWFcrCfv8tritsqukccJPu3q5GPP3xS",pt=new Gs(Js),jr=["amm","serum","route"],Yr=[mn,_t,Se,dn,cn,pn,fn,ln,yn].map(o=>o.toBase58());import{TOKEN_PROGRAM_ID as Wt}from"@solana/spl-token";import{SystemProgram as Qr,TransactionInstruction as Hr}from"@solana/web3.js";var Vt=R([v("instruction"),l("amountIn"),l("amountOut")]),Ct=R([v("instruction")]);var $s=M("Raydium_route_instruction");function zr(o){let{fixedSide:t}=o;if(t==="in")return[js(o),Ys(o)];throw $s.logWithError("invalid params","params",o),new Error(`invalid params, params: ${o}`)}function js({fromPoolKeys:o,toPoolKeys:t,userKeys:e,amountIn:n,amountOut:r}){let i=Buffer.alloc(Vt.span),a;return o.version===4?(Vt.encode({instruction:0,amountIn:S(n),amountOut:S(r)},i),a=[s({pubkey:Qr.programId,isWritable:!1}),s({pubkey:Wt,isWritable:!1}),s({pubkey:o.programId,isWritable:!1}),s({pubkey:o.id}),s({pubkey:t.id,isWritable:!1}),s({pubkey:o.authority,isWritable:!1}),s({pubkey:o.openOrders}),s({pubkey:o.baseVault}),s({pubkey:o.quoteVault}),s({pubkey:o.marketProgramId,isWritable:!1}),s({pubkey:o.marketId}),s({pubkey:o.marketBids}),s({pubkey:o.marketAsks}),s({pubkey:o.marketEventQueue}),s({pubkey:o.marketBaseVault}),s({pubkey:o.marketQuoteVault}),s({pubkey:o.marketAuthority,isWritable:!1}),s({pubkey:e.inTokenAccount}),s({pubkey:e.middleTokenAccount}),s({pubkey:e.middleStatusAccount}),s({pubkey:e.owner,isWritable:!1,isSigner:!0})]):(Vt.encode({instruction:2,amountIn:S(n),amountOut:S(r)},i),a=[s({pubkey:Qr.programId,isWritable:!1}),s({pubkey:Wt,isWritable:!1}),s({pubkey:o.programId,isWritable:!1}),s({pubkey:o.id}),s({pubkey:t.id,isWritable:!1}),s({pubkey:o.authority,isWritable:!1}),s({pubkey:o.openOrders}),s({pubkey:o.baseVault}),s({pubkey:o.quoteVault}),s({pubkey:ke,isWritable:!1}),s({pubkey:o.marketProgramId,isWritable:!1}),s({pubkey:o.marketId}),s({pubkey:o.marketBids}),s({pubkey:o.marketAsks}),s({pubkey:o.marketEventQueue}),s({pubkey:o.id}),s({pubkey:o.id}),s({pubkey:o.id}),s({pubkey:e.inTokenAccount}),s({pubkey:e.middleTokenAccount}),s({pubkey:e.middleStatusAccount}),s({pubkey:e.owner,isWritable:!1,isSigner:!0})]),new Hr({programId:pt,keys:a,data:i})}function Ys({fromPoolKeys:o,toPoolKeys:t,userKeys:e}){let n=Buffer.alloc(Ct.span),r;return t.version===4?(Ct.encode({instruction:1},n),r=[s({pubkey:Wt,isWritable:!1}),s({pubkey:t.programId,isWritable:!1}),s({pubkey:o.id,isWritable:!1}),s({pubkey:t.id}),s({pubkey:t.authority,isWritable:!1}),s({pubkey:t.openOrders}),s({pubkey:t.baseVault}),s({pubkey:t.quoteVault}),s({pubkey:t.marketProgramId,isWritable:!1}),s({pubkey:t.marketId}),s({pubkey:t.marketBids}),s({pubkey:t.marketAsks}),s({pubkey:t.marketEventQueue}),s({pubkey:t.marketBaseVault}),s({pubkey:t.marketQuoteVault}),s({pubkey:t.marketAuthority,isWritable:!1}),s({pubkey:e.middleTokenAccount}),s({pubkey:e.outTokenAccount}),s({pubkey:e.middleStatusAccount}),s({pubkey:e.owner,isWritable:!1,isSigner:!0})]):(Ct.encode({instruction:3},n),r=[s({pubkey:Wt,isWritable:!1}),s({pubkey:t.programId,isWritable:!1}),s({pubkey:o.id,isWritable:!1}),s({pubkey:t.id}),s({pubkey:t.authority,isWritable:!1}),s({pubkey:t.openOrders}),s({pubkey:t.baseVault}),s({pubkey:t.quoteVault}),s({pubkey:ke,isWritable:!1}),s({pubkey:t.marketProgramId,isWritable:!1}),s({pubkey:t.marketId}),s({pubkey:t.marketBids}),s({pubkey:t.marketAsks}),s({pubkey:t.marketEventQueue}),s({pubkey:t.id}),s({pubkey:t.id}),s({pubkey:t.id}),s({pubkey:e.middleTokenAccount}),s({pubkey:e.outTokenAccount}),s({pubkey:e.middleStatusAccount}),s({pubkey:e.owner,isWritable:!1,isSigner:!0})]),new Hr({programId:pt,keys:r,data:n})}async function Zr({programId:o,fromPoolId:t,middleMint:e,owner:n}){let{publicKey:r}=await Pe([t.toBuffer(),e.toBuffer(),n.toBuffer()],o);return r}var ft=class extends ie{constructor(t){super(t)}computeRouteAmountOut({fromPoolKeys:t,toPoolKeys:e,fromPoolInfo:n,toPoolInfo:r,amountIn:i,outputToken:a,slippage:u}){let{swap:c}=qo(n),{swap:m}=qo(r);(!c||!m)&&this.logAndCreateError("pools swap not enabled","pools",{fromPoolKeys:t,toPoolKeys:e,fromPoolInfo:n,toPoolInfo:r});let d=i.token,p=a;(!Ge(d,t)||!Ge(p,e))&&this.logAndCreateError("pools cannot be routed","pools",{fromPoolKeys:t,toPoolKeys:e});let y=[t.baseMint.toBase58(),t.quoteMint.toBase58()],f=[e.baseMint.toBase58(),e.quoteMint.toBase58()],b=[...y,...f],h=[n.baseDecimals,n.quoteDecimals,r.baseDecimals,r.quoteDecimals],[L,g]=[d.mint.toBase58(),p.mint.toBase58()],T=Qs(y,f);(T.length!==2||!T.includes(L)||!T.includes(g))&&this.logAndCreateError("xor tokens not match","pools",{fromPoolKeys:t,toPoolKeys:e});let _=ei(y,f);_.length!==1&&this.logAndCreateError("cannot found middle token of two pools","pools",{fromPoolKeys:t,toPoolKeys:e});let A=_[0],q=b.indexOf(A);q===-1&&this.logAndCreateError("cannot found middle token","pools",{fromPoolKeys:t,toPoolKeys:e});let F=h[q],N=new Xr(A),J=new C({mint:N,decimals:F});this.logInfo("from pool:",t),this.logInfo("to pool:",e),this.logInfo("intersection mints:",_),this.logInfo("xor mints:",T),this.logInfo("middleMint:",A);let{minAmountOut:D,priceImpact:G,fee:X}=this.scope.liquidity.computeAmountOut({poolKeys:t,poolInfo:n,amountIn:i,outputToken:J,slippage:u}),{amountOut:$,minAmountOut:re,priceImpact:se,fee:Ie}=this.scope.liquidity.computeAmountOut({poolKeys:e,poolInfo:r,amountIn:D,outputToken:a,slippage:u}),ce=null,[fe,de]=[i.raw,$.raw];return!fe.isZero()&&!de.isZero()&&(ce=new j({baseToken:d,denominator:fe,quoteToken:a,numerator:de}),this.logDebug("executionPrice:",`1 ${d.symbol} \u2248 ${ce.toFixed()} ${a.symbol}`),this.logDebug("executionPrice invert:",`1 ${a.symbol} \u2248 ${ce.invert().toFixed()} ${d.symbol}`)),{amountOut:$,minAmountOut:re,executionPrice:ce,priceImpact:G.add(se),fee:[X,Ie]}}async swapWithRoute(t){let{fromPoolKeys:e,toPoolKeys:n,amountIn:r,amountOut:i,fixedSide:a,config:u}=t;this.logDebug("amountIn:",r,"amountOut:",i),(r.isZero()||i.isZero())&&this.logAndCreateError("amounts must greater than zero","amounts",{amountIn:r.toFixed(),amountOut:i.toFixed()});let{account:c}=this.scope,{bypassAssociatedCheck:m=!1}=u||{},[d,p]=[r.token,i.token],y=await this.scope.account.getCreatedTokenAccount({mint:d.mint,associatedOnly:!1}),f=await this.scope.account.getCreatedTokenAccount({mint:p.mint}),b=[e.baseMint.toBase58(),e.quoteMint.toBase58()],h=[n.baseMint.toBase58(),n.quoteMint.toBase58()],g=ei(b,h)[0],T=new Xr(g),_=await this.scope.account.getCreatedTokenAccount({mint:T}),[A,q]=[r.raw,i.raw],F=this.createTxBuilder(),N=this.createTxBuilder(),ce=await c.handleTokenAccount({side:"in",amount:A,mint:d.mint,tokenAccount:y,bypassAssociatedCheck:m,skipCloseAccount:!0}),{tokenAccount:J}=ce,D=ee(ce,["tokenAccount"]);F.addInstruction(D);let fe=await c.handleTokenAccount({side:"out",amount:0,mint:p.mint,tokenAccount:f,bypassAssociatedCheck:m,skipCloseAccount:!0}),{tokenAccount:G}=fe,X=ee(fe,["tokenAccount"]);F.addInstruction(X);let de=await c.handleTokenAccount({side:"in",amount:0,mint:T,tokenAccount:_,bypassAssociatedCheck:m,skipCloseAccount:!0}),{tokenAccount:$}=de,re=ee(de,["tokenAccount"]);F.addInstruction(re),N.addInstruction({instructions:zr({fromPoolKeys:e,toPoolKeys:n,userKeys:{inTokenAccount:J,outTokenAccount:G,middleTokenAccount:$,middleStatusAccount:await Zr({programId:pt,fromPoolId:e.id,middleMint:T,owner:this.scope.ownerPubKey}),owner:this.scope.ownerPubKey},amountIn:A,amountOut:q,fixedSide:a})});let se=F.build();return await N.buildMultiTx({extraPreBuildData:[se],extInfo:{amountOut:q}})}};import{PublicKey as Hs}from"@solana/web3.js";import oi from"bn.js";var No=R([qe("mintAuthorityOption"),k("mintAuthority"),l("supply"),v("decimals"),v("isInitialized"),qe("freezeAuthorityOption"),k("freezeAuthority")]);function ti(o,t){return o.sort((e,n)=>{let{official:r,unOfficial:i}=t,a=new Set(r),u=new Set(i),c=p=>a.has(p.mint)?1:u.has(p.mint)?2:3,m=c(e)-c(n),d=p=>!/^[a-zA-Z]/.test(p);if(m===0){let p=d(e.symbol),y=d(n.symbol);return p&&!y?1:!p&&y?-1:e.symbol.localeCompare(n.symbol)}else return m})}async function Uf(o,t){try{if(!o)return;let e=await o.getAccountInfo(E({publicKey:t}));return!e||e.data.length!==No.span?void 0:No.decode(e.data)}catch{return}}var yt=class extends ie{constructor(e){super(e);this._tokens=[];this._tokenMap=new Map;this._tokenPrice=new Map;this._mintList={official:[],unOfficial:[],unNamed:[]}}async load(e){this.checkDisabled(),await this.scope.fetchTokens(e==null?void 0:e.forceUpdate),this._mintList={official:[],unOfficial:[],unNamed:[]},this._tokens=[],this._tokenMap=new Map;let{data:n}=this.scope.apiData.tokens||{data:{official:[],unOfficial:[],unNamed:[],blacklist:[]}},r=new Set(n.blacklist);[n.official,n.unOfficial,n.unNamed].forEach((i,a)=>{i.forEach(u=>{let c=["official","unOfficial","unNamed"][a];!r.has(u.mint)&&u.mint!==U.toBase58()&&(this._tokens.push(K(x({},u),{symbol:u.symbol||"",name:u.name||""})),this._mintList[c].push(u.mint))})}),this._mintList.official.push(Xe.mint.toBase58()),this._tokens=ti(this._tokens,this._mintList),this._tokens.push(K(x({},Xe),{mint:U.toBase58()})),this._tokens.forEach(i=>{this._tokenMap.set(i.mint,K(x({},i),{id:i.mint}))}),this._tokenMap.set(Y.mint,K(x({},Y),{icon:Xe.icon,id:"wsol"})),this._tokenMap.set(U.toBase58(),K(x({},Xe),{mint:U.toBase58()}))}get allTokens(){return this._tokens}get allTokenMap(){return this._tokenMap}get tokenMints(){return this._mintList}get tokenPrices(){return this._tokenPrice}async fetchTokenPrices(e){let n=this.allTokens.filter(m=>{var d;return!!((d=m.extensions)!=null&&d.coingeckoId)&&m.mint!==Hs.default.toBase58()}),r=n.map(m=>m.extensions.coingeckoId),i=await this.scope.api.getCoingeckoPrice(r),a=n.reduce((m,d)=>i[d.extensions.coingeckoId].usd?K(x({},m),{[d.mint]:Qe({token:this._tokenMap.get(d.mint),numberPrice:i[d.extensions.coingeckoId].usd,decimalDone:!0})}):m,{}),u=e||await this.scope.api.getRaydiumTokenPrice(),c=Object.keys(u).reduce((m,d)=>this._tokenMap.get(d)?K(x({},m),{[d]:Qe({token:this._tokenMap.get(d),numberPrice:u[d],decimalDone:!0})}):m,{});return this._tokenPrice=new Map([...Object.entries(a),...Object.entries(c)]),this._tokenPrice}mintToToken(e){let n=E({publicKey:e,transformSol:!0}),r=this.allTokenMap.get(n.toBase58());r||this.logAndCreateError("token not found, mint:",n.toBase58());let{decimals:i,name:a,symbol:u}=r;return new C({mint:e,decimals:i,name:a,symbol:u})}mintToTokenAmount({mint:e,amount:n,decimalDone:r}){let i=this.mintToToken(e);return r?new O(i,S(n)):new O(i,this.decimalAmount({mint:e,amount:n,decimalDone:r}))}decimalAmount({mint:e,amount:n}){let r=ue(n),i=this.mintToToken(e);return xe(new I(r.numerator,r.denominator).mul(new oi(10**i.decimals)))}uiAmount({mint:e,amount:n}){let r=ue(n),i=this.mintToToken(e);return i?new I(r.numerator,r.denominator).div(new oi(10**i.decimals)).toSignificant(i.decimals):""}};function ni(o){let t=[];for(let e=0;e<o.length;e++)for(let n=0;n<o.length;n++)e!=n&&t.push([o[e],o[n]]);return t}var bt=class extends ie{async load(){this.checkDisabled(),await this.scope.fetchLiquidity()}async _getBestSwapPool({availablePools:t,officialPoolIdSet:e}){if(t.length===0)return;if(t.length===1)return t[0];let n=t.filter(a=>e.has(a.id));return n.length===1?n[0]:(await this.scope.liquidity.sdkParseJsonLiquidityInfo(n.length?n:t)).reduce((a,u)=>{let c=a.version===5,m=u.version===5;return c&&!m?a:!c&&m?u:xn(no(a.lpSupply,10**a.lpDecimals),no(u.lpSupply,10**u.lpDecimals))?a:u}).jsonInfo}async getAvailablePools(t){this.checkDisabled();let{inputMint:e,outputMint:n}=t,[r,i]=[E({publicKey:e,transformSol:!0}).toBase58(),E({publicKey:n,transformSol:!0}).toBase58()],a=this.scope.liquidity.allPools.filter(p=>p.baseMint===r&&p.quoteMint===i||p.baseMint===i&&p.quoteMint===r),u=new Set([...Yr,r,i]),c=new Set(JSON.parse(JSON.stringify([...u])));c.delete(r),c.delete(i);let m=this.scope.liquidity.allPools.filter(p=>{let y=u.has(p.baseMint)&&u.has(p.quoteMint),f=c.has(p.baseMint)&&c.has(p.quoteMint);return y&&!f}),d=await this._getBestSwapPool({availablePools:a,officialPoolIdSet:this.scope.liquidity.allPoolIdSet.official});return{availablePools:a,best:d,routedPools:m}}async getBestAmountOut({pools:t,amountIn:e,inputToken:n,outputToken:r,slippage:i,features:a}){if(this.checkDisabled(),!t){let{routedPools:_}=await this.getAvailablePools({inputMint:n.mint,outputMint:r.mint});t=_}let u=await this.scope.liquidity.sdkParseJsonLiquidityInfo(t||[]),c=(t||[]).map((_,A)=>({poolKeys:me(_),poolInfo:u[A]})),m=a||jr;this.logDebug("features:",m),c.length||this.logAndCreateError("please provide at least one source of trade or (inputMint & outputMint)",c);let d=[],p="amm",y=new O(n,e),f=new O(r,0),b=f,h=null,L=null,g=new oe(ae),T=[];if(m.includes("amm"))for(let{poolKeys:_,poolInfo:A}of c)try{let{amountOut:q,minAmountOut:F,currentPrice:N,executionPrice:J,priceImpact:D,fee:G}=this.scope.liquidity.computeAmountOut({poolKeys:_,poolInfo:A,amountIn:y,outputToken:r,slippage:i});q.gt(f)&&(console.log("amm",A),d=[{source:"amm",keys:_}],p="amm",f=q,b=F,h=N,L=J,g=D,T=[G])}catch{}if(m.includes("route")){let _=ni(c);for(let A of _){if(A.length!==2)continue;let[q,F]=A,{poolKeys:N,poolInfo:J}=q,{poolKeys:D,poolInfo:G}=F;try{let{amountOut:X,minAmountOut:$,executionPrice:re,priceImpact:se,fee:Ie}=this.scope.route.computeRouteAmountOut({fromPoolKeys:N,toPoolKeys:D,fromPoolInfo:J,toPoolInfo:G,amountIn:y,outputToken:r,slippage:i});X.gt(f)&&(d=[{source:"amm",keys:N},{source:"amm",keys:D}],p="route",f=X,b=$,L=re,g=se,T=Ie)}catch{}}}return{routes:d,routeType:p,amountOut:f,minAmountOut:b,fixedSide:"in",currentPrice:h,executionPrice:L,priceImpact:g,fee:T}}async directSwap(t){this.checkDisabled();let{amountOut:e,amountIn:n,slippage:r,config:i}=t,a=n.token,u=e.token,{routes:c,routeType:m,minAmountOut:d}=await this.getBestAmountOut({inputToken:a,outputToken:u,amountIn:n.raw,slippage:r});return await this.swap({routes:c,routeType:m,amountIn:n,amountOut:d,fixedSide:"in",config:i})}async swap(t){this.checkDisabled(),this.scope.checkOwner();let{routes:e,routeType:n,amountIn:r,amountOut:i,fixedSide:a,config:u}=t;if(n==="amm"&&e.length===1)return await this.scope.liquidity.swapWithAMM({poolKeys:e[0].keys,amountIn:r,amountOut:i,fixedSide:a,config:u});if(n==="route"&&e.length===2)return await this.scope.route.swapWithRoute({fromPoolKeys:e[0].keys,toPoolKeys:e[1].keys,amountIn:r,amountOut:i,fixedSide:a,config:u});throw this.logAndCreateError("invalid routes with routeType","routes",{routeType:n,routes:e}),new Error("invalid routes with routeType")}async getWSolAccounts(){this.scope.checkOwner(),await this.scope.account.fetchWalletTokenAccounts();let t=this.scope.account.tokenAccounts.filter(e=>e.mint.equals(Se));return t.sort((e,n)=>e.isAssociated?1:n.isAssociated||e.amount.lt(n.amount)?-1:1),t}async unWrapWSol(t){let e=await this.getWSolAccounts(),n=this.createTxBuilder(),r=await _e({connection:this.scope.connection,owner:this.scope.ownerPubKey,payer:this.scope.ownerPubKey,amount:0});n.addInstruction(r);let i=S(t);for(let a=0;a<e.length;a++)i.gte(e[a].amount)?(n.addInstruction({instructions:[Fe({tokenAccount:e[a].publicKey,payer:this.scope.ownerPubKey,owner:this.scope.ownerPubKey})]}),i.sub(e[a].amount)):(n.addInstruction({instructions:[Fe({tokenAccount:e[a].publicKey,payer:this.scope.ownerPubKey,owner:this.scope.ownerPubKey})]}),Ue({destination:r.signers[0].publicKey,source:e[a].publicKey,amount:i,owner:this.scope.ownerPubKey}));return n.build()}async wrapWSol(t){let e=await this.getWSolAccounts(),n=this.createTxBuilder(),r=await _e({connection:this.scope.connection,owner:this.scope.ownerPubKey,payer:this.scope.ownerPubKey,amount:t,skipCloseAccount:!0});return n.addInstruction(r),e.length&&n.addInstruction({instructions:[Ue({destination:e[0].publicKey,source:r.signers[0].publicKey,amount:t,owner:this.scope.ownerPubKey})],endInstructions:[Fe({tokenAccount:r.signers[0].publicKey,payer:this.scope.ownerPubKey,owner:this.scope.ownerPubKey})]}),n.build()}};var Me={},Ut=class{constructor(t){this.rawBalances=new Map;let{connection:e,cluster:n,owner:r,api:i,defaultApiTokens:a,defaultApiLiquidityPools:u,defaultApiFarmPools:c,defaultApiPairsInfo:m,apiCacheTime:d}=t;this._connection=e,this.cluster=n,this._owner=r?new le(r):void 0,this._signAllTransactions=t.signAllTransactions,this.api=i,this._apiCacheTime=d||5*60*1e3,this.logger=M("Raydium"),this.farm=new mt({scope:this,moduleName:"Raydium_Farm"}),this.account=new nt({scope:this,moduleName:"Raydium_Account",tokenAccounts:t.tokenAccounts,tokenAccountRawInfos:t.tokenAccountRawInfos}),this.liquidity=new dt({scope:this,moduleName:"Raydium_Liquidity"}),this.token=new yt({scope:this,moduleName:"Raydium_token"}),this.trade=new bt({scope:this,moduleName:"Raydium_trade"}),this.route=new ft({scope:this,moduleName:"Raydium_route"});let p=new Date().getTime(),[y,f,b,h]=[a?{fetched:p,data:a}:Me.tokens,u?{fetched:p,data:u}:Me.liquidityPools,c?{fetched:p,data:c}:Me.farmPools,m?{fetched:p,data:m}:Me.liquidityPairsInfo];this.apiData=x(x(x(x({},y?{tokens:y}:{}),f?{liquidityPools:f}:{}),b?{farmPools:b}:{}),h?{liquidityPairsInfo:h}:{})}static async load(t){let e=zs({cluster:"mainnet",owner:null,apiRequestInterval:3e5,apiRequestTimeout:1e4},t),{cluster:n,apiRequestTimeout:r}=e,i=new Kt({cluster:n,timeout:r}),a=new Ut(K(x({},e),{api:i}));return await a.token.load(),await a.liquidity.load(),a}get owner(){return this._owner}get ownerPubKey(){if(!this._owner)throw new Error(Ot);return this._owner.publicKey}setOwner(t){return this._owner=t?new le(t):void 0,this}get connection(){if(!this._connection)throw new Error(Mn);return this._connection}setConnection(t){return this._connection=t,this}get signAllTransactions(){return this._signAllTransactions}setSignAllTransactions(t){return this._signAllTransactions=t,this}checkOwner(){if(!this.owner)throw this.logger.error(Ot),new Error(Ot)}isCacheInvalidate(t){return new Date().getTime()-t>this._apiCacheTime}async fetchTokens(t){if(this.apiData.tokens&&!this.isCacheInvalidate(this.apiData.tokens.fetched)&&!t)return this.apiData.tokens.data;let e={fetched:Date.now(),data:await this.api.getTokens()};return this.apiData.tokens=e,Me.tokens=e,e.data}async fetchLiquidity(t){if(this.apiData.liquidityPools&&!this.isCacheInvalidate(this.apiData.liquidityPools.fetched)&&!t)return this.apiData.liquidityPools.data;let e={fetched:Date.now(),data:await this.api.getLiquidityPools()};return this.apiData.liquidityPools=e,Me.liquidityPools=e,e.data}async fetchPairs(t){var n;if(this.apiData.liquidityPairsInfo&&!this.isCacheInvalidate(this.apiData.liquidityPairsInfo.fetched)&&!t)return((n=this.apiData.liquidityPairsInfo)==null?void 0:n.data)||[];let e={fetched:Date.now(),data:await this.api.getPairsInfo()};return this.apiData.liquidityPairsInfo=e,Me.liquidityPairsInfo=e,e.data}async fetchFarms(t){if(this.apiData.farmPools&&!this.isCacheInvalidate(this.apiData.farmPools.fetched)&&!t)return this.apiData.farmPools.data;let e={fetched:Date.now(),data:await this.api.getFarmPools()};return this.apiData.farmPools=e,Me.farmPools=e,e.data}async chainTimeOffset(){let t=await this.connection.getBlockTime(await this.connection.getSlot());return t?(t*1e3,Number((t*1e3-Date.now()).toFixed(0))):0}mintToToken(t){return this.token.mintToToken(t)}mintToTokenAmount(t){return this.token.mintToTokenAmount(t)}decimalAmount(t){return this.token.decimalAmount(t)}uiAmount(t){return this.token.uiAmount(t)}};var yb=o=>o;export{Wu as ANAMint,Kt as Api,We as BNLayout,nn as BN_100,du as BN_1000,pu as BN_10000,lu as BN_FIVE,pe as BN_ONE,be as BN_TEN,mu as BN_THREE,cu as BN_TWO,ae as BN_ZERO,Tm as BitStructure,On as Blob,eo as Currency,As as DataElement,yn as ETHMint,Xn as FARM_LOCK_MINT,er as FARM_LOCK_VAULT,zn as FARM_PROGRAMID_TO_VERSION,Yn as FARM_PROGRAM_ID_V3,os as FARM_PROGRAM_ID_V3_PUBKEY,Qn as FARM_PROGRAM_ID_V5,ns as FARM_PROGRAM_ID_V5_PUBKEY,Hn as FARM_PROGRAM_ID_V6,rs as FARM_PROGRAM_ID_V6_PUBKEY,or as FARM_VERSION_TO_LEDGER_LAYOUT,Zn as FARM_VERSION_TO_PROGRAMID,tr as FARM_VERSION_TO_STATE_LAYOUT,I as Fraction,kr as LIQUIDITY_FEES_DENOMINATOR,hr as LIQUIDITY_FEES_NUMERATOR,up as LIQUIDITY_PROGRAMID_TO_VERSION,ws as LIQUIDITY_PROGRAM_ID_V4,hs as LIQUIDITY_PROGRAM_ID_V5,Ir as LIQUIDITY_VERSION_TO_PROGRAM_ID,xr as LIQUIDITY_VERSION_TO_SERUM_VERSION,Sr as LIQUIDITY_VERSION_TO_STATE_LAYOUT,tt as Layout,wr as LiquidityPoolStatus,ke as MODEL_DATA_PUBKEY,Cu as NRVMint,co as OptionLayout,le as Owner,cn as PAIMint,oe as Percent,j as Price,_t as RAYMint,pt as ROUTE_PROGRAM_ID_V1,Ut as Raydium,Yt as Rounding,Mp as SERUM_PROGRAMID_TO_VERSION,vs as SERUM_PROGRAM_ID_V3,Ds as SERUM_VERSION_TO_PROGRAM_ID,U as SOLMint,No as SPL_MINT_LAYOUT,Vu as SRMMint,vt as StableLayout,mo as Structure,sn as TOKEN_SOL,Y as TOKEN_WSOL,C as Token,O as TokenAmount,Mt as TxBuilder,ao as UInt,mn as USDCMint,fn as USDHMint,ln as USDTMint,lo as Union,Se as WSOLMint,Dn as WideBits,we as WrappedLayout,bn as _100_PERCENT,Tr as _LIQUIDITY_PROGRAM_ID_V4,Ar as _LIQUIDITY_PROGRAM_ID_V5,Js as _ROUTE_PROGRAM_ID_V1,Er as _SERUM_PROGRAM_ID_V3,s as accountMeta,_o as addLiquidityLayout,pl as array,fo as associatedLedgerAccountLayout,so as bits,Ce as blob,ul as bool,ko as calFarmRewardAmount,yr as calculateFarmPoolAprList,An as chunkArray,Fe as closeAccountInstruction,Oe as commonSystemAccountMeta,sr as createAssociatedLedgerAccountInstruction,M as createLogger,xo as createPoolV4Layout,_e as createWSolAccountInstructions,Xm as cstr,zu as currencyEquals,qa as decodeBool,jr as defaultRoutes,no as div,Ht as divCeil,it as dwLayout,Fa as encodeBool,lm as endlessRetry,Ei as eq,Ym as f32,Qm as f32be,Hm as f64,zm as f64be,Po as farmAddRewardLayout,nr as farmDespotVersionToInstruction,Xl as farmLedgerLayoutV3_1,Gn as farmLedgerLayoutV3_2,ed as farmLedgerLayoutV5_1,Jn as farmLedgerLayoutV5_2,$n as farmLedgerLayoutV6_1,lr as farmRewardInfoToConfig,bo as farmRewardLayout,go as farmRewardRestartLayout,ts as farmRewardTimeInfoLayout,Wn as farmStateV3Layout,Un as farmStateV5Layout,rt as farmStateV6Layout,rr as farmWithdrawVersionToInstruction,ys as fetchMultipleFarmInfoAndUpdate,Pe as findProgramAddress,Ao as fixedSwapInLayout,Io as fixedSwapOutLayout,Fi as forecastTransactionSize,Os as formatLayout,Oo as getAmountSide,Jr as getAmountsSide,cr as getAssociatedAuthority,ho as getAssociatedLedgerAccount,Nt as getAssociatedLedgerPoolAccount,Zr as getAssociatedMiddleStatusAccount,Fo as getAssociatedPoolKeys,Rn as getDate,Mr as getDxByDyBaseIn,Rr as getDyByDxBaseIn,ds as getFarmLedgerLayout,mr as getFarmProgramId,ps as getFarmStateLayout,ls as getFarmVersion,Cs as getLiquidityAssociatedAuthority,Re as getLiquidityAssociatedId,Jp as getLiquidityInfo,Vs as getLiquidityProgramId,Gp as getLiquidityStateLayout,Ln as getMax,vi as getMultipleAccountsInfo,In as getMultipleAccountsInfoWithCustomFlags,qo as getPoolEnabledFeatures,wn as getRecentBlockHash,Uf as getSPLTokenInfo,Wr as getSerumAssociatedAuthority,Cr as getSerumProgramId,Vr as getSerumVersion,Br as getStablePrice,Vi as getTime,kc as getTimestamp,Ur as getTokenSide,Ws as getTokensSide,Am as greedy,ni as groupPools,Di as gt,xn as gte,al as i128,il as i64,Ge as includesToken,So as initPoolLayout,Ja as initTokenAccountInstruction,Kc as intersection,Ee as isDateAfter,et as isDateBefore,Bt as isMeaningfulNumber,_n as isNumber,wo as isValidFarmVersion,$r as isValidFixedSide,me as jsonInfo2PoolKeys,pr as judgeFarmType,Lo as liquidityStateV4Layout,ks as liquidityStateV5Layout,jc as lt,Yc as lte,dn as mSOLMint,Kr as makeAMMSwapInstruction,Nr as makeAddLiquidityInstruction,ur as makeCreateFarmInstruction,qr as makeCreatePoolInstruction,Fr as makeInitPoolInstruction,vr as makeRemoveLiquidityInstruction,zr as makeRouteSwapInstruction,Or as makeSimulatePoolInfoInstruction,Gr as makeSimulationPoolInfo,Fs as makeSwapFixedInInstruction,Ns as makeSwapFixedOutInstruction,js as makeSwapInFixedInInstruction,Ys as makeSwapOutFixedInInstruction,Ue as makeTransferInstruction,dr as mergeSdkFarmInfo,Is as modelDataInfoLayout,rn as mul,Cm as ns64,jm as ns64be,_m as nu64,qm as nu64be,uo as offset,ro as offsetDateTime,sl as option,S as parseBigNumberish,ue as parseNumberInfo,Tn as parseSimulateLogToJson,ge as parseSimulateValue,En as parseTokenAccountResp,Ft as poolTypeV6,k as publicKey,Xe as quantumSOLHydratedTokenJsonInfo,Za as realFarmStateV3Layout,Xa as realFarmStateV5Layout,es as realFarmV6Layout,Ro as removeLiquidityLayout,Vt as routeSwapInLayout,Ct as routeSwapOutLayout,dl as rustEnum,Nm as s16,Wm as s16be,vm as s24,Um as s24be,Dm as s32,Gm as s32be,Em as s40,Jm as s40be,Vm as s48,$m as s48be,Fm as s8,H as seq,ru as setLoggerLevel,bi as shakeFractionDecimal,kn as simulateMultipleInstruction,gn as sleep,ti as sortTokens,he as splAccountLayout,Ii as splitNumber,pn as stSOLMint,ll as str,R as struct,Sn as sub,Yr as swapRouteMiddleMints,ml as tagged,Qt as tenExponential,xe as toBN,Ke as toFraction,$c as toFractionWithDecimals,It as toPercent,Qe as toTokenPrice,He as toTotalPrice,on as toUsdCurrency,un as tryParsePublicKey,Q as u128,Im as u16,Rm as u16be,xm as u24,Mm as u24be,qe as u32,Bm as u32be,Sm as u40,Km as u40be,Lm as u48,Om as u48be,l as u64,v as u8,fl as union,yb as unionArr,Zm as unionLayoutDiscriminator,qc as uniq,fs as updateFarmPoolInfo,el as utf8,E as validateAndParsePublicKey,ir as validateFarmRewards,cl as vec,Na as vecU8,fr as whetherIsStakeFarmPool,yo as withdrawRewardLayout,Oc as xor,yl as zeros};
//# sourceMappingURL=index.mjs.map