var Hr=Object.defineProperty,zr=Object.defineProperties;var Zr=Object.getOwnPropertyDescriptors;var gt=Object.getOwnPropertySymbols;var Wn=Object.prototype.hasOwnProperty,Un=Object.prototype.propertyIsEnumerable;var Cn=(n,e,t)=>e in n?Hr(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,L=(n,e)=>{for(var t in e||(e={}))Wn.call(e,t)&&Cn(n,t,e[t]);if(gt)for(var t of gt(e))Un.call(e,t)&&Cn(n,t,e[t]);return n},K=(n,e)=>zr(n,Zr(e));var ee=(n,e)=>{var t={};for(var o in n)Wn.call(n,o)&&e.indexOf(o)<0&&(t[o]=n[o]);if(n!=null&&gt)for(var o of gt(n))e.indexOf(o)<0&&Un.call(n,o)&&(t[o]=n[o]);return t};import{merge as Qa}from"lodash";import _i from"axios";import{get as Gn,set as Xr}from"lodash";import $n from"dayjs";import ei from"dayjs/plugin/utc";$n.extend(ei);var Wt=class{constructor(e){this.logLevel=e.logLevel!==void 0?e.logLevel:3,this.name=e.name}set level(e){this.logLevel=e}get time(){return $n().utc().format("YYYY/MM/DD HH:mm:ss UTC")}get moduleName(){return this.name}isLogLevel(e){return e<=this.logLevel}error(...e){return this.isLogLevel(0)?(console.error(this.time,this.name,"sdk logger error",...e),this):this}logWithError(...e){let t=e.map(o=>typeof o=="object"?JSON.stringify(o):o).join(", ");throw new Error(t)}warning(...e){return this.isLogLevel(1)?(console.warn(this.time,this.name,"sdk logger warning",...e),this):this}info(...e){return this.isLogLevel(2)?(console.info(this.time,this.name,"sdk logger info",...e),this):this}debug(...e){return this.isLogLevel(3)?(console.debug(this.time,this.name,"sdk logger debug",...e),this):this}},Jn={},ti={};function M(n){let e=Gn(Jn,n);if(!e){let t=Gn(ti,n);e=new Wt({name:n,logLevel:t}),Xr(Jn,n,e)}return e}import{PublicKey as gi}from"@solana/web3.js";import Pi from"bn.js";import ci from"big.js";import Tt from"bn.js";import V from"bn.js";var Pt=M("Raydium_bignumber");var ae=new V(0),pe=new V(1),rs=new V(2),is=new V(3),as=new V(5),be=new V(10),Qn=new V(100),ss=new V(1e3),us=new V(1e4),jn=9007199254740991;function x(n){if(n instanceof V)return n;if(typeof n=="string"){if(n.match(/^-?[0-9]+$/))return new V(n);Pt.logWithError(`invalid BigNumberish string: ${n}`)}return typeof n=="number"?(n%1&&Pt.logWithError(`BigNumberish number underflow: ${n}`),(n>=jn||n<=-jn)&&Pt.logWithError(`BigNumberish number overflow: ${n}`),new V(String(n))):typeof n=="bigint"?new V(n.toString()):(Pt.logWithError(`invalid BigNumberish value: ${n}`),new V(0))}function Ut(n){return be.pow(x(n))}function se(n){var u;if(n===void 0)return{denominator:"1",numerator:"0"};if(n instanceof V)return{numerator:n.toString(),denominator:"1"};if(n instanceof I)return{denominator:n.denominator.toString(),numerator:n.numerator.toString()};let e=String(n),[,t="",o="",r=""]=(u=e.replace(",","").match(/(-?)(\d*)\.?(\d*)/))!=null?u:[],i="1"+"0".repeat(r.length),a=t+(o==="0"?"":o)+r||"0";return{denominator:i,numerator:a,sign:t,int:o,dec:r}}function Gt(n,e){let t=n.divmod(e);return t.mod.isZero()?t.div:t.div.negative!==0?t.div.isubn(1):t.div.iaddn(1)}function ni(n){var o;let[,e="",t=""]=(o=n.toFixed(2).match(/(-?)(\d*)\.?(\d*)/))!=null?o:[];return`${e}${t}`}function Ie(n,e=0){return n instanceof V?n:new V(ni(Be(n).mul(be.pow(new V(String(e))))))}function Be(n){if(n instanceof oe)return new I(n.numerator,n.denominator);if(n instanceof Q)return n.adjusted;if(n instanceof O)try{return Be(n.toExact())}catch{return new I(ae)}if(n instanceof I)return n;let e=String(n),t=se(e);return new I(t.numerator,t.denominator)}function ht(n,e){let{numerator:t,denominator:o}=se(n);return new oe(new V(t),new V(o).mul(e!=null&&e.alreadyDecimaled?new V(100):new V(1)))}function Je(n){let{token:e,numberPrice:t,decimalDone:o}=n,r=new G({mint:"",decimals:6,symbol:"usd",name:"usd",skipMint:!0}),{numerator:i,denominator:a}=se(t),u=o?new V(i).mul(be.pow(new V(e.decimals))):i,c=new V(a).mul(be.pow(new V(r.decimals)));return new Q({baseToken:r,denominator:c.toString(),quoteToken:new G(K(L({},e),{skipMint:!0,mint:""})),numerator:u.toString()})}function Hn(n,e){if(n==null||e==null)return;let t=Be(n),o=Be(e);return t.mul(o)}function Yn(n){let e=new G({mint:"",decimals:6,symbol:"usd",name:"usd",skipMint:!0}),t=Ie(Hn(n,10**e.decimals));return new O(e,t)}function $e(n,e){return Yn(!e||!n?0:Hn(n,e))}import oi from"toformat";var ri=oi,je=ri;import kt from"big.js";import ai from"decimal.js-light";var wt=M("module/fraction"),Jt=je(kt),Ye=je(ai),si={[0]:Ye.ROUND_DOWN,[1]:Ye.ROUND_HALF_UP,[2]:Ye.ROUND_UP},ui={[0]:kt.roundDown,[1]:kt.roundHalfUp,[2]:kt.roundUp},I=class{constructor(e,t=pe){this.numerator=x(e),this.denominator=x(t)}get quotient(){return this.numerator.div(this.denominator)}invert(){return new I(this.denominator,this.numerator)}add(e){let t=e instanceof I?e:new I(x(e));return this.denominator.eq(t.denominator)?new I(this.numerator.add(t.numerator),this.denominator):new I(this.numerator.mul(t.denominator).add(t.numerator.mul(this.denominator)),this.denominator.mul(t.denominator))}sub(e){let t=e instanceof I?e:new I(x(e));return this.denominator.eq(t.denominator)?new I(this.numerator.sub(t.numerator),this.denominator):new I(this.numerator.mul(t.denominator).sub(t.numerator.mul(this.denominator)),this.denominator.mul(t.denominator))}mul(e){let t=e instanceof I?e:new I(x(e));return new I(this.numerator.mul(t.numerator),this.denominator.mul(t.denominator))}div(e){let t=e instanceof I?e:new I(x(e));return new I(this.numerator.mul(t.denominator),this.denominator.mul(t.numerator))}toSignificant(e,t={groupSeparator:""},o=1){Number.isInteger(e)||wt.logWithError(`${e} is not an integer.`),e<=0&&wt.logWithError(`${e} is not positive.`),Ye.set({precision:e+1,rounding:si[o]});let r=new Ye(this.numerator.toString()).div(this.denominator.toString()).toSignificantDigits(e);return r.toFormat(r.decimalPlaces(),t)}toFixed(e,t={groupSeparator:""},o=1){return Number.isInteger(e)||wt.logWithError(`${e} is not an integer.`),e<0&&wt.logWithError(`${e} is negative.`),Jt.DP=e,Jt.RM=ui[o]||1,new Jt(this.numerator.toString()).div(this.denominator.toString()).toFormat(e,t)}isZero(){return this.numerator.isZero()}};var mi=M("Raydium_amount"),zn=je(ci);function li(n,e){let t="0",o="0";if(n.includes(".")){let r=n.split(".");r.length===2?([t,o]=r,o=o.padEnd(e,"0")):mi.logWithError(`invalid number string, num: ${n}`)}else t=n;return[t,o.slice(0,e)||o]}var O=class extends I{constructor(t,o,r=!0,i){let a=new Tt(0),u=be.pow(new Tt(t.decimals));if(r)a=x(o);else{let c=new Tt(0),m=new Tt(0);if(typeof o=="string"||typeof o=="number"||typeof o=="bigint"){let[d,p]=li(o.toString(),t.decimals);c=x(d),m=x(p)}c=c.mul(u),a=c.add(m)}super(a,u);this.logger=M(i||"Amount"),this.token=t}get raw(){return this.numerator}isZero(){return this.raw.isZero()}gt(t){return this.token.equals(t.token)||this.logger.logWithError("gt token not equals"),this.raw.gt(t.raw)}lt(t){return this.token.equals(t.token)||this.logger.logWithError("lt token not equals"),this.raw.lt(t.raw)}add(t){return this.token.equals(t.token)||this.logger.logWithError("add token not equals"),new O(this.token,this.raw.add(t.raw))}subtract(t){return this.token.equals(t.token)||this.logger.logWithError("sub token not equals"),new O(this.token,this.raw.sub(t.raw))}toSignificant(t=this.token.decimals,o,r=0){return super.toSignificant(t,o,r)}toFixed(t=this.token.decimals,o,r=0){return t>this.token.decimals&&this.logger.logWithError("decimals overflow"),super.toFixed(t,o,r)}toExact(t={groupSeparator:""}){return zn.DP=this.token.decimals,new zn(this.numerator.toString()).div(this.denominator.toString()).toFormat(t)}};import{PublicKey as di}from"@solana/web3.js";var Zn={symbol:"SOL",name:"Solana",decimals:9},j={symbol:"WSOL",name:"Wrapped SOL",mint:"So11111111111111111111111111111111111111112",decimals:9,extensions:{coingeckoId:"solana"}},Qe={isQuantumSOL:!0,isLp:!1,official:!0,mint:new di(j.mint),decimals:9,symbol:"SOL",id:"sol",name:"solana",icon:"https://img.raydium.io/icon/So11111111111111111111111111111111111111112.png",extensions:{coingeckoId:"solana"}};import{PublicKey as $t}from"@solana/web3.js";import{TOKEN_PROGRAM_ID as pi}from"@solana/spl-token";import{PublicKey as te,SystemProgram as fi,SYSVAR_RENT_PUBKEY as yi}from"@solana/web3.js";function s({pubkey:n,isSigner:e=!1,isWritable:t=!0}){return{pubkey:n,isWritable:t,isSigner:e}}var Ke=[s({pubkey:pi,isWritable:!1}),s({pubkey:fi.programId,isWritable:!1}),s({pubkey:yi,isWritable:!1})];function E({publicKey:n,transformSol:e}){if(n instanceof te)return e&&n.equals(W)?xe:n;if(e&&n===W.toBase58())return xe;if(typeof n=="string")try{return new te(n)}catch{throw new Error("invalid public key")}throw new Error("invalid public key")}function Xn(n){try{return new te(n)}catch{return n}}var At=new te("4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R"),eo=new te("Ea5SjE2Y6yvCeW5dYTn7PYMuW5ikXkvbGdcmSnXeaLjS"),Fs=new te("SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt"),to=new te("EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"),no=new te("Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB"),oo=new te("mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So"),ro=new te("7dHbWXmci3dT8UFYWYZweBLXgycu7Y3iL6trKn1Y7ARj"),io=new te("USDH1SM1ojwWUga67PGrgFWUHibbjqMvuMaDkRJTgkX"),Ns=new te("NRVwhjBQiUPYtfDT5zRBVJajzFQHaBUNtC7SNVvqRFa"),vs=new te("ANAxByE6G2WjFp7A4NqtWYXb3mgruyzZYg3spfxe6Lbo"),ao=new te("7vfCXTUXx5WJV5JADk17DUJ4ksgau7utNKj4b963voxs"),xe=new te("So11111111111111111111111111111111111111112"),W=te.default;var jt=class{constructor({mint:e,decimals:t,symbol:o="UNKNOWN",name:r="UNKNOWN",skipMint:i=!1}){if(e===W.toBase58()||e instanceof $t&&W.equals(e)){this.decimals=j.decimals,this.symbol=j.symbol,this.name=j.name,this.mint=new $t(j.mint);return}this.decimals=t,this.symbol=o,this.name=r,this.mint=i?$t.default:E({publicKey:e})}equals(e){return this===e?!0:this.mint.equals(e.mint)}},G=jt;G.WSOL=new jt(j);var Qt=class{constructor({decimals:e,symbol:t="UNKNOWN",name:o="UNKNOWN"}){this.decimals=e,this.symbol=t,this.name=o}equals(e){return this===e}},Yt=Qt;Yt.SOL=new Qt(Zn);var so=new I(Qn),oe=class extends I{toSignificant(e=5,t,o){return this.mul(so).toSignificant(e,t,o)}toFixed(e=2,t,o){return this.mul(so).toFixed(e,t,o)}};var bi=M("Raydium_price"),Q=class extends I{constructor(t){let{baseToken:o,quoteToken:r,numerator:i,denominator:a}=t;super(i,a);this.baseToken=o,this.quoteToken=r,this.scalar=new I(Ut(o.decimals),Ut(r.decimals))}get raw(){return new I(this.numerator,this.denominator)}get adjusted(){return super.mul(this.scalar)}invert(){return new Q({baseToken:this.quoteToken,quoteToken:this.baseToken,denominator:this.numerator,numerator:this.denominator})}mul(t){this.quoteToken!==t.baseToken&&bi.logWithError("mul token not equals");let o=super.mul(t);return new Q({baseToken:this.baseToken,quoteToken:t.quoteToken,denominator:o.denominator,numerator:o.numerator})}toSignificant(t=this.quoteToken.decimals,o,r){return this.adjusted.toSignificant(t,o,r)}toFixed(t=this.quoteToken.decimals,o,r){return this.adjusted.toFixed(t,o,r)}};var hi=[G,O,gi,I,Pi,Q,oe];function wi(n){return typeof n=="object"&&n!==null&&!hi.some(e=>typeof e=="object"&&n instanceof e)}function me(n){return typeof n=="string"?Xn(n):Array.isArray(n)?n.map(e=>me(e)):wi(n)?Object.fromEntries(Object.entries(n).map(([e,t])=>[e,me(t)])):n}import{PACKET_DATA_SIZE as ki,PublicKey as mo,sendAndConfirmTransaction as uo,Transaction as It}from"@solana/web3.js";var Se=M("Raydium_txTool"),xt=class{constructor(e){this.instructions=[];this.endInstructions=[];this.signers=[];this.connection=e.connection,this.feePayer=e.feePayer,this.signAllTransactions=e.signAllTransactions,this.owner=e.owner}get AllTxData(){return{instructions:this.instructions,endInstructions:this.endInstructions,signers:this.signers}}get allInstructions(){return[...this.instructions,...this.endInstructions]}addInstruction({instructions:e=[],endInstructions:t=[],signers:o=[]}){return this.instructions.push(...e),this.endInstructions.push(...t),this.signers.push(...o),this}build(e){let t=new It;return this.allInstructions.length&&t.add(...this.allInstructions),t.feePayer=this.feePayer,{transaction:t,signers:this.signers,execute:async()=>{var r;let o=await co(this.connection);if(t.recentBlockhash=o,(r=this.owner)!=null&&r.isKeyPair)return uo(this.connection,t,this.signers);if(this.signAllTransactions){this.signers.length&&t.partialSign(...this.signers);let i=await this.signAllTransactions([t]);return await this.connection.sendRawTransaction(i[0].serialize(),{skipPreflight:!0})}throw new Error("please connect wallet first")},extInfo:e||{}}}buildMultiTx(e){let{extraPreBuildData:t=[],extInfo:o}=e,{transaction:r}=this.build(o),i=t.filter(c=>c.transaction.instructions.length>0),a=[...i.map(c=>c.transaction),r],u=[...i.map(c=>c.signers),this.signers];return{transactions:a,signers:u,execute:async()=>{var m;let c=await co(this.connection);if((m=this.owner)!=null&&m.isKeyPair)return await Promise.all(a.map(async(d,p)=>(d.recentBlockhash=c,await uo(this.connection,d,u[p]))));if(this.signAllTransactions){let d=a.map((f,b)=>(f.recentBlockhash=c,u[b].length&&f.partialSign(...u[b]),f)),p=await this.signAllTransactions(d),y=[];for(let f=0;f<p.length;f+=1){let b=await this.connection.sendRawTransaction(p[f].serialize(),{skipPreflight:!0});y.push(b)}return y}throw new Error("please connect wallet first")},extInfo:o||{}}}};async function co(n){var e,t;try{return((t=await((e=n.getLatestBlockhash)==null?void 0:e.call(n)))==null?void 0:t.blockhash)||(await n.getRecentBlockhash()).blockhash}catch{return(await n.getRecentBlockhash()).blockhash}}function Ti(n,e){n.length<1&&Se.logWithError(`no instructions provided: ${n.toString()}`),e.length<1&&Se.logWithError(`no signers provided:, ${e.toString()}`);let t=new It;t.recentBlockhash="11111111111111111111111111111111",t.feePayer=e[0],t.add(...n);let o=t.compileMessage().serialize();return e.length+e.length*64+o.length}async function lo(n,e,t){let o=new mo("RaydiumSimuLateTransaction11111111111111111"),r=[],i=new It;i.feePayer=o;for(let c of e)Ti([...i.instructions,c],[o])>ki&&(r.push(i),i=new It,i.feePayer=o),i.add(c);i.instructions.length>0&&r.push(i);let a=[];try{a=await Promise.all(r.map(c=>n.simulateTransaction(c)))}catch(c){c instanceof Error&&Se.logWithError(`failed to simulate for instructions, RPC_ERROR, ${c.message}`)}let u=[];for(let c of a){let{value:m}=c;if(Se.debug(`simulate result: ${JSON.stringify(c)}`),m.logs){let d=m.logs.filter(p=>p&&p.includes(t));Se.debug(`filteredLog: ${JSON.stringify(u)}`),d.length||Se.logWithError(` "simulate log not match keyword, keyword: ${t}`),u.push(...d)}}return u}function po(n,e){let t=n.match(/{["\w:,]+}/g);return!t||t.length!==1?Se.logWithError(`simulate log fail to match json, keyword: ${e}`):t[0]}function ge(n,e){let o=new RegExp(`"${e}":(\\d+)`,"g").exec(n);return!o||o.length!==2?Se.logWithError(`simulate log fail to match key", key: ${e}`):o[1]}async function Pe(n,e){let[t,o]=await mo.findProgramAddress(n,e);return{publicKey:t,nonce:o}}var le=class{constructor(e){this._owner=e}get publicKey(){return le.isKeyPair(this._owner)?this._owner.publicKey:this._owner}get signer(){return le.isKeyPair(this._owner)?this._owner:void 0}get isKeyPair(){return le.isKeyPair(this._owner)}get isPublicKey(){return le.isPublicKey(this._owner)}static isKeyPair(e){return e.secretKey!==void 0}static isPublicKey(e){return!le.isKeyPair(e)}};function fo(n,e=1,t=[]){let o=[...n];if(e<=0)return t;for(;o.length;)t.push(o.splice(0,e));return t}import{PublicKey as Ai}from"@solana/web3.js";var Ht=M("Raydium_accountInfo_util");async function Ii(n,e,t){let{batchRequest:o,commitment:r}=L({batchRequest:!1},t),i=fo(e,100),a=new Array(i.length).fill([]);if(o){let u=i.map(m=>{let d=n._buildArgs([m.map(p=>p.toBase58())],r,"base64");return{methodName:"getMultipleAccounts",args:d}});a=(await n._rpcBatchRequest(u)).map(m=>(m.error&&Ht.logWithError(`failed to get info for multiple accounts, RPC_ERROR, ${m.error.message}`),m.result.value.map(d=>{if(d){let{data:p,executable:y,lamports:f,owner:b,rentEpoch:w}=d;return p.length!==2&&p[1]!=="base64"&&Ht.logWithError("info must be base64 encoded, RPC_ERROR"),{data:Buffer.from(p[0],"base64"),executable:y,lamports:f,owner:new Ai(b),rentEpoch:w}}return null})))}else try{a=await Promise.all(i.map(u=>n.getMultipleAccountsInfo(u,r)))}catch(u){u instanceof Error&&Ht.logWithError(`failed to get info for multiple accounts, RPC_ERROR, ${u.message}`)}return a.flat()}async function yo(n,e,t){let o=await Ii(n,e.map(r=>r.pubkey),t);return e.map((r,i)=>K(L({},r),{accountInfo:o[i]}))}function ue(n){if(n instanceof oe)return new I(n.numerator,n.denominator);if(n instanceof Q)return n.adjusted;if(n instanceof O)try{return ue(n.toExact())}catch{return new I(ae)}if(n instanceof I)return n;let e=String(n),t=se(e);return new I(t.numerator,t.denominator)}function xi(n,e){if(n==null||e==null)return!1;let t=ue(n),o=ue(e);return t.sub(o).numerator.gt(ae)}function bo(n,e){if(n==null||e==null)return!1;let t=ue(n),o=ue(e);return t.sub(o).numerator.gte(ae)}function Si(n,e){if(n==null||e==null)return!1;let t=ue(n),o=ue(e);return t.sub(o).numerator.eq(ae)}function zt(n,e){if(n==null||e==null)return;let t=ue(n),o=ue(e);try{return t.div(o)}catch{return t}}function go(n,e){if(n==null||e==null)return;let t=ue(n),o=ue(e);return t.sub(o)}function St(n){return n==null?!1:!Si(n,0)}function Po(n,e){return xi(e,n)?e:n}var ho=n=>typeof n=="number",wo=n=>n?new Date(n):new Date,Li=n=>wo(n).getTime();function He(n,e,t){let o=ho(e)?e*((t==null?void 0:t.unit)==="s"?1e3:1):e;return new Date(n).getTime()<=o}function De(n,e,t){let o=ho(e)?e*((t==null?void 0:t.unit)==="s"?1e3:1):e;return new Date(n).getTime()>o}function Zt(n,e){let o=Li(n)+(e.days?e.days*24*60*60*1e3:0)+(e.hours?e.hours*60*60*1e3:0)+(e.minutes?e.minutes*60*1e3:0)+(e.seconds?e.seconds*1e3:0)+(e.milliseconds?e.milliseconds:0);return wo(o)}var Lt=M("Raydium_Api");var _t=class{constructor({cluster:e,timeout:t}){this.cluster=e,this.api=_i.create({baseURL:"https://api.raydium.io/v2",timeout:t}),this.api.interceptors.request.use(o=>{let{method:r,baseURL:i,url:a}=o;return Lt.debug(`${r==null?void 0:r.toUpperCase()} ${i}${a}`),o},o=>(Lt.error("Request failed"),Promise.reject(o))),this.api.interceptors.response.use(o=>{let{config:r,data:i,status:a}=o,{method:u,baseURL:c,url:m}=r;return Lt.debug(`${u==null?void 0:u.toUpperCase()} ${c}${m}  ${a}`),i},o=>{let{config:r,response:i={}}=o,{status:a}=i,{method:u,baseURL:c,url:m}=r;return Lt.error(`${u.toUpperCase()} ${c}${m} ${a||o.message}`),Promise.reject(o)})}async getTokens(){return this.api.get("/sdk/token/raydium.mainnet.json")}async getLiquidityPools(){return this.api.get(`/sdk/liquidity/${this.cluster}.json`)}async getPairsInfo(){return this.api.get("https://api.raydium.io/v2/main/pairs")}async getFarmPools(){return this.api.get(`/sdk/farm-v2/${this.cluster}.json`)}async getCoingeckoPrice(e){return this.api.get(`https://api.coingecko.com/api/v3/simple/price?ids=${e.join(",")}&vs_currencies=usd`)}async getRaydiumTokenPrice(){return this.api.get("https://api.raydium.io/v2/main/price")}async getBlockSlotCountForSecond(e){if(!e)return 2;let o=(await this.api.post(e,{id:"getRecentPerformanceSamples",jsonrpc:"2.0",method:"getRecentPerformanceSamples",params:[4]})).result.map(r=>r.numSlots);return o.reduce((r,i)=>r+i,0)/o.length/60}};var Rt="please provide owner in load() initialization or you can set by calling raydium.setOwner(owner)",ko="please provide connection in load() initialization or set it by raydium.setConnection(connection)";import{getAssociatedTokenAddress as Lo,createAssociatedTokenAccountInstruction as _o,TOKEN_PROGRAM_ID as ji}from"@solana/spl-token";import{PublicKey as Yi}from"@solana/web3.js";var Xt=(...n)=>n.map(e=>{try{return typeof e=="object"?JSON.stringify(e):e}catch{return e}}).join(", "),re=class{constructor({scope:e,moduleName:t}){this.disabled=!1;this.scope=e,this.logger=M(t)}createTxBuilder(e){return this.scope.checkOwner(),new xt({connection:this.scope.connection,feePayer:e||this.scope.ownerPubKey,owner:this.scope.owner,signAllTransactions:this.scope.signAllTransactions})}logDebug(...e){this.logger.debug(Xt(e))}logInfo(...e){this.logger.info(Xt(e))}logAndCreateError(...e){let t=Xt(e);throw new Error(t)}checkDisabled(){(this.disabled||!this.scope)&&this.logAndCreateError("module not working")}};import{createInitializeAccountInstruction as Fi,createCloseAccountInstruction as Ni,createTransferInstruction as vi,TOKEN_PROGRAM_ID as Di}from"@solana/spl-token";import{Keypair as Ei,PublicKey as Vi,SystemProgram as Ci}from"@solana/web3.js";import Wi from"bn.js";import{PublicKey as qi}from"@solana/web3.js";import Io,{isBN as xo}from"bn.js";import{bits as cc,BitStructure as mc,blob as Ri,Blob as lc,cstr as dc,f32 as pc,f32be as fc,f64 as yc,f64be as bc,greedy as gc,Layout as Mi,ns64 as Pc,ns64be as hc,nu64 as wc,nu64be as kc,offset as Tc,s16 as Ac,s16be as Ic,s24 as xc,s24be as Sc,s32 as Lc,s32be as _c,s40 as Rc,s40be as Mc,s48 as Bc,s48be as Kc,s8 as Oc,seq as Bi,struct as qc,Structure as Ki,u16 as Fc,u16be as Nc,u24 as vc,u24be as Dc,u32 as Ec,u32be as Vc,u40 as Cc,u40be as Wc,u48 as Uc,u48be as Gc,u8 as Jc,UInt as Oi,union as $c,Union as jc,unionLayoutDiscriminator as Yc,utf8 as Qc}from"@solana/buffer-layout";var en=Mi,To=Ki;var tn=Oi;var Ao=Bi;var ze=Ri;var Mt=class extends en{constructor(t,o,r){super(t,r);this.blob=ze(t),this.signed=o}decode(t,o=0){let r=new Io(this.blob.decode(t,o),10,"le");return this.signed?r.fromTwos(this.span*8).clone():r}encode(t,o,r=0){return typeof t=="number"&&(t=new Io(t)),this.signed&&(t=t.toTwos(this.span*8)),this.blob.encode(t.toArrayLike(Buffer,"le",this.span),o,r)}};function v(n){return new tn(1,n)}function Oe(n){return new tn(4,n)}function l(n){return new Mt(8,!1,n)}function Y(n){return new Mt(16,!1,n)}var nn=class extends en{constructor(t,o,r,i){super(t.span,i);this.layout=t,this.decoder=o,this.encoder=r}decode(t,o){return this.decoder(this.layout.decode(t,o))}encode(t,o,r){return this.layout.encode(this.encoder(t),o,r)}getSpan(t,o){return this.layout.getSpan(t,o)}};function k(n){return new nn(ze(32),e=>new qi(e),e=>e.toBuffer(),n)}var on=class extends To{decode(e,t){return super.decode(e,t)}};function R(n,e,t){return new on(n,e,t)}function H(n,e,t){let o,r=typeof e=="number"?e:xo(e)?e.toNumber():new Proxy(e,{get(i,a){if(!o){let u=Reflect.get(i,"count");o=xo(u)?u.toNumber():u,Reflect.set(i,"count",o)}return Reflect.get(i,a)},set(i,a,u){return a==="count"&&(o=u),Reflect.set(i,a,u)}});return Ao(n,r,t)}var he=R([k("mint"),k("owner"),l("amount"),Oe("delegateOption"),k("delegate"),v("state"),Oe("isNativeOption"),l("isNative"),l("delegatedAmount"),Oe("closeAuthorityOption"),k("closeAuthority")]);function Ui(n){let{mint:e,tokenAccount:t,owner:o}=n;return Fi(t,e,o)}function qe(n){let{tokenAccount:e,payer:t,multiSigners:o=[],owner:r}=n;return Ni(e,t,r,o)}async function Le(n){let{connection:e,amount:t,commitment:o,payer:r,owner:i,skipCloseAccount:a}=n,u=await e.getMinimumBalanceForRentExemption(he.span,o),c=x(t).add(new Wi(u)),m=Ei.generate();return{signers:[m],instructions:[Ci.createAccount({fromPubkey:r,newAccountPubkey:m.publicKey,lamports:c.toNumber(),space:he.span,programId:Di}),Ui({mint:new Vi(j.mint),tokenAccount:m.publicKey,owner:i})],endInstructions:a?[]:[qe({tokenAccount:m.publicKey,payer:r,owner:i})]}}function Ee({source:n,destination:e,owner:t,amount:o,multiSigners:r=[]}){return vi(n,e,t,x(o).toNumber(),r)}import{PublicKey as Gi}from"@solana/web3.js";import Ji from"bn.js";var $i=M("Raydium_Util");function So({solAccountResp:n,tokenAccountResp:e}){let t=[],o=[];for(let{pubkey:r,account:i}of e.value){if(i.data.length!==he.span)throw $i.error("invalid token account layout length","publicKey",r.toBase58()),new Error("invalid token account layout length");let a=he.decode(i.data),{mint:u,amount:c}=a;t.push({publicKey:r,mint:u,amount:c,isNative:!1}),o.push({pubkey:r,accountInfo:a})}return n&&t.push({mint:Gi.default,amount:new Ji(n.lamports),isNative:!0}),{tokenAccounts:t,tokenAccountRawInfos:o}}var Ze=class extends re{constructor(t){super(t);this._tokenAccounts=[];this._tokenAccountRawInfos=[];this._ataCache=new Map;this._accountListener=[];this._clientOwnedToken=!1;let{tokenAccounts:o,tokenAccountRawInfos:r}=t;this._tokenAccounts=o||[],this._tokenAccountRawInfos=r||[],this._clientOwnedToken=!!(o||r)}get tokenAccounts(){return this._tokenAccounts}get tokenAccountRawInfos(){return this._tokenAccountRawInfos}updateTokenAccount({tokenAccounts:t,tokenAccountRawInfos:o}){return t&&(this._tokenAccounts=t),o&&(this._tokenAccountRawInfos=o),this._accountChangeListenerId&&this.scope.connection.removeAccountChangeListener(this._accountChangeListenerId),this._accountChangeListenerId=void 0,this._clientOwnedToken=!0,this}addAccountChangeListener(t){return this._accountListener.push(t),this}removeAccountChangeListener(t){return this._accountListener=this._accountListener.filter(o=>o!==t),this}async getAssociatedTokenAccount(t){this.scope.checkOwner();let o=`${this.scope.ownerPubKey.toBase58()}_${t.toBase58()}`;if(this._ataCache.has(o))return this._ataCache.get(o);let r=await Lo(t,this.scope.ownerPubKey,!0);return this._ataCache.set(o,r),r}async fetchWalletTokenAccounts(t){if(this._clientOwnedToken||!(t!=null&&t.forceUpdate)&&this._tokenAccounts.length)return{tokenAccounts:this._tokenAccounts,tokenAccountRawInfos:this._tokenAccountRawInfos};this.scope.checkOwner();let r=L(L({},{}),t),i=await this.scope.connection.getAccountInfo(this.scope.ownerPubKey,r.commitment),a=await this.scope.connection.getTokenAccountsByOwner(this.scope.ownerPubKey,{programId:ji},r.commitment),{tokenAccounts:u,tokenAccountRawInfos:c}=So({solAccountResp:i,tokenAccountResp:a});return this._tokenAccounts=u,this._tokenAccountRawInfos=c,this._accountChangeListenerId&&this.scope.connection.removeAccountChangeListener(this._accountChangeListenerId),this._accountChangeListenerId=this.scope.connection.onAccountChange(this.scope.ownerPubKey,()=>this.fetchWalletTokenAccounts({forceUpdate:!0}),"confirmed"),{tokenAccounts:u,tokenAccountRawInfos:c}}async getCreatedTokenAccount({mint:t,associatedOnly:o=!0}){await this.fetchWalletTokenAccounts();let r=this._tokenAccounts.filter(({mint:a})=>a==null?void 0:a.equals(t)).sort((a,u)=>a.amount.lt(u.amount)?1:-1),i=await this.getAssociatedTokenAccount(t);for(let a of r){let{publicKey:u}=a;if(u)return o&&i.equals(u),u}}async checkOrCreateAta({mint:t,autoUnwrapWSOLToSOL:o}){var u;await this.fetchWalletTokenAccounts();let r=(u=this.scope.account.tokenAccounts.find(({mint:c})=>(c==null?void 0:c.toBase58())===t.toBase58()))==null?void 0:u.publicKey,i=this.scope.ownerPubKey,a={};if(!r){let c=await this.getAssociatedTokenAccount(t),m=await _o(i,c,i,t);a.instructions=[m],r=c}return o&&j.mint===t.toBase58()&&(a.endInstructions=[qe({owner:i,payer:i,tokenAccount:r})]),{pubKey:r,newInstructions:a}}async handleTokenAccount(t){let{side:o,amount:r,mint:i,tokenAccount:a,payer:u=this.scope.ownerPubKey,bypassAssociatedCheck:c,skipCloseAccount:m}=t,d=this.createTxBuilder(),p=await Lo(i,this.scope.ownerPubKey,!0);if(new Yi(j.mint).equals(i)){let y=await Le({connection:this.scope.connection,owner:this.scope.ownerPubKey,payer:u,amount:r,skipCloseAccount:m});return d.addInstruction(y),L({tokenAccount:y.signers[0].publicKey},y)}else if(!a||o==="out"&&!p.equals(a)&&!c)return{tokenAccount:p,instructions:[_o(this.scope.ownerPubKey,p,this.scope.ownerPubKey,i)]};return{tokenAccount:a}}};import{TOKEN_PROGRAM_ID as ot,createAssociatedTokenAccountInstruction as fa}from"@solana/spl-token";import{Keypair as ya,PublicKey as Z,SystemProgram as or,SYSVAR_CLOCK_PUBKEY as ba,TransactionInstruction as rt}from"@solana/web3.js";import pn from"bn.js";import{PublicKey as tt}from"@solana/web3.js";var rn=R([v("instruction")]),an=R([v("instruction")]),Qi=R([l("rewardState"),l("rewardOpenTime"),l("rewardEndTime"),l("rewardLastUpdateTime"),l("totalReward"),l("totalRewardEmissioned"),l("rewardClaimed"),l("rewardPerSecond"),Y("accRewardPerShare"),k("rewardVault"),k("rewardMint"),k("rewardSender"),l("rewardType"),H(l(),15,"padding")]),Hi=R([l("state"),l("nonce"),k("lpVault"),k("rewardVault"),k(),k(),l(),l(),l("totalReward"),Y("perShareReward"),l("lastSlot"),l("perSlotReward")]),zi=R([l("state"),l("nonce"),k("lpVault"),k("rewardVaultA"),l("totalRewardA"),Y("perShareRewardA"),l("perSlotRewardA"),v("option"),k("rewardVaultB"),ze(7),l("totalRewardB"),Y("perShareRewardB"),l("perSlotRewardB"),l("lastSlot"),k()]),Zi=R([l(),l("state"),l("nonce"),l("validRewardTokenNum"),Y("rewardMultiplier"),l("rewardPeriodMax"),l("rewardPeriodMin"),l("rewardPeriodExtend"),k("lpMint"),k("lpVault"),H(Qi,5,"rewardInfos"),k("creator"),k(),H(l(),32,"padding")]),Ro=new Proxy(Hi,{get(n,e,t){return e==="decode"?(...o)=>{let r=n.decode(...o);return K(L({},r),{version:3,rewardInfos:[{rewardVault:r.rewardVault,totalReward:r.totalReward,perSlotReward:r.perSlotReward,perShareReward:r.perShareReward}]})}:Reflect.get(n,e,t)}}),Mo=new Proxy(zi,{get(n,e,t){return e==="decode"?(...o)=>{let r=n.decode(...o);return K(L({},r),{version:5,rewardInfos:[{rewardVault:r.rewardVaultA,totalReward:r.totalRewardA,perSlotReward:r.perSlotRewardA,perShareReward:r.perShareRewardA},{rewardVault:r.rewardVaultB,totalReward:r.totalRewardB,perSlotReward:r.perSlotRewardB,perShareReward:r.perShareRewardB}]})}:Reflect.get(n,e,t)}}),Xe=new Proxy(Zi,{get(n,e,t){return e==="decode"?(...o)=>{let r=n.decode(...o);return K(L({},r),{version:6,rewardInfos:r.rewardInfos.map(i=>{var a;return K(L({},i),{rewardType:((a=Object.entries(Bt).find(u=>String(u[1])===i.rewardType.toString()))!=null?a:["Standard SPL"])[0]})})})}:Reflect.get(n,e,t)}}),Xi=R([l("isSet"),l("rewardPerSecond"),l("rewardOpenTime"),l("rewardEndTime"),l("rewardType")]),sn=R([v("instruction"),l("nonce"),H(Xi,5,"rewardTimeInfo")]),un=R([v("instruction"),l("rewardReopenTime"),l("rewardEndTime"),l("rewardPerSecond")]),cn=R([v("instruction"),l("isSet"),l("rewardPerSecond"),l("rewardOpenTime"),l("rewardEndTime")]),Gm=R([l("state"),k("id"),k("owner"),l("deposited"),H(l(),1,"rewardDebts")]),Bo=R([l("state"),k("id"),k("owner"),l("deposited"),H(Y(),1,"rewardDebts"),H(l(),17)]),Jm=R([l("state"),k("id"),k("owner"),l("deposited"),H(l(),2,"rewardDebts")]),Ko=R([l("state"),k("id"),k("owner"),l("deposited"),H(Y(),2,"rewardDebts"),H(l(),17)]),Oo=R([l(),l("state"),k("id"),k("owner"),l("deposited"),H(Y(),5,"rewardDebts"),H(l(),16)]),et=R([v("instruction"),l("amount")]);var qo=M("Raydium_farm_config"),Fo="EhhTKczWMGQt46ynNeRX1WfeagwwJd7ufHvCDjRxjo5Q",ea=new tt(Fo),No="9KEPoZmtHUrBbhWN1v1KWLMkkvwY6WLtAVUCPRtRjP4z",ta=new tt(No),vo="FarmqiPv5eAj3j1GMdMCMUGXqPUvmquZtMy86QH6rzhG",na=new tt(vo),Do={[Fo]:3,[No]:5,[vo]:6},Eo={3:ea,5:ta,6:na},Vo=new tt("4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R"),Co=new tt("FrspKwj8i3pNmKwXreTveC4fu7KL5ZbGeXdZBe2XViu1"),Wo={3:Ro,5:Mo,6:Xe},Uo={3:Bo,5:Ko,6:Oo},mn=n=>[3,5,6].indexOf(n)!==-1,oa={3:10,5:11,6:1},Go=n=>{let e=oa[n];return e||qo.logWithError("invalid deposit farm version"),e},ra={3:11,5:12,6:2},Jo=n=>{let e=ra[n];return e||qo.logWithError("invalid withdraw farm version"),e},$o=n=>{var a;let{version:e,rewardInfos:t,rewardTokenAccountsPublicKeys:o}=n,r=`rewardInfo:${JSON.stringify(t)}, rewardAccount:${JSON.stringify(o)}`,i={3:()=>{if(t.length!==1||o.length!==1)return`rewardInfos or rewardTokenAccounts lengths not equal 1: ${r}`},5:()=>{if(t.length!==o.length)return`rewardInfos and rewardTokenAccounts lengths not equal: ${r}`},6:()=>{if(!o.length||t.length!==o.length)return`no rewardTokenAccounts or rewardInfos and rewardTokenAccounts lengths not equal: ${r}`}};return(a=i[e])==null?void 0:a.call(i)},Bt={"Standard SPL":0,"Option tokens":1};import{SystemProgram as ia,SYSVAR_RENT_PUBKEY as aa,TransactionInstruction as jo}from"@solana/web3.js";import sa from"bn.js";var ua=M("Raydium_farm_instruction");async function Yo(n){let{version:e,id:t,ledger:o,programId:r,owner:i}=n,a={3:9,5:10}[e];a||ua.logWithError(`invalid farm pool version: ${e}`);let u=Buffer.alloc(rn.span);rn.encode({instruction:a},u);let c=[s({pubkey:t}),s({pubkey:o}),s({pubkey:i,isWritable:!1}),s({pubkey:ia.programId,isWritable:!1}),s({pubkey:aa,isWritable:!1})];return new jo({programId:r,keys:c,data:u})}function Qo(n){var o;let e=Buffer.alloc(sn.span);sn.encode({instruction:0,nonce:new sa(n.nonce),rewardTimeInfo:n.rewardInfoConfig},e);let t=[...Ke,s({pubkey:n.farmKeyPair.publicKey}),s({pubkey:n.farmAuthority,isWritable:!1}),s({pubkey:n.lpVault}),s({pubkey:n.lpMint,isWritable:!1}),s({pubkey:n.lockVault}),s({pubkey:n.lockMint,isWritable:!1}),s({pubkey:(o=n.lockUserAccount)!=null?o:W}),s({pubkey:n.owner,isWritable:!1,isSigner:!0})];for(let r of n.rewardInfo)t.push(s({pubkey:r.rewardMint,isWritable:!1}),s({pubkey:r.rewardVault}),s({pubkey:r.userRewardToken}));return new jo({programId:n.programId,keys:t,data:e})}import z from"bn.js";var nt=M("Raydium.farm.util");async function Kt({programId:n,poolId:e,mint:t,type:o}){let{publicKey:r}=await Pe([e.toBuffer(),t.toBuffer(),Buffer.from(o==="lpVault"?"lp_vault_associated_seed":o==="rewardVault"?"reward_vault_associated_seed":"","utf-8")],n);return r}function ca(n){let t=E({publicKey:n}).toBase58();return Do[t]}async function ln({programId:n,poolId:e,owner:t}){let{publicKey:o}=await Pe([e.toBuffer(),t.toBuffer(),Buffer.from(ca(n)===6?"farmer_info_associated_seed":"staker_info_v2_associated_seed","utf-8")],n);return o}var Ho=async({programId:n,poolId:e})=>await Pe([e.toBuffer()],n);function zo(n){return Eo[n]}function Zo(n){return{isSet:new z(1),rewardPerSecond:x(n.rewardPerSecond),rewardOpenTime:x(n.rewardOpenTime),rewardEndTime:x(n.rewardEndTime),rewardType:x(n.rewardType)}}function dn(n){return x(n.rewardEndTime).sub(x(n.rewardOpenTime)).mul(x(n.rewardPerSecond))}function ma(n){let e=Uo[n];return e||nt.logWithError("invalid version",n),e}function la(n){let e=Wo[n];return e||nt.logWithError("invalid version",n),e}function da(n,e,t,o){if(n.version===3||n.version===5){if(n.lastSlot.gte(new z(t)))return n;let r=new z(t).sub(n.lastSlot);n.lastSlot=new z(t);for(let i of n.rewardInfos){if(e.amount.eq(new z(0)))continue;let a=i.perSlotReward.mul(r);i.perShareReward=i.perShareReward.add(a.mul(new z(10).pow(new z(n.version===3?9:15))).div(e.amount)),i.totalReward=i.totalReward.add(a)}}else if(n.version===6)for(let r of n.rewardInfos){if(r.rewardState.eq(new z(0)))continue;let i=z.min(new z(o),r.rewardEndTime);if(r.rewardOpenTime.gte(i))continue;let u=i.sub(r.rewardLastUpdateTime).mul(r.rewardPerSecond),c=r.totalReward.sub(r.totalRewardEmissioned);c.lt(u)?(u=c,r.rewardLastUpdateTime=r.rewardLastUpdateTime.add(c.div(r.rewardPerSecond))):r.rewardLastUpdateTime=i,!e.amount.eq(new z(0))&&(r.accRewardPerShare=r.accRewardPerShare.add(u.mul(n.rewardMultiplier).div(e.amount)),r.totalRewardEmissioned=r.totalRewardEmissioned.add(u))}return n}async function pa({connection:n,farmPools:e,owner:t,config:o}){var y;let r=!1,i=!1,a=new z(10),u=[];for(let f of e){let b=me(f);b.version===6?i=!0:r=!0,u.push({pubkey:b.id,version:b.version,key:"state",poolId:b.id},{pubkey:b.lpVault,version:b.version,key:"lpVault",poolId:b.id}),t&&u.push({pubkey:await ln({programId:b.programId,poolId:b.id,owner:t}),version:b.version,key:"ledger",poolId:b.id})}let c={},m=await yo(n,u,o);for(let{pubkey:f,version:b,key:w,poolId:S,accountInfo:g}of m){let T=S.toBase58();if(c[T]=L({},c[T]),w==="state"){let _=la(b);(!g||!g.data||g.data.length!==_.span)&&nt.logWithError(`invalid farm state account info, pools.id, ${f}`),c[T].state=_.decode(g.data)}else if(w==="lpVault")(!g||!g.data||g.data.length!==he.span)&&nt.logWithError(`invalid farm lp vault account info, pools.lpVault, ${f}`),c[T].lpVault=he.decode(g.data);else if(w==="ledger"){let _=ma(b);g&&g.data&&(g.data.length!==_.span&&nt.logWithError(`invalid farm ledger account info, ledger, ${f}`),c[T].ledger=_.decode(g.data))}}let d=i||r?await n.getSlot():0,p=i&&(y=await n.getBlockTime(d))!=null?y:0;for(let f of Object.keys(c))c[f].state=da(c[f].state,c[f].lpVault,d,p);for(let[f,{state:b,ledger:w}]of Object.entries(c))if(w){let S=b.version===6?b.rewardMultiplier:b.rewardInfos.length===1?a.pow(new z(9)):a.pow(new z(15)),g=b.rewardInfos.map((T,_)=>{let A=w.rewardDebts[_];return w.deposited.mul(b.version===6?T.accRewardPerShare:T.perShareReward).div(S).sub(A)});c[f].wrapped=K(L({},c[f].wrapped),{pendingRewards:g})}return c}async function Xo(n){let{farmPools:e}=n,t=await pa(n);return e.map((r,i)=>K(L(L(L({},e[i]),me(r)),t[r.id]),{jsonInfo:e[i]}))}function er(n,e=Date.now()){if(n.version===6){let t=n.state.rewardInfos;if(t.every(({rewardOpenTime:o})=>He(e,o.toNumber(),{unit:"s"})))return"upcoming pool";if(t.every(({rewardEndTime:o})=>De(e,o.toNumber(),{unit:"s"})))return"closed pool"}else{let t=n.state.rewardInfos.map(({perSlotReward:o})=>o);if(t.length===2){if(String(t[0])==="0"&&String(t[1])!=="0")return"normal fusion pool";if(String(t[0])!=="0"&&String(t[1])!=="0")return"dual fusion pool";if(String(t[0])==="0"&&String(t[1])==="0")return"closed pool"}else if(t.length===1&&String(t[0])==="0")return"closed pool"}}function tr(n){return n.state.rewardInfos.length===1&&String(n.lpMint)===At.toBase58()}function nr(n,e){return n.version===6?n.state.rewardInfos.map(({rewardPerSecond:t,rewardOpenTime:o,rewardEndTime:r},i)=>{var y;let a=He(e.currentBlockChainDate,o.toNumber(),{unit:"s"}),u=De(e.currentBlockChainDate,r.toNumber(),{unit:"s"});if(a||u)return;let c=e.rewardTokens[i];if(!c)return;let m=e.rewardTokenPrices[i];if(!m)return;let d=$e(new I(t,pe).div(be.pow(new z(c.decimals||1))).mul(new z(60*60*24*365)),m);return e.tvl?e.tvl.isZero()?Be(0):d.div((y=e.tvl)!=null?y:pe):void 0}):n.state.rewardInfos.map(({perSlotReward:o},r)=>{var m;let i=e.rewardTokens[r];if(!i)return;let a=e.rewardTokenPrices[r];if(!a)return;let u=$e(new I(o,pe).div(be.pow(new z(i.decimals||1))).mul(new z(e.blockSlotCountForSecond*60*60*24*365)),a);return e.tvl?e.tvl.isZero()?Be(0):u.div((m=e.tvl)!=null?m:pe):void 0})}var it=class extends re{constructor(){super(...arguments);this._farmPools=[];this._hydratedFarmPools=[];this._hydratedFarmMap=new Map;this._sdkParsedFarmPools=[];this._lpTokenInfoMap=new Map}async load(t){var r;await this.scope.liquidity.load(t),await this.scope.fetchFarms(t==null?void 0:t.forceUpdate);let o=((r=this.scope.apiData.farmPools)==null?void 0:r.data)||{};this._farmPools=Object.keys(o||{}).reduce((i,a)=>{var u,c;return i.concat(((c=(u=o[a]).map)==null?void 0:c.call(u,m=>{let d=this.scope.token.allTokenMap.get(m.baseMint),p=this.scope.token.allTokenMap.get(m.quoteMint);return d&&p&&this._lpTokenInfoMap.set(m.lpMint,new G({mint:m.lpMint,decimals:d.decimals,symbol:`${d.symbol} - ${p.name}`,name:`${d.symbol} - ${p.name} LP`})),K(L({},m),{name:m.symbol,category:a})}))||[])},[]),await this.fetchSdkFarmInfo()}async fetchSdkFarmInfo(){var t;this._sdkParsedFarmPools=await Xo({connection:this.scope.connection,farmPools:this._farmPools,owner:(t=this.scope.owner)==null?void 0:t.publicKey,config:{commitment:"confirmed"}})}async loadHydratedFarmInfo(t){let{forceUpdate:o,skipPrice:r}=t||{};if(this._hydratedFarmPools.length&&!o)return this._hydratedFarmPools;await this.scope.farm.load();try{await this.scope.account.fetchWalletTokenAccounts()}catch{}!r&&await this.scope.token.fetchTokenPrices(),await this.scope.liquidity.loadPairs();let i=await this.scope.chainTimeOffset(),a=Zt(Date.now()+i,{minutes:0}),u=await this.scope.api.getBlockSlotCountForSecond(this.scope.connection.rpcEndpoint),c=Object.fromEntries(this.scope.liquidity.allPairs.map(m=>[m.ammId,{apr30d:m.apr30d,apr7d:m.apr7d,apr24h:m.apr24h}]));return this._hydratedFarmPools=this._sdkParsedFarmPools.map(m=>{let d=this.hydrateFarmInfo({farmInfo:m,blockSlotCountForSecond:u,farmAprs:c,currentBlockChainDate:a,chainTimeOffset:i});return this._hydratedFarmMap.set(m.id.toBase58(),d),d}),this._hydratedFarmPools}get allFarms(){return this._farmPools}get allParsedFarms(){return this._sdkParsedFarmPools}get allHydratedFarms(){return this._hydratedFarmPools}get allHydratedFarmMap(){return this._hydratedFarmMap}getFarm(t){let o=E({publicKey:t}),r=this.allFarms.find(i=>i.id===o.toBase58());return r||this.logAndCreateError("invalid farm id"),r}getParsedFarm(t){let o=E({publicKey:t}),r=this.allParsedFarms.find(i=>o.equals(i.id));return r||this.logAndCreateError("invalid farm id"),r}getLpTokenInfo(t){let o=E({publicKey:t}),r=this._lpTokenInfoMap.get(o.toBase58());return r||this.logAndCreateError("LP Token not found",o.toBase58()),r}lpDecimalAmount({mint:t,amount:o}){let r=se(o),i=this.getLpTokenInfo(t);return Ie(new I(r.numerator,r.denominator).mul(new pn(10).pow(new pn(i.decimals))))}hydrateFarmInfo(t){var dt,pt,Ce,We,Ue,ft,_n,Rn,Mn,Bn,Kn,On;let{farmInfo:o,blockSlotCountForSecond:r,farmAprs:i,currentBlockChainDate:a,chainTimeOffset:u=0}=t,c=er(o,a),m=tr(o),d=c==="dual fusion pool",p=c==="normal fusion pool",y=c==="closed pool"&&!o.upcoming,f=o.version!==6?o.upcoming&&y:o.upcoming,b=o.version!==6&&o.upcoming&&!y,w=((dt=this.scope.liquidity.allPools.find(B=>B.lpMint===o.lpMint.toBase58()))==null?void 0:dt.version)===5,S=m?this.scope.mintToToken(o.lpMint):this.getLpTokenInfo(o.lpMint),g=this.scope.mintToToken(m?o.lpMint:o.baseMint),T=this.scope.mintToToken(m?o.lpMint:o.quoteMint);g!=null&&g.symbol;let _=m?`${(pt=g==null?void 0:g.symbol)!=null?pt:"unknown"}`:`${(Ce=g==null?void 0:g.symbol)!=null?Ce:"unknown"}-${(We=T==null?void 0:T.symbol)!=null?We:"unknown"}`,A=o.jsonInfo.rewardInfos.map(({rewardMint:B})=>this.scope.mintToToken(B)),q=(Ue=o.wrapped)==null?void 0:Ue.pendingRewards.map((B,C)=>A[C]?new O(A[C],Ie(Po(B,0))):void 0),F=m?this.scope.token.tokenPrices.get(o.lpMint.toBase58()):this.scope.liquidity.lpPriceMap.get(o.lpMint.toBase58()),N=S&&new O(S,o.lpVault.amount),J=F&&S?$e(new O(S,o.lpVault.amount),F):void 0,D=nr(o,{tvl:J,currentBlockChainDate:a,rewardTokens:A,rewardTokenPrices:(ft=o.rewardInfos.map(({rewardMint:B})=>this.scope.token.tokenPrices.get(B.toBase58())))!=null?ft:[],blockSlotCountForSecond:r}),U=(_n=this.scope.liquidity.allPools.find(B=>B.lpMint===o.lpMint.toBase58()))==null?void 0:_n.id,X=U?ht((Rn=i[U])==null?void 0:Rn.apr7d,{alreadyDecimaled:!0}):void 0,$=U?ht((Mn=i[U])==null?void 0:Mn.apr30d,{alreadyDecimaled:!0}):void 0,ne=U?ht((Bn=i[U])==null?void 0:Bn.apr24h,{alreadyDecimaled:!0}):void 0,ie=D.reduce((B,C)=>B?C?B.add(C):B:C,X),Ae=D.reduce((B,C)=>B?C?B.add(C):B:C,$),ce=D.reduce((B,C)=>B?C?B.add(C):B:C,ne),fe=o.version===6?o.state.rewardInfos.map((B,C)=>{var vn,Dn,En,Vn;let{rewardOpenTime:Ge,rewardEndTime:yt,rewardPerSecond:Vt}=B,Me=Ge.toNumber()?new Date(Ge.toNumber()*1e3+u):void 0,ye=yt.toNumber()?new Date(yt.toNumber()*1e3+u):void 0,Ct=Date.now()+u;if(!Me&&!ye)return;let ve=this.scope.mintToToken((En=(Dn=B.rewardMint)!=null?Dn:(vn=o.rewardInfos[C])==null?void 0:vn.rewardMint)==null?void 0:En.toBase58()),qn=Boolean(Me&&He(Ct,Me)),Fn=Boolean(ye&&De(Ct,ye)),Nn=!Me&&!ye||!Fn&&!qn,Jr=Nn&&De(Ct,Zt(ye,{seconds:-((Vn=o.jsonInfo.rewardPeriodExtend)!=null?Vn:72*60*60)})),$r=ve&&this.scope.mintToTokenAmount({mint:ve.mint,amount:go(B.totalReward,B.totalRewardEmissioned).toFixed(ve.decimals)}),jr=q==null?void 0:q[C],Yr=D[C],Qr=Boolean(ye),bt=o.rewardInfos[C];return K(L(L({},bt),B),{owner:bt==null?void 0:bt.rewardSender,apr:Yr,token:ve,userPendingReward:jr,userHavedReward:Qr,perSecond:ve&&this.scope.mintToTokenAmount({mint:ve.mint,amount:Vt}).toSignificant(),openTime:Me,endTime:ye,isOptionToken:B.rewardType==="Option tokens",isRewardBeforeStart:qn,isRewardEnded:Fn,isRewarding:Nn,isRwardingBeforeEnd72h:Jr,claimableRewards:$r,version:6})}).filter(B=>!!B):o.state.rewardInfos.map((B,C)=>{let Ge=q==null?void 0:q[C],yt=D[C],Vt=A[C],{perSlotReward:Me}=B,ye=St(Ge)||St(Me);return K(L({},B),{apr:yt,token:Vt,userPendingReward:Ge,userHavedReward:ye,version:o.version})}),de=S&&((Kn=o.ledger)==null?void 0:Kn.deposited)?new O(S,(On=o.ledger)==null?void 0:On.deposited):void 0;return K(L({},o),{lp:S,lpPrice:F,base:g,quote:T,name:_,isStakePool:m,isDualFusionPool:d,isNormalFusionPool:p,isClosedPool:y,isUpcomingPool:f,isStablePool:w,isNewPool:b,totalApr7d:ie,raydiumFeeApr7d:X,totalApr24h:ce,raydiumFeeApr24h:ne,totalApr30d:Ae,raydiumFeeApr30d:$,ammId:U,tvl:J,userHasStaked:St(de),rewards:fe,userStakedLpAmount:de,stakedLpAmount:N})}async _getUserRewardInfo({payer:t,rewardInfo:o}){if(o.rewardMint.equals(W)){let r=await Le({connection:this.scope.connection,owner:this.scope.ownerPubKey,payer:t,amount:dn(o)});return{rewardPubKey:r.signers[0].publicKey,newInstruction:r}}return{rewardPubKey:await this.scope.account.getCreatedTokenAccount({mint:o.rewardMint})}}async create({poolId:t,rewardInfos:o,payer:r}){this.checkDisabled(),this.scope.checkOwner();let i=E({publicKey:t}),a=this.scope.liquidity.allPools.find(A=>A.id===i.toBase58());a||this.logAndCreateError("invalid pool id");let c={lpMint:new Z(a.lpMint),lockInfo:{lockMint:Vo,lockVault:Co},version:6,rewardInfos:o,programId:zo(6)},m=this.createTxBuilder(),d=r!=null?r:this.scope.ownerPubKey,p=ya.generate(),y=await this.scope.connection.getMinimumBalanceForRentExemption(Xe.span);m.addInstruction({instructions:[or.createAccount({fromPubkey:d,newAccountPubkey:p.publicKey,lamports:y,space:Xe.span,programId:c.programId})],signers:[p]});let{publicKey:f,nonce:b}=await Ho({programId:c.programId,poolId:p.publicKey}),w=await Kt({programId:c.programId,poolId:p.publicKey,mint:c.lpMint,type:"lpVault"}),S=[],g=[];for(let A of c.rewardInfos){A.rewardOpenTime>=A.rewardEndTime&&this.logAndCreateError("start time error","rewardInfo.rewardOpenTime",A.rewardOpenTime.toString()),Bt[A.rewardType]||this.logAndCreateError("rewardType error",A.rewardType),A.rewardPerSecond<=0&&this.logAndCreateError("rewardPerSecond error",A.rewardPerSecond.toString()),S.push(Zo(A));let{rewardPubKey:q,newInstruction:F}=await this._getUserRewardInfo({rewardInfo:A,payer:d});F&&m.addInstruction(F),q||this.logAndCreateError("cannot found target token accounts",this.scope.account.tokenAccounts);let N=A.rewardMint.equals(W)?new Z(j.mint):A.rewardMint;g.push({rewardMint:N,rewardVault:await Kt({programId:c.programId,poolId:p.publicKey,mint:N,type:"rewardVault"}),userRewardToken:q})}let T=await this.scope.account.getCreatedTokenAccount({mint:c.lockInfo.lockMint});T||this.logAndCreateError("cannot found lock vault","tokenAccounts",this.scope.account.tokenAccounts);let _=Qo({farmKeyPair:p,owner:this.scope.ownerPubKey,farmAuthority:f,lpVault:w,lpMint:c.lpMint,lockVault:c.lockInfo.lockVault,lockMint:c.lockInfo.lockMint,lockUserAccount:T,programId:c.programId,rewardInfo:g,rewardInfoConfig:S,nonce:b});return await m.addInstruction({instructions:[_]}).build()}async restartReward({farmId:t,payer:o,newRewardInfo:r}){let i=this.getFarm(t);i.version!==6&&this.logAndCreateError("invalid farm version",i.version);let a={id:new Z(i.id),rewardInfos:i.rewardInfos,lpVault:new Z(i.lpVault),programId:new Z(i.programId)};r.rewardOpenTime>=r.rewardEndTime&&this.logAndCreateError("start time error","newRewardInfo",r);let u=o||this.scope.ownerPubKey,c=r.rewardMint.equals(W)?new Z(j.mint):r.rewardMint,m=a.rewardInfos.find(S=>new Z(S.rewardMint).equals(c));m||this.logAndCreateError("configuration does not exist","rewardMint",c);let d=m.rewardVault?new Z(m.rewardVault):W,p=this.createTxBuilder(),{rewardPubKey:y,newInstruction:f}=await this._getUserRewardInfo({rewardInfo:r,payer:u});f&&p.addInstruction(f),y||this.logAndCreateError("cannot found target token accounts",this.scope.account.tokenAccounts);let b=Buffer.alloc(un.span);un.encode({instruction:3,rewardReopenTime:x(r.rewardOpenTime),rewardEndTime:x(r.rewardEndTime),rewardPerSecond:x(r.rewardPerSecond)},b);let w=[s({pubkey:ot,isWritable:!1}),s({pubkey:a.id}),s({pubkey:a.lpVault,isWritable:!1}),s({pubkey:d}),s({pubkey:y}),s({pubkey:this.scope.ownerPubKey,isWritable:!1,isSigner:!0})];return await p.addInstruction({instructions:[new rt({programId:a.programId,keys:w,data:b})]}).build()}async addNewRewardToken(t){let{farmId:o,newRewardInfo:r,payer:i}=t,a=this.getFarm(o);a.version!==6&&this.logAndCreateError("invalid farm version",a.version);let u=i!=null?i:this.scope.ownerPubKey,c=this.createTxBuilder(),m=await Kt({programId:new Z(a.programId),poolId:new Z(a.id),mint:r.rewardMint,type:"rewardVault"}),{rewardPubKey:d,newInstruction:p}=await this._getUserRewardInfo({rewardInfo:r,payer:u});p&&c.addInstruction(p),d||this.logAndCreateError("annot found target token accounts",this.scope.account.tokenAccounts);let y=r.rewardMint.equals(W)?new Z(j.mint):r.rewardMint,f=Buffer.alloc(cn.span);cn.encode({instruction:4,isSet:new pn(1),rewardPerSecond:x(r.rewardPerSecond),rewardOpenTime:x(r.rewardOpenTime),rewardEndTime:x(r.rewardEndTime)},f);let b=[...Ke,s({pubkey:new Z(a.id)}),s({pubkey:new Z(a.authority),isWritable:!1}),s({pubkey:y,isWritable:!1}),s({pubkey:m}),s({pubkey:d}),s({pubkey:this.scope.ownerPubKey,isWritable:!1,isSigner:!0})];return await c.addInstruction({instructions:[new rt({programId:new Z(a.programId),keys:b,data:f})]}).build()}async _prepareFarmAccounts(t){let o=this.createTxBuilder(),{farmInfo:r}=t,{pubKey:i,newInstructions:a}=await this.scope.account.checkOrCreateAta({mint:r.lpMint});o.addInstruction(a);let u=await Promise.all(r.rewardInfos.map(async({rewardMint:d})=>{let{pubKey:p,newInstructions:y}=await this.scope.account.checkOrCreateAta({mint:d,autoUnwrapWSOLToSOL:!0});return o.addInstruction(y),p})),c=await ln({programId:new Z(r.programId),poolId:new Z(r.id),owner:this.scope.ownerPubKey});if(!r.ledger&&r.version<6){let d=await Yo({id:r.id,programId:r.programId,version:r.version,ledger:c,owner:this.scope.ownerPubKey});o.addInstruction({instructions:[d]})}let m=[s({pubkey:r.id}),s({pubkey:r.authority,isWritable:!1}),s({pubkey:c}),s({pubkey:this.scope.ownerPubKey,isWritable:!1,isSigner:!0}),s({pubkey:i}),s({pubkey:new Z(r.jsonInfo.lpVault)}),s({pubkey:u[0]}),s({pubkey:r.rewardInfos[0].rewardVault}),s({pubkey:ba,isWritable:!1}),s({pubkey:ot,isWritable:!1})];return{txBuilder:o,lpTokenAccount:i,rewardTokenAccountsPublicKeys:u,ledgerAddress:c,lowVersionKeys:m}}async deposit(t){this.scope.checkOwner();let{farmId:o,amount:r}=t,i=this.getParsedFarm(o),a=i.lpMint,{version:u,rewardInfos:c}=i;mn(u)||this.logAndCreateError("invalid farm version:",u);let{txBuilder:m,ledgerAddress:d,lpTokenAccount:p,lowVersionKeys:y,rewardTokenAccountsPublicKeys:f}=await this._prepareFarmAccounts({mint:a,farmInfo:i}),b=$o({version:u,rewardInfos:c,rewardTokenAccountsPublicKeys:f});b&&this.logAndCreateError(b);let w=Buffer.alloc(et.span);et.encode({instruction:Go(u),amount:x(r)},w);let S=u===6?[s({pubkey:ot,isWritable:!1}),s({pubkey:or.programId,isWritable:!1}),s({pubkey:i.id}),s({pubkey:i.authority,isWritable:!1}),s({pubkey:i.lpVault.mint}),s({pubkey:d}),s({pubkey:this.scope.ownerPubKey,isWritable:!1,isSigner:!0}),s({pubkey:p})]:y;if(u!==3)for(let T=1;T<c.length;T++)S.push(s({pubkey:f[T]})),S.push(s({pubkey:c[T].rewardVault}));let g=new rt({programId:i.programId,keys:S,data:w});return await m.addInstruction({instructions:[g]}).build()}async withdraw(t){this.scope.checkOwner();let{farmId:o,amount:r}=t,i=this.getParsedFarm(o),a=i.lpMint,{version:u,rewardInfos:c}=i;mn(u)||this.logAndCreateError("invalid farm version:",u);let{txBuilder:m,ledgerAddress:d,lpTokenAccount:p,lowVersionKeys:y,rewardTokenAccountsPublicKeys:f}=await this._prepareFarmAccounts({mint:a,farmInfo:i}),b=Buffer.alloc(et.span);et.encode({instruction:Jo(u),amount:x(r)},b);let w=u===6?[s({pubkey:ot,isWritable:!1}),s({pubkey:i.id}),s({pubkey:i.authority,isWritable:!1}),s({pubkey:i.lpVault.mint}),s({pubkey:d}),s({pubkey:this.scope.ownerPubKey,isWritable:!1,isSigner:!0}),s({pubkey:p})]:y;if(u!==3)for(let g=1;g<c.length;g++)w.push(s({pubkey:f[g]})),w.push(s({pubkey:c[g].rewardVault}));let S=new rt({programId:i.programId,keys:w,data:b});return await m.addInstruction({instructions:[S]}).build()}async withdrawFarmReward({farmId:t,withdrawMint:o}){var y;this.scope.checkOwner();let r=this.getParsedFarm(t),{version:i}=r;i!==6&&this.logAndCreateError("invalid farm version",r.version);let a=r.rewardInfos.find(f=>f.rewardMint.equals(o.equals(W)?new Z(j.mint):o));a||this.logAndCreateError("withdraw mint error","rewardInfos",r);let u=(y=a==null?void 0:a.rewardVault)!=null?y:W,c=this.createTxBuilder(),m;if(this._getUserRewardInfo({payer:this.scope.ownerPubKey,rewardInfo:a}),o.equals(W)){let f=await Le({connection:this.scope.connection,owner:this.scope.ownerPubKey,payer:this.scope.ownerPubKey,amount:dn(a)});m=f.signers[0].publicKey,c.addInstruction(f)}else{let f=await this.scope.account.getCreatedTokenAccount({mint:o});f===null?(m=await this.scope.account.getAssociatedTokenAccount(o),c.addInstruction({instructions:[fa(this.scope.ownerPubKey,m,this.scope.ownerPubKey,o)]})):m=f}let d=Buffer.alloc(an.span);an.encode({instruction:5},d);let p=[s({pubkey:ot,isWritable:!1}),s({pubkey:r.id}),s({pubkey:r.authority,isWritable:!1}),s({pubkey:r.lpVault.mint,isWritable:!1}),s({pubkey:u}),s({pubkey:m}),s({pubkey:this.scope.ownerPubKey,isWritable:!1,isSigner:!0})];return await c.addInstruction({instructions:[new rt({programId:r.programId,keys:p,data:d})]}).build()}};import{ComputeBudgetProgram as Ca}from"@solana/web3.js";import Te from"bn.js";import{PublicKey as rr}from"@solana/web3.js";import ir from"bn.js";var ar=(c=>(c[c.Uninitialized=0]="Uninitialized",c[c.Initialized=1]="Initialized",c[c.Disabled=2]="Disabled",c[c.RemoveLiquidityOnly=3]="RemoveLiquidityOnly",c[c.LiquidityOnly=4]="LiquidityOnly",c[c.OrderBook=5]="OrderBook",c[c.Swap=6]="Swap",c[c.WaitingForStart=7]="WaitingForStart",c))(ar||{}),sr=new ir(25),ur=new ir(1e4),cr="675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8",ga=new rr(cr),mr="5quBtoiQqxF9Jv6KYKctB59NT3gtJD2Y65kdnB1Uev3h",Pa=new rr(mr),Xl={[cr]:4,[mr]:5},lr={4:ga,5:Pa},dr={4:3,5:3};import{TOKEN_PROGRAM_ID as Tn}from"@solana/spl-token";import{SystemProgram as Ka,TransactionInstruction as ke}from"@solana/web3.js";var fn=R([v("instruction"),l("amountIn"),l("minAmountOut")]),yn=R([v("instruction"),l("maxAmountIn"),l("amountOut")]),bn=R([v("instruction"),v("nonce")]),gn=R([v("instruction"),v("nonce"),l("startTime")]),Pn=R([l("status"),l("nonce"),l("maxOrder"),l("depth"),l("baseDecimal"),l("quoteDecimal"),l("state"),l("resetFlag"),l("minSize"),l("volMaxCutRatio"),l("amountWaveRatio"),l("baseLotSize"),l("quoteLotSize"),l("minPriceMultiplier"),l("maxPriceMultiplier"),l("systemDecimalValue"),l("minSeparateNumerator"),l("minSeparateDenominator"),l("tradeFeeNumerator"),l("tradeFeeDenominator"),l("pnlNumerator"),l("pnlDenominator"),l("swapFeeNumerator"),l("swapFeeDenominator"),l("baseNeedTakePnl"),l("quoteNeedTakePnl"),l("quoteTotalPnl"),l("baseTotalPnl"),Y("quoteTotalDeposited"),Y("baseTotalDeposited"),Y("swapBaseInAmount"),Y("swapQuoteOutAmount"),l("swapBase2QuoteFee"),Y("swapQuoteInAmount"),Y("swapBaseOutAmount"),l("swapQuote2BaseFee"),k("baseVault"),k("quoteVault"),k("baseMint"),k("quoteMint"),k("lpMint"),k("openOrders"),k("marketId"),k("marketProgramId"),k("targetOrders"),k("withdrawQueue"),k("lpVault"),k("owner"),l("lpReserve"),H(l(),3,"padding")]),ha=R([l("accountType"),l("status"),l("nonce"),l("maxOrder"),l("depth"),l("baseDecimal"),l("quoteDecimal"),l("state"),l("resetFlag"),l("minSize"),l("volMaxCutRatio"),l("amountWaveRatio"),l("baseLotSize"),l("quoteLotSize"),l("minPriceMultiplier"),l("maxPriceMultiplier"),l("systemDecimalsValue"),l("abortTradeFactor"),l("priceTickMultiplier"),l("priceTick"),l("minSeparateNumerator"),l("minSeparateDenominator"),l("tradeFeeNumerator"),l("tradeFeeDenominator"),l("pnlNumerator"),l("pnlDenominator"),l("swapFeeNumerator"),l("swapFeeDenominator"),l("baseNeedTakePnl"),l("quoteNeedTakePnl"),l("quoteTotalPnl"),l("baseTotalPnl"),l("poolOpenTime"),l("punishPcAmount"),l("punishCoinAmount"),l("orderbookToInitTime"),Y("swapBaseInAmount"),Y("swapQuoteOutAmount"),Y("swapQuoteInAmount"),Y("swapBaseOutAmount"),l("swapQuote2BaseFee"),l("swapBase2QuoteFee"),k("baseVault"),k("quoteVault"),k("baseMint"),k("quoteMint"),k("lpMint"),k("modelDataAccount"),k("openOrders"),k("marketId"),k("marketProgramId"),k("targetOrders"),k("owner"),H(l(),64,"padding")]),hn=R([v("instruction"),l("baseAmountIn"),l("quoteAmountIn"),l("fixedSide")]),wn=R([v("instruction"),l("amountIn")]),pr={4:Pn,5:ha};import{PublicKey as wa}from"@solana/web3.js";var we=new wa("CDSr3ssLcRB6XYPJwAfFt18MZvEZp4LjHcvzBVZ45duo"),Ne=5e4,ka=R([l("x"),l("y"),l("price")]),Ta=R([l("accountType"),l("status"),l("multiplier"),l("validDataCount"),H(ka,Ne,"DataElement")]);function Aa(n,e){return[0,Ne-2]}function Ia(n){return[0,Ne-2]}function xa(n){return[0,Ne-2]}function Sa(n,e,t){let[o,r]=Aa(e,t),i=o,a=r,u=0,c=e*n.multiplier/t;for(;i<=a;){if(u=Math.floor((a+i)/2),u===0||u>=Ne-2)return[u,u,!1];let m=n.DataElement[u].x*n.multiplier/n.DataElement[u].y,d=n.DataElement[u-1].x*n.multiplier/n.DataElement[u-1].y,p=n.DataElement[u+1].x*n.multiplier/n.DataElement[u+1].y;if(c===m)return[u,u,!0];if(c===d)return[u-1,u-1,!0];if(c===p)return[u+1,u+1,!0];if(c<d)a=u-1;else{if(c>d&&c<m)return[u-1,u,!0];if(c>m&&c<p)return[u,u+1,!0];i=u+1}}return[u,u,!1]}function kn(n,e,t){let[o,r,i]=Sa(n,e,t);if(!i)return 0;if(o===r){let a=n.DataElement[o].x;return e*n.multiplier/a}else{let a=n.DataElement[o].x,u=n.DataElement[o].y,c=n.DataElement[r].x,m=n.DataElement[r].y,d=t*(c*u-a*m),p=a*d,y=(c-a)*(e*u-a*t)*m,f=p+y;return e*n.multiplier*d/f}}function Fe(n,e,t){return e*n.multiplier/t}function fr(n,e,t){return e*t/n.multiplier}function La(n,e){let[t,o]=Ia(e),r=t,i=o,a=0,u=e;for(;r<i;){if(a=Math.floor((i+r)/2),a<=0||a>Ne-2)return[a,a,!1];let c=n.DataElement[a].x,m=n.DataElement[a-1].x,d=n.DataElement[a+1].x;if(u===c)return[a,a,!0];if(u===m)return[a-1,a-1,!0];if(u===d)return[a+1,a+1,!0];if(u<m)i=a-1;else{if(u>m&&u<c)return[a-1,a,!0];if(u>c&&u<d)return[a,a+1,!0];r=a+1}}return[a,a,!1]}function _a(n,e){let[t,o]=xa(e),r=t,i=o,a=0,u=e;for(;r<=i;){if(a=Math.floor((i+r)/2),a<=0||a>=Ne-2)return[a,a,!1];let c=n.DataElement[a].y,m=n.DataElement[a-1].y,d=n.DataElement[a+1].y;if(u===c)return[a,a,!0];if(u===m)return[a-1,a-1,!0];if(u===d)return[a+1,a+1,!0];if(u<d)r=a+1;else{if(u<m&&u>c)return[a-1,a,!0];if(u<c&&u>d)return[a,a+1,!0];i=a-1}}return[a,a,!1]}function yr(n,e,t,o){let r=o?e+t:e-t,[i,a,u]=La(n,r);if(!u)return[0,0,!1,u];if(i===a)return[n.DataElement[a].price,n.DataElement[a].y,!1,u];{let c=n.DataElement[i].x,m=n.DataElement[a].x,d=n.DataElement[i].price,p=n.DataElement[a].price,y=n.DataElement[i].y,f=n.DataElement[a].y;if(e>=c&&e<=m)return o?[p,f,!0,u]:[d,y,!0,u];{let b,w;return o?(b=d+(p-d)*(e-c)/(m-c),w=y-(r-c)*n.multiplier/p):(b=d+(p-d)*(e-c)/(m-c),w=f+(m-r)*n.multiplier/d),[b,w,!1,u]}}}function Ra(n,e,t,o){let r=o?e-t:e+t,[i,a,u]=_a(n,r);if(!u)return[0,0,!1,u];if(i===a)return[n.DataElement[a].price,n.DataElement[a].x,!1,u];{let c=n.DataElement[i].x,m=n.DataElement[a].x,d=n.DataElement[i].price,p=n.DataElement[a].price,y=n.DataElement[i].y,f=n.DataElement[a].y;if(e>=f&&e<=y)return o?[p,m,!0,u]:[d,c,!0,u];{let b,w;return o?(b=d+(p-d)*(y-e)/(y-f),w=c+p*(y-r)/n.multiplier):(b=d+(p-d)*(y-e)/(y-f),w=m-d*(r-f)/n.multiplier),[b,w,!1,u]}}}function Ma(n,e){let t=yr(n,e,0,!1);return t[3]?t[0]:0}function br(n,e,t,o){let r=kn(n,e,t),i=Fe(n,e,r),a=Fe(n,t,r),u=Fe(n,o,r),c=!0,[m,d,p,y]=yr(n,i,u,c);if(!y)return 0;if(p)return o*n.multiplier/m;{let f=a-d;return fr(n,f,r)}}function gr(n,e,t,o){let r=kn(n,e,t),i=Fe(n,e,r),a=Fe(n,t,r),u=Fe(n,o,r),c=!1,[m,d,p,y]=Ra(n,a,u,c);if(!y)return 0;if(p)return o*m/n.multiplier;{let f=i-d;return fr(n,f,r)}}function Ba(n){let e=Ta.decode(n);return{accountType:e.accountType.toNumber(),status:e.status.toNumber(),multiplier:e.multiplier.toNumber(),validDataCount:e.validDataCount.toNumber(),DataElement:e.DataElement.map(t=>({x:t.x.toNumber(),y:t.y.toNumber(),price:t.price.toNumber()}))}}function Pr(n,e,t,o){let r=Ma(n,Fe(n,e,kn(n,e,t)))/n.multiplier;return o?r:1/r}var Ot=class{constructor({connection:e}){this._layoutData={accountType:0,status:0,multiplier:0,validDataCount:0,DataElement:[]};this.connection=e}get stableModelData(){return this._layoutData}async initStableModelLayout(){if(this._layoutData.validDataCount===0&&this.connection){let e=await this.connection.getAccountInfo(we);e&&(this._layoutData=Ba(e==null?void 0:e.data))}}};var qt=M("Raydium_liquidity_instruction");function hr(n){let{poolKeys:e,userKeys:t,amountIn:o,amountOut:r,fixedSide:i}=n,{version:a}=e;if(a===4||a===5){let u={poolKeys:e,userKeys:t};if(i==="in")return Oa(K(L({},u),{amountIn:o,minAmountOut:r}),a);if(i==="out")return qa(K(L({},u),{maxAmountIn:o,amountOut:r}),a);qt.logWithError("invalid params","params",n)}throw qt.logWithError("invalid version","poolKeys.version",a),new Error("invalid version")}function wr(n){let e=R([v("instruction"),v("simulateType")]),t=Buffer.alloc(e.span);e.encode({instruction:12,simulateType:0},t);let o=[s({pubkey:n.id,isWritable:!1}),s({pubkey:n.authority,isWritable:!1}),s({pubkey:n.openOrders,isWritable:!1}),s({pubkey:n.baseVault,isWritable:!1}),s({pubkey:n.quoteVault,isWritable:!1}),s({pubkey:n.lpMint,isWritable:!1}),s({pubkey:n.marketId,isWritable:!1})];return new ke({programId:n.programId,keys:o,data:t})}function Oa({poolKeys:n,userKeys:e,amountIn:t,minAmountOut:o},r){let i=Buffer.alloc(fn.span);fn.encode({instruction:9,amountIn:x(t),minAmountOut:x(o)},i);let a=[s({pubkey:Tn,isWritable:!1}),s({pubkey:n.id}),s({pubkey:n.authority,isWritable:!1}),s({pubkey:n.openOrders})];return r===4&&a.push(s({pubkey:n.targetOrders})),a.push(s({pubkey:n.baseVault}),s({pubkey:n.quoteVault})),r===5&&a.push(s({pubkey:we})),a.push(s({pubkey:n.marketProgramId,isWritable:!1}),s({pubkey:n.marketId}),s({pubkey:n.marketBids}),s({pubkey:n.marketAsks}),s({pubkey:n.marketEventQueue}),s({pubkey:n.marketBaseVault}),s({pubkey:n.marketQuoteVault}),s({pubkey:n.marketAuthority,isWritable:!1}),s({pubkey:e.tokenAccountIn}),s({pubkey:e.tokenAccountOut}),s({pubkey:e.owner,isWritable:!1})),new ke({programId:n.programId,keys:a,data:i})}function qa({poolKeys:n,userKeys:e,maxAmountIn:t,amountOut:o},r){let i=Buffer.alloc(yn.span);yn.encode({instruction:11,maxAmountIn:x(t),amountOut:x(o)},i);let a=[s({pubkey:Ka.programId,isWritable:!1}),s({pubkey:n.id}),s({pubkey:n.authority,isWritable:!1}),s({pubkey:n.openOrders}),s({pubkey:n.targetOrders}),s({pubkey:n.baseVault}),s({pubkey:n.quoteVault})];return r===5&&a.push(s({pubkey:we})),a.push(s({pubkey:n.marketProgramId,isWritable:!1}),s({pubkey:n.marketId}),s({pubkey:n.marketBids}),s({pubkey:n.marketAsks}),s({pubkey:n.marketEventQueue}),s({pubkey:n.marketBaseVault}),s({pubkey:n.marketQuoteVault}),s({pubkey:n.marketAuthority,isWritable:!1}),s({pubkey:e.tokenAccountIn}),s({pubkey:e.tokenAccountOut}),s({pubkey:e.owner,isWritable:!1,isSigner:!0})),new ke({programId:n.programId,keys:a,data:i})}function kr(n){let i=n,{owner:e}=i,t=ee(i,["owner"]),o=Buffer.alloc(bn.span);bn.encode({instruction:10,nonce:t.nonce},o);let r=[...Ke,s({pubkey:t.targetOrders}),s({pubkey:t.withdrawQueue}),s({pubkey:t.authority,isWritable:!1}),s({pubkey:t.lpMint}),s({pubkey:t.baseMint,isWritable:!1}),s({pubkey:t.quoteMint,isWritable:!1}),s({pubkey:t.baseVault}),s({pubkey:t.quoteVault}),s({pubkey:t.lpVault}),s({pubkey:t.marketId,isWritable:!1}),s({pubkey:e,isSigner:!0})];return new ke({programId:t.programId,keys:r,data:o})}function Tr(n){let{poolKeys:e,userKeys:t,startTime:o}=n,r=Buffer.alloc(gn.span);gn.encode({instruction:0,nonce:e.nonce,startTime:x(o)},r);let i=[...Ke,s({pubkey:e.id}),s({pubkey:e.authority,isWritable:!1}),s({pubkey:e.openOrders}),s({pubkey:e.lpMint}),s({pubkey:e.baseMint,isWritable:!1}),s({pubkey:e.quoteMint,isWritable:!1}),s({pubkey:e.baseVault,isWritable:!1}),s({pubkey:e.quoteVault,isWritable:!1}),s({pubkey:e.withdrawQueue}),s({pubkey:e.targetOrders}),s({pubkey:t.lpTokenAccount}),s({pubkey:e.lpVault,isWritable:!1}),s({pubkey:e.marketProgramId,isWritable:!1}),s({pubkey:e.marketId,isWritable:!1}),s({pubkey:t.payer,isSigner:!0})];return new ke({programId:e.programId,keys:i,data:r})}function Ar(n){let{poolKeys:e,userKeys:t,baseAmountIn:o,quoteAmountIn:r,fixedSide:i}=n,{version:a}=e;if(a===4||a===5){let u=Buffer.alloc(hn.span);hn.encode({instruction:3,baseAmountIn:x(o),quoteAmountIn:x(r),fixedSide:x(i==="base"?0:1)},u);let c=[s({pubkey:Tn,isWritable:!1}),s({pubkey:e.id}),s({pubkey:e.authority,isWritable:!1}),s({pubkey:e.openOrders,isWritable:!1}),s({pubkey:e.targetOrders}),s({pubkey:e.lpMint}),s({pubkey:e.baseVault}),s({pubkey:e.quoteVault})];return a===5&&c.push(s({pubkey:we})),c.push(s({pubkey:e.marketId,isWritable:!1}),s({pubkey:t.baseTokenAccount}),s({pubkey:t.quoteTokenAccount}),s({pubkey:t.lpTokenAccount}),s({pubkey:t.owner,isWritable:!1,isSigner:!0})),new ke({programId:e.programId,keys:c,data:u})}return qt.logWithError("invalid version","poolKeys.version",a),new ke({programId:e.programId,keys:[]})}function Ir(n){let{poolKeys:e,userKeys:t,amountIn:o}=n,{version:r}=e;if(r===4||r===5){let i=Buffer.alloc(wn.span);wn.encode({instruction:4,amountIn:x(o)},i);let a=[s({pubkey:Tn,isWritable:!1}),s({pubkey:e.id}),s({pubkey:e.authority,isWritable:!1}),s({pubkey:e.openOrders}),s({pubkey:e.targetOrders}),s({pubkey:e.lpMint}),s({pubkey:e.baseVault}),s({pubkey:e.quoteVault})];return r===5?a.push(s({pubkey:we})):a.push(s({pubkey:e.withdrawQueue}),s({pubkey:e.lpVault})),a.push(s({pubkey:e.marketProgramId,isWritable:!1}),s({pubkey:e.marketId}),s({pubkey:e.marketBaseVault}),s({pubkey:e.marketQuoteVault}),s({pubkey:e.marketAuthority,isWritable:!1}),s({pubkey:t.lpTokenAccount}),s({pubkey:t.baseTokenAccount}),s({pubkey:t.quoteTokenAccount}),s({pubkey:t.owner,isWritable:!1,isSigner:!0}),s({pubkey:e.marketEventQueue}),s({pubkey:e.marketBids}),s({pubkey:e.marketAsks})),new ke({programId:e.programId,keys:a,data:i})}return qt.logWithError("invalid version","poolKeys.version",r),new ke({programId:e.programId,keys:[]})}import{OpenOrders as va}from"@project-serum/serum";import at from"bn.js";import{PublicKey as xr}from"@solana/web3.js";var An=M("Raydium_liquidity_serum"),Sr="9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin",Fa=new xr(Sr),kd={[Sr]:3},Na={3:Fa};function Lr(n){let e=dr[n];return e||An.logWithError("invalid version","version",n),e}function _r(n){let e=Na[n];return e||An.logWithError("invalid version","version",n),e}async function Rr({programId:n,marketId:e}){let t=[e.toBuffer()],o=0,r;for(;o<100;){try{let i=t.concat(Buffer.from([o]),Buffer.alloc(7));r=await xr.createProgramAddress(i,n)}catch(i){if(i instanceof TypeError)throw i;o++;continue}return{publicKey:r,nonce:o}}throw An.logWithError("unable to find a viable program address nonce","params",{programId:n,marketId:e}),new Error("unable to find a viable program address nonce")}var Ft=M("Raydium_liquidity_util");function In(n,e){let t=n instanceof O?n.token:G.WSOL,{baseMint:o,quoteMint:r}=e;if(t.mint.equals(o))return"base";if(t.mint.equals(r))return"quote";let i=`liquidity getTokenSide - token not match with pool, params: ${JSON.stringify({token:t.mint,baseMint:o,quoteMint:r})}`;throw console.error(i),new Error(i)}function Ve(n,e){let{baseMint:t,quoteMint:o}=e;return n.mint.equals(t)||n.mint.equals(o)}function xn(n){let{status:e,startTime:t}=n,o=e.toNumber();return{[0]:{swap:!1,addLiquidity:!1,removeLiquidity:!1},[1]:{swap:!0,addLiquidity:!0,removeLiquidity:!0},[2]:{swap:!1,addLiquidity:!1,removeLiquidity:!1},[3]:{swap:!1,addLiquidity:!1,removeLiquidity:!0},[4]:{swap:!1,addLiquidity:!0,removeLiquidity:!0},[5]:{swap:!1,addLiquidity:!0,removeLiquidity:!0},[6]:{swap:!0,addLiquidity:!0,removeLiquidity:!0},[7]:{swap:Date.now()/1e3>=t.toNumber(),addLiquidity:!0,removeLiquidity:!0}}[o]||{swap:!1,addLiquidity:!1,removeLiquidity:!1}}function Fd(n){let e=pr[n];return e||Ft.logWithError("invalid version","version",n),e}function Da(n){let e=lr[n];return e||Ft.logWithError("invalid version","version",n),e}async function _e({name:n,programId:e,marketId:t}){let{publicKey:o}=await Pe([e.toBuffer(),t.toBuffer(),Buffer.from(n,"utf-8")],e);return o}async function Ea({programId:n}){return Pe([Buffer.from([97,109,109,32,97,117,116,104,111,114,105,116,121])],n)}async function Sn({version:n,marketId:e,baseMint:t,quoteMint:o}){let r=Da(n),[i,a,u]=[E({publicKey:e}),E({publicKey:t,transformSol:!0}),E({publicKey:o,transformSol:!0})],c=await _e({name:"amm_associated_seed",programId:r,marketId:i}),m=await _e({name:"lp_mint_associated_seed",programId:r,marketId:i}),{publicKey:d,nonce:p}=await Ea({programId:r}),y=await _e({name:"coin_vault_associated_seed",programId:r,marketId:i}),f=await _e({name:"pc_vault_associated_seed",programId:r,marketId:i}),b=await _e({name:"temp_lp_token_associated_seed",programId:r,marketId:i}),w=await _e({name:"open_order_associated_seed",programId:r,marketId:i}),S=await _e({name:"target_associated_seed",programId:r,marketId:i}),g=await _e({name:"withdraw_associated_seed",programId:r,marketId:i}),T=Lr(n),_=_r(T),{publicKey:A}=await Rr({programId:_,marketId:i});return{id:c,baseMint:a,quoteMint:u,lpMint:m,version:n,programId:r,authority:d,nonce:p,baseVault:y,quoteVault:f,lpVault:b,openOrders:w,targetOrders:S,withdrawQueue:g,marketVersion:T,marketProgramId:_,marketId:i,marketAuthority:A}}async function Br({connection:n,pools:e}){let t=e.map(r=>wr(r));return(await lo(n,t,"GetPoolData")).map(r=>{let i=po(r,"GetPoolData"),a=new at(ge(i,"status")),u=Number(ge(i,"coin_decimals")),c=Number(ge(i,"pc_decimals")),m=Number(ge(i,"lp_decimals")),d=new at(ge(i,"pool_coin_amount")),p=new at(ge(i,"pool_pc_amount")),y=new at(ge(i,"pool_lp_supply")),f="0";try{f=ge(i,"pool_open_time")}catch{f="0"}return{status:a,baseDecimals:u,quoteDecimals:c,lpDecimals:m,baseReserve:d,quoteReserve:p,lpSupply:y,startTime:new at(f)}})}function Kr(n,e,t){return Va(n.token,e.token,t)}function Va(n,e,t){let{baseMint:o,quoteMint:r}=t,i=Mr(n,t),a=Mr(e,t);return i===a&&Ft.logWithError("tokens not match with pool","params",{tokenA:n.mint,tokenB:e.mint,baseMint:o,quoteMint:r}),[i,a]}function Mr(n,e){let{baseMint:t,quoteMint:o}=e;return n.mint.equals(t)?"base":n.mint.equals(o)?"quote":(Ft.logWithError("token not match with pool","params",{token:n.mint,baseMint:t,quoteMint:o}),"base")}var Or=n=>n==="a"||n==="b";async function Nd(n,e,t){let o=await n.getAccountInfo(e);if(o===null)return null;let r=Pn.decode(o.data),i=await n.getTokenAccountBalance(r.baseVault),a=await n.getTokenAccountBalance(r.quoteVault),u=await va.load(n,r.openOrders,t),c=10**r.baseDecimal.toNumber(),m=10**r.quoteDecimal.toNumber(),d=u.baseTokenTotal.toNumber()/c,p=u.quoteTokenTotal.toNumber()/m,y=r.baseNeedTakePnl.toNumber()/c,f=r.quoteNeedTakePnl.toNumber()/m,b=i.value.uiAmount+d-y,w=a.value.uiAmount+p-f,S=parseFloat(r.lpReserve.toString()),g=b/w;return{baseAmount:b,quoteAmount:w,lpSupply:S,baseVaultKey:r.baseVault,quoteVaultKey:r.quoteVault,baseVaultBalance:i.value.uiAmount,quoteVaultBalance:a.value.uiAmount,openOrdersKey:r.openOrders,openOrdersTotalBase:d,openOrdersTotalQuote:p,basePnl:y,quotePnl:f,priceInQuote:g}}var st=class extends re{constructor(t){super(t);this._poolInfos=[];this._poolInfoMap=new Map;this._pairsInfo=[];this._pairsInfoMap=new Map;this._lpTokenMap=new Map;this._lpPriceMap=new Map;this._officialIds=new Set;this._unOfficialIds=new Set;this._sdkParseInfoCache=new Map;this._stableLayout=new Ot({connection:this.scope.connection})}async load(t){if(await this.scope.fetchLiquidity(t==null?void 0:t.forceUpdate),!this.scope.apiData.liquidityPools)return;let{data:o}=this.scope.apiData.liquidityPools,[r,i]=[o.official||[],o.unOfficial||[]];this._poolInfos=[...r,...i],this._officialIds=new Set(r.map(a=>{var c,m;let u=`${(c=this.scope.token.allTokenMap.get(a.baseMint))==null?void 0:c.symbol} - ${(m=this.scope.token.allTokenMap.get(a.quoteMint))==null?void 0:m.symbol}`;return this._poolInfoMap.set(a.id,a),this._lpTokenMap.set(a.lpMint,new G({mint:a.lpMint,decimals:a.lpDecimals,symbol:u,name:`${u} LP`})),a.id})),this._unOfficialIds=new Set(i.map(a=>{var c,m;let u=`${(c=this.scope.token.allTokenMap.get(a.baseMint))==null?void 0:c.symbol} - ${(m=this.scope.token.allTokenMap.get(a.quoteMint))==null?void 0:m.symbol}`;return this._poolInfoMap.set(a.id,a),this._lpTokenMap.set(a.lpMint,new G({mint:a.lpMint,decimals:a.lpDecimals,symbol:u,name:`${u} LP`})),a.id}))}async loadPairs(t){var o;return await this.scope.fetchPairs(t==null?void 0:t.forceUpdate),this._pairsInfo=((o=this.scope.apiData.liquidityPairsInfo)==null?void 0:o.data)||[],this._pairsInfoMap=new Map(this._pairsInfo.map(r=>{let i=this._lpTokenMap.get(r.lpMint),a=i&&r.lpPrice?Je({token:i,numberPrice:r.lpPrice,decimalDone:!0}):null;return a&&this._lpPriceMap.set(r.lpMint,a),[r.ammId,r]})),this._pairsInfo}get allPools(){return this._poolInfos}get allPoolIdSet(){return{official:this._officialIds,unOfficial:this._unOfficialIds}}get allPoolMap(){return this._poolInfoMap}get allPairs(){return this._pairsInfo}get allPairsMap(){return this._pairsInfoMap}get lpTokenMap(){return this._lpTokenMap}get lpPriceMap(){return this._lpPriceMap}async fetchMultipleInfo(t){return await this._stableLayout.initStableModelLayout(),await Br(K(L({},t),{connection:this.scope.connection}))}async sdkParseJsonLiquidityInfo(t){if(!t.length)return[];let o=t.map(r=>r.id).join("-");if(this._sdkParseInfoCache.has(o))return this._sdkParseInfoCache.get(o);try{let i=(await this.fetchMultipleInfo({pools:t.map(me)})).map((a,u)=>L(L({jsonInfo:t[u]},me(t[u])),a));return this._sdkParseInfoCache.set(o,i),i}catch(r){return console.error(r),[]}}computeAmountOut({poolKeys:t,poolInfo:o,amountIn:r,outputToken:i,slippage:a}){this.checkDisabled();let u=M("Raydium_computeAmountOut"),c=r.token,m=i;(!Ve(c,t)||!Ve(m,t))&&u.logWithError("token not match with pool","poolKeys",t);let{baseReserve:d,quoteReserve:p}=o;this.logDebug("baseReserve:",d.toString(),"quoteReserve:",p.toString());let y=r.token;this.logDebug("inputToken:",y),this.logDebug("amountIn:",r.toFixed()),this.logDebug("outputToken:",i),this.logDebug("slippage:",`${a.toSignificant()}%`);let f=[d,p],b=In(r,t);b==="quote"&&f.reverse(),this.logDebug("input side:",b);let[w,S]=f,g;if(t.version===4)g=new Q({baseToken:y,denominator:w,quoteToken:i,numerator:S});else{let $=Pr(this._stableLayout.stableModelData,d.toNumber(),p.toNumber(),!1);g=new Q({baseToken:y,denominator:b==="quote"?new Te($*1e6):new Te(1e6),quoteToken:i,numerator:b==="quote"?new Te(1e6):new Te($*1e6)})}this.logDebug("currentPrice:",`1 ${y.symbol} \u2248 ${g.toFixed()} ${i.symbol}`),this.logDebug("currentPrice invert:",`1 ${i.symbol} \u2248 ${g.invert().toFixed()} ${y.symbol}`);let T=r.raw,_=ae,A=ae;if(!T.isZero())if(t.version===4){A=T.mul(sr).div(ur);let $=T.sub(A),ne=w.add($);_=S.mul($).div(ne)}else{A=T.mul(new Te(2)).div(new Te(1e4));let $=T.sub(A),ne=b==="quote"?br:gr;_=new Te(ne(this._stableLayout.stableModelData,p.toNumber(),d.toNumber(),$.toNumber()))}let F=new oe(pe).add(a).invert().mul(_).quotient,N=new O(i,_),J=new O(i,F);this.logDebug("amountOut:",N.toFixed(),"minAmountOut:",J.toFixed());let D=new Q({baseToken:y,denominator:T.sub(A),quoteToken:i,numerator:_});!T.isZero()&&!_.isZero()&&(D=new Q({baseToken:y,denominator:T.sub(A),quoteToken:i,numerator:_}),this.logDebug("executionPrice:",`1 ${y.symbol} \u2248 ${D.toFixed()} ${i.symbol}`),this.logDebug("executionPrice invert:",`1 ${i.symbol} \u2248 ${D.invert().toFixed()} ${y.symbol}`));let U=new oe(parseInt(String(Math.abs(parseFloat(D.toFixed())-parseFloat(g.toFixed()))*1e9)),parseInt(String(parseFloat(g.toFixed())*1e9))),X=new O(y,A);return{amountOut:N,minAmountOut:J,currentPrice:g,executionPrice:D,priceImpact:U,fee:X}}async computePairAmount({poolId:t,amount:o,anotherToken:r,slippage:i}){let a=E({publicKey:t}),u=this._poolInfoMap.get(a.toBase58());u||this.logAndCreateError("pool not found",a.toBase58());let c=(await this.sdkParseJsonLiquidityInfo([u]))[0];c||this.logAndCreateError("pool parseInfo not found",a.toBase58());let{baseReserve:m,quoteReserve:d}=c;this.logDebug("baseReserve:",m.toString(),"quoteReserve:",d.toString());let p=o.token;this.logDebug("tokenIn:",p,"amount:",o.toFixed(),"anotherToken:",r,"slippage:",`${i.toSignificant()}%`);let y=In(o,me(u));this.logDebug("input side:",y);let f=ae;o.isZero()||(f=y==="base"?Gt(o.raw.mul(d),m):Gt(o.raw.mul(m),d));let w=new oe(pe).add(i).mul(f).quotient,S=new O(r,f),g=new O(r,w);return this.logDebug("anotherAmount:",S.toFixed(),"maxAnotherAmount:",g.toFixed()),{anotherAmount:S,maxAnotherAmount:g}}async swapWithAMM(t){let{poolKeys:o,payer:r,amountIn:i,amountOut:a,fixedSide:u,config:c}=t;this.logDebug("amountIn:",i),this.logDebug("amountOut:",a),(i.isZero()||a.isZero())&&this.logAndCreateError("amounts must greater than zero","amounts",{amountIn:i.toFixed(),amountOut:a.toFixed()});let{account:m}=this.scope,d=this.createTxBuilder(),{bypassAssociatedCheck:p=!1}=c||{},[y,f]=[i.token,a.token],b=await m.getCreatedTokenAccount({mint:y.mint,associatedOnly:!1}),w=await m.getCreatedTokenAccount({mint:f.mint}),[S,g]=[i.raw,a.raw],F=await m.handleTokenAccount({side:"in",amount:S,mint:y.mint,tokenAccount:b,bypassAssociatedCheck:p}),{tokenAccount:T}=F,_=ee(F,["tokenAccount"]);d.addInstruction(_);let N=await m.handleTokenAccount({side:"out",amount:0,mint:f.mint,tokenAccount:w,payer:r,bypassAssociatedCheck:p}),{tokenAccount:A}=N,q=ee(N,["tokenAccount"]);return d.addInstruction(q),d.addInstruction({instructions:[hr({poolKeys:o,userKeys:{tokenAccountIn:T,tokenAccountOut:A,owner:this.scope.ownerPubKey},amountIn:S,amountOut:g,fixedSide:u})]}),d.buildMultiTx({extInfo:{amountOut:a}})}async createPool(t){this.checkDisabled(),this.scope.checkOwner(),t.version!==4&&this.logAndCreateError("invalid version","poolKeys.version",t.version);let o=this.createTxBuilder(),r=await Sn(t);return await o.addInstruction({instructions:[kr(K(L({},r),{owner:this.scope.ownerPubKey}))]}).build()}async initPool(t){t.version!==4&&this.logAndCreateError("invalid version","poolKeys.version",t.version);let{baseAmount:o,quoteAmount:r,startTime:i=0,config:a}=t,u=await Sn(t),{baseMint:c,quoteMint:m,lpMint:d,baseVault:p,quoteVault:y}=u,f=this.createTxBuilder(),{account:b}=this.scope,w=!!(a!=null&&a.bypassAssociatedCheck),S=await b.getCreatedTokenAccount({mint:c,associatedOnly:!1}),g=await b.getCreatedTokenAccount({mint:m,associatedOnly:!1});!S&&!g&&this.logAndCreateError("cannot found target token accounts","tokenAccounts",b.tokenAccounts);let T=await b.getCreatedTokenAccount({mint:d,associatedOnly:!1}),D=await b.handleTokenAccount({side:"in",amount:o.raw,mint:c,tokenAccount:S,bypassAssociatedCheck:w}),{tokenAccount:_}=D,A=ee(D,["tokenAccount"]);f.addInstruction(A);let U=await b.handleTokenAccount({side:"in",amount:r.raw,mint:m,tokenAccount:g,bypassAssociatedCheck:w}),{tokenAccount:q}=U,F=ee(U,["tokenAccount"]);f.addInstruction(F);let X=await b.handleTokenAccount({side:"out",amount:0,mint:d,tokenAccount:T,bypassAssociatedCheck:w}),{tokenAccount:N}=X,J=ee(X,["tokenAccount"]);return f.addInstruction(J),f.addInstruction({instructions:[Ee({source:_,destination:p,owner:this.scope.ownerPubKey,amount:o.raw}),Ee({source:q,destination:y,owner:this.scope.ownerPubKey,amount:r.raw}),Tr({poolKeys:u,userKeys:{lpTokenAccount:N,payer:this.scope.ownerPubKey},startTime:i})]}),await f.build()}async addLiquidity(t){let{poolId:o,amountInA:r,amountInB:i,fixedSide:a,config:u}=t,c=E({publicKey:o}),m=this.allPools.find(ft=>ft.id===c.toBase58());m||this.logAndCreateError("pool not found",o);let p=(await this.sdkParseJsonLiquidityInfo([m]))[0];p||this.logAndCreateError("pool parse error",p),this.logDebug("amountInA:",r,"amountInB:",i),(r.isZero()||i.isZero())&&this.logAndCreateError("amounts must greater than zero","amountInA & amountInB",{amountInA:r.toFixed(),amountInB:i.toFixed()});let{account:y}=this.scope,f=(u==null?void 0:u.bypassAssociatedCheck)||!1,[b,w]=[r.token,i.token],S=await y.getCreatedTokenAccount({mint:b.mint,associatedOnly:!1}),g=await y.getCreatedTokenAccount({mint:w.mint,associatedOnly:!1});!S&&!g&&this.logAndCreateError("cannot found target token accounts","tokenAccounts",y.tokenAccounts);let T=await y.getCreatedTokenAccount({mint:p.lpMint}),_=[b,w],A=[S,g],q=[r.raw,i.raw],[F]=Kr(r,i,p),N="base";(!["quote","base"].includes(F)||!Or(a))&&this.logAndCreateError("invalid fixedSide","fixedSide",a),F==="quote"?(_.reverse(),A.reverse(),q.reverse(),N=a==="a"?"quote":"base"):F==="base"&&(N=a==="a"?"base":"quote");let[J,D]=_,[U,X]=A,[$,ne]=q,ie=this.createTxBuilder(),Ce=await y.handleTokenAccount({side:"in",amount:$,mint:J.mint,tokenAccount:U,bypassAssociatedCheck:f}),{tokenAccount:Ae}=Ce,ce=ee(Ce,["tokenAccount"]);ie.addInstruction(ce);let We=await y.handleTokenAccount({side:"in",amount:ne,mint:D.mint,tokenAccount:X,bypassAssociatedCheck:f}),{tokenAccount:fe}=We,de=ee(We,["tokenAccount"]);ie.addInstruction(de);let Ue=await y.handleTokenAccount({side:"out",amount:0,mint:p.lpMint,tokenAccount:T,bypassAssociatedCheck:f}),{tokenAccount:dt}=Ue,pt=ee(Ue,["tokenAccount"]);return ie.addInstruction(pt),ie.addInstruction({instructions:[Ar({poolKeys:p,userKeys:{baseTokenAccount:Ae,quoteTokenAccount:fe,lpTokenAccount:dt,owner:this.scope.ownerPubKey},baseAmountIn:$,quoteAmountIn:ne,fixedSide:N})]}),await ie.build()}async removeLiquidity(t){let{poolId:o,amountIn:r,config:i}=t,a=E({publicKey:o}),u=this.allPools.find(D=>D.id===a.toBase58());u||this.logAndCreateError("pool not found",o);let m=(await this.sdkParseJsonLiquidityInfo([u]))[0];m||this.logAndCreateError("pool pass error",m);let{baseMint:d,quoteMint:p,lpMint:y}=m;this.logDebug("amountIn:",r),r.isZero()&&this.logAndCreateError("amount must greater than zero","amountIn",r.toFixed()),r.token.mint.equals(y)||this.logAndCreateError("amountIn's token not match lpMint","amountIn",r);let{account:f}=this.scope,b=await f.getCreatedTokenAccount({mint:y,associatedOnly:!1});b||this.logAndCreateError("cannot found lpTokenAccount","tokenAccounts",f.tokenAccounts);let w=await f.getCreatedTokenAccount({mint:d}),S=await f.getCreatedTokenAccount({mint:p}),g=this.createTxBuilder(),T=(i==null?void 0:i.bypassAssociatedCheck)||!1,N=await f.handleTokenAccount({side:"out",amount:0,mint:d,tokenAccount:w,bypassAssociatedCheck:T}),{tokenAccount:_}=N,A=ee(N,["tokenAccount"]);g.addInstruction(A);let J=await f.handleTokenAccount({side:"out",amount:0,mint:p,tokenAccount:S,bypassAssociatedCheck:T}),{tokenAccount:q}=J,F=ee(J,["tokenAccount"]);return g.addInstruction(F),g.addInstruction({instructions:[Ca.requestUnits({units:4e5,additionalFee:0}),Ir({poolKeys:m,userKeys:{lpTokenAccount:b,baseTokenAccount:_,quoteTokenAccount:q,owner:this.scope.ownerPubKey},amountIn:r.raw})]}),await g.build()}lpMintToTokenAmount({poolId:t,amount:o,decimalDone:r}){let i=E({publicKey:t});i||this.logAndCreateError("pool not found");let a=this._poolInfoMap.get(i.toBase58()),u=se(o),c=new G({mint:a.lpMint,decimals:a.lpDecimals}),m=r?new I(u.numerator,u.denominator):new I(u.numerator,u.denominator).mul(new Te(10).pow(new Te(c.decimals)));return new O(c,Ie(m))}getFixedSide({poolId:t,inputMint:o}){let[r,i]=[E({publicKey:t}),E({publicKey:o})],a=this._poolInfoMap.get(r.toBase58());a||this.logAndCreateError("pool not found",r.toBase58());let u=a.baseMint===i.toBase58();return(i.equals(xe)||i.equals(W))&&(u=!u),u?"a":"b"}};import{PublicKey as Vr}from"@solana/web3.js";import{intersection as Cr,xor as ja}from"lodash";import{PublicKey as Wa}from"@solana/web3.js";var Ua="routeUGWgWzqBWFcrCfv8tritsqukccJPu3q5GPP3xS",ut=new Wa(Ua),qr=["amm","serum","route"],Fr=[to,At,xe,oo,eo,ro,io,no,ao].map(n=>n.toBase58());import{TOKEN_PROGRAM_ID as Dt}from"@solana/spl-token";import{SystemProgram as Nr,TransactionInstruction as vr}from"@solana/web3.js";var Nt=R([v("instruction"),l("amountIn"),l("amountOut")]),vt=R([v("instruction")]);var Ga=M("Raydium_route_instruction");function Dr(n){let{fixedSide:e}=n;if(e==="in")return[Ja(n),$a(n)];throw Ga.logWithError("invalid params","params",n),new Error(`invalid params, params: ${n}`)}function Ja({fromPoolKeys:n,toPoolKeys:e,userKeys:t,amountIn:o,amountOut:r}){let i=Buffer.alloc(Nt.span),a;return n.version===4?(Nt.encode({instruction:0,amountIn:x(o),amountOut:x(r)},i),a=[s({pubkey:Nr.programId,isWritable:!1}),s({pubkey:Dt,isWritable:!1}),s({pubkey:n.programId,isWritable:!1}),s({pubkey:n.id}),s({pubkey:e.id,isWritable:!1}),s({pubkey:n.authority,isWritable:!1}),s({pubkey:n.openOrders}),s({pubkey:n.baseVault}),s({pubkey:n.quoteVault}),s({pubkey:n.marketProgramId,isWritable:!1}),s({pubkey:n.marketId}),s({pubkey:n.marketBids}),s({pubkey:n.marketAsks}),s({pubkey:n.marketEventQueue}),s({pubkey:n.marketBaseVault}),s({pubkey:n.marketQuoteVault}),s({pubkey:n.marketAuthority,isWritable:!1}),s({pubkey:t.inTokenAccount}),s({pubkey:t.middleTokenAccount}),s({pubkey:t.middleStatusAccount}),s({pubkey:t.owner,isWritable:!1,isSigner:!0})]):(Nt.encode({instruction:2,amountIn:x(o),amountOut:x(r)},i),a=[s({pubkey:Nr.programId,isWritable:!1}),s({pubkey:Dt,isWritable:!1}),s({pubkey:n.programId,isWritable:!1}),s({pubkey:n.id}),s({pubkey:e.id,isWritable:!1}),s({pubkey:n.authority,isWritable:!1}),s({pubkey:n.openOrders}),s({pubkey:n.baseVault}),s({pubkey:n.quoteVault}),s({pubkey:we,isWritable:!1}),s({pubkey:n.marketProgramId,isWritable:!1}),s({pubkey:n.marketId}),s({pubkey:n.marketBids}),s({pubkey:n.marketAsks}),s({pubkey:n.marketEventQueue}),s({pubkey:n.id}),s({pubkey:n.id}),s({pubkey:n.id}),s({pubkey:t.inTokenAccount}),s({pubkey:t.middleTokenAccount}),s({pubkey:t.middleStatusAccount}),s({pubkey:t.owner,isWritable:!1,isSigner:!0})]),new vr({programId:ut,keys:a,data:i})}function $a({fromPoolKeys:n,toPoolKeys:e,userKeys:t}){let o=Buffer.alloc(vt.span),r;return e.version===4?(vt.encode({instruction:1},o),r=[s({pubkey:Dt,isWritable:!1}),s({pubkey:e.programId,isWritable:!1}),s({pubkey:n.id,isWritable:!1}),s({pubkey:e.id}),s({pubkey:e.authority,isWritable:!1}),s({pubkey:e.openOrders}),s({pubkey:e.baseVault}),s({pubkey:e.quoteVault}),s({pubkey:e.marketProgramId,isWritable:!1}),s({pubkey:e.marketId}),s({pubkey:e.marketBids}),s({pubkey:e.marketAsks}),s({pubkey:e.marketEventQueue}),s({pubkey:e.marketBaseVault}),s({pubkey:e.marketQuoteVault}),s({pubkey:e.marketAuthority,isWritable:!1}),s({pubkey:t.middleTokenAccount}),s({pubkey:t.outTokenAccount}),s({pubkey:t.middleStatusAccount}),s({pubkey:t.owner,isWritable:!1,isSigner:!0})]):(vt.encode({instruction:3},o),r=[s({pubkey:Dt,isWritable:!1}),s({pubkey:e.programId,isWritable:!1}),s({pubkey:n.id,isWritable:!1}),s({pubkey:e.id}),s({pubkey:e.authority,isWritable:!1}),s({pubkey:e.openOrders}),s({pubkey:e.baseVault}),s({pubkey:e.quoteVault}),s({pubkey:we,isWritable:!1}),s({pubkey:e.marketProgramId,isWritable:!1}),s({pubkey:e.marketId}),s({pubkey:e.marketBids}),s({pubkey:e.marketAsks}),s({pubkey:e.marketEventQueue}),s({pubkey:e.id}),s({pubkey:e.id}),s({pubkey:e.id}),s({pubkey:t.middleTokenAccount}),s({pubkey:t.outTokenAccount}),s({pubkey:t.middleStatusAccount}),s({pubkey:t.owner,isWritable:!1,isSigner:!0})]),new vr({programId:ut,keys:r,data:o})}async function Er({programId:n,fromPoolId:e,middleMint:t,owner:o}){let{publicKey:r}=await Pe([e.toBuffer(),t.toBuffer(),o.toBuffer()],n);return r}var ct=class extends re{constructor(e){super(e)}computeRouteAmountOut({fromPoolKeys:e,toPoolKeys:t,fromPoolInfo:o,toPoolInfo:r,amountIn:i,outputToken:a,slippage:u}){let{swap:c}=xn(o),{swap:m}=xn(r);(!c||!m)&&this.logAndCreateError("pools swap not enabled","pools",{fromPoolKeys:e,toPoolKeys:t,fromPoolInfo:o,toPoolInfo:r});let d=i.token,p=a;(!Ve(d,e)||!Ve(p,t))&&this.logAndCreateError("pools cannot be routed","pools",{fromPoolKeys:e,toPoolKeys:t});let y=[e.baseMint.toBase58(),e.quoteMint.toBase58()],f=[t.baseMint.toBase58(),t.quoteMint.toBase58()],b=[...y,...f],w=[o.baseDecimals,o.quoteDecimals,r.baseDecimals,r.quoteDecimals],[S,g]=[d.mint.toBase58(),p.mint.toBase58()],T=ja(y,f);(T.length!==2||!T.includes(S)||!T.includes(g))&&this.logAndCreateError("xor tokens not match","pools",{fromPoolKeys:e,toPoolKeys:t});let _=Cr(y,f);_.length!==1&&this.logAndCreateError("cannot found middle token of two pools","pools",{fromPoolKeys:e,toPoolKeys:t});let A=_[0],q=b.indexOf(A);q===-1&&this.logAndCreateError("cannot found middle token","pools",{fromPoolKeys:e,toPoolKeys:t});let F=w[q],N=new Vr(A),J=new G({mint:N,decimals:F});this.logInfo("from pool:",e),this.logInfo("to pool:",t),this.logInfo("intersection mints:",_),this.logInfo("xor mints:",T),this.logInfo("middleMint:",A);let{minAmountOut:D,priceImpact:U,fee:X}=this.scope.liquidity.computeAmountOut({poolKeys:e,poolInfo:o,amountIn:i,outputToken:J,slippage:u}),{amountOut:$,minAmountOut:ne,priceImpact:ie,fee:Ae}=this.scope.liquidity.computeAmountOut({poolKeys:t,poolInfo:r,amountIn:D,outputToken:a,slippage:u}),ce=null,[fe,de]=[i.raw,$.raw];return!fe.isZero()&&!de.isZero()&&(ce=new Q({baseToken:d,denominator:fe,quoteToken:a,numerator:de}),this.logDebug("executionPrice:",`1 ${d.symbol} \u2248 ${ce.toFixed()} ${a.symbol}`),this.logDebug("executionPrice invert:",`1 ${a.symbol} \u2248 ${ce.invert().toFixed()} ${d.symbol}`)),{amountOut:$,minAmountOut:ne,executionPrice:ce,priceImpact:U.add(ie),fee:[X,Ae]}}async swapWithRoute(e){let{fromPoolKeys:t,toPoolKeys:o,amountIn:r,amountOut:i,fixedSide:a,config:u}=e;this.logDebug("amountIn:",r,"amountOut:",i),(r.isZero()||i.isZero())&&this.logAndCreateError("amounts must greater than zero","amounts",{amountIn:r.toFixed(),amountOut:i.toFixed()});let{account:c}=this.scope,{bypassAssociatedCheck:m=!1}=u||{},[d,p]=[r.token,i.token],y=await this.scope.account.getCreatedTokenAccount({mint:d.mint,associatedOnly:!1}),f=await this.scope.account.getCreatedTokenAccount({mint:p.mint}),b=[t.baseMint.toBase58(),t.quoteMint.toBase58()],w=[o.baseMint.toBase58(),o.quoteMint.toBase58()],g=Cr(b,w)[0],T=new Vr(g),_=await this.scope.account.getCreatedTokenAccount({mint:T}),[A,q]=[r.raw,i.raw],F=this.createTxBuilder(),N=this.createTxBuilder(),ce=await c.handleTokenAccount({side:"in",amount:A,mint:d.mint,tokenAccount:y,bypassAssociatedCheck:m,skipCloseAccount:!0}),{tokenAccount:J}=ce,D=ee(ce,["tokenAccount"]);F.addInstruction(D);let fe=await c.handleTokenAccount({side:"out",amount:0,mint:p.mint,tokenAccount:f,bypassAssociatedCheck:m,skipCloseAccount:!0}),{tokenAccount:U}=fe,X=ee(fe,["tokenAccount"]);F.addInstruction(X);let de=await c.handleTokenAccount({side:"in",amount:0,mint:T,tokenAccount:_,bypassAssociatedCheck:m,skipCloseAccount:!0}),{tokenAccount:$}=de,ne=ee(de,["tokenAccount"]);F.addInstruction(ne),N.addInstruction({instructions:Dr({fromPoolKeys:t,toPoolKeys:o,userKeys:{inTokenAccount:J,outTokenAccount:U,middleTokenAccount:$,middleStatusAccount:await Er({programId:ut,fromPoolId:t.id,middleMint:T,owner:this.scope.ownerPubKey}),owner:this.scope.ownerPubKey},amountIn:A,amountOut:q,fixedSide:a})});let ie=F.build();return await N.buildMultiTx({extraPreBuildData:[ie],extInfo:{amountOut:q}})}};import{PublicKey as Ya}from"@solana/web3.js";import Ur from"bn.js";var Ln=R([Oe("mintAuthorityOption"),k("mintAuthority"),l("supply"),v("decimals"),v("isInitialized"),Oe("freezeAuthorityOption"),k("freezeAuthority")]);function Wr(n,e){return n.sort((t,o)=>{let{official:r,unOfficial:i}=e,a=new Set(r),u=new Set(i),c=p=>a.has(p.mint)?1:u.has(p.mint)?2:3,m=c(t)-c(o),d=p=>!/^[a-zA-Z]/.test(p);if(m===0){let p=d(t.symbol),y=d(o.symbol);return p&&!y?1:!p&&y?-1:t.symbol.localeCompare(o.symbol)}else return m})}async function Op(n,e){try{if(!n)return;let t=await n.getAccountInfo(E({publicKey:e}));return!t||t.data.length!==Ln.span?void 0:Ln.decode(t.data)}catch{return}}var mt=class extends re{constructor(t){super(t);this._tokens=[];this._tokenMap=new Map;this._tokenPrice=new Map;this._mintList={official:[],unOfficial:[],unNamed:[]}}async load(t){this.checkDisabled(),await this.scope.fetchTokens(t==null?void 0:t.forceUpdate),this._mintList={official:[],unOfficial:[],unNamed:[]},this._tokens=[],this._tokenMap=new Map;let{data:o}=this.scope.apiData.tokens||{data:{official:[],unOfficial:[],unNamed:[],blacklist:[]}},r=new Set(o.blacklist);[o.official,o.unOfficial,o.unNamed].forEach((i,a)=>{i.forEach(u=>{let c=["official","unOfficial","unNamed"][a];!r.has(u.mint)&&u.mint!==W.toBase58()&&(this._tokens.push(K(L({},u),{symbol:u.symbol||"",name:u.name||""})),this._mintList[c].push(u.mint))})}),this._mintList.official.push(Qe.mint.toBase58()),this._tokens=Wr(this._tokens,this._mintList),this._tokens.push(K(L({},Qe),{mint:W.toBase58()})),this._tokens.forEach(i=>{this._tokenMap.set(i.mint,K(L({},i),{id:i.mint}))}),this._tokenMap.set(j.mint,K(L({},j),{icon:Qe.icon,id:"wsol"})),this._tokenMap.set(W.toBase58(),K(L({},Qe),{mint:W.toBase58()}))}get allTokens(){return this._tokens}get allTokenMap(){return this._tokenMap}get tokenMints(){return this._mintList}get tokenPrices(){return this._tokenPrice}async fetchTokenPrices(t){let o=this.allTokens.filter(m=>{var d;return!!((d=m.extensions)!=null&&d.coingeckoId)&&m.mint!==Ya.default.toBase58()}),r=o.map(m=>m.extensions.coingeckoId),i=await this.scope.api.getCoingeckoPrice(r),a=o.reduce((m,d)=>i[d.extensions.coingeckoId].usd?K(L({},m),{[d.mint]:Je({token:this._tokenMap.get(d.mint),numberPrice:i[d.extensions.coingeckoId].usd,decimalDone:!0})}):m,{}),u=t||await this.scope.api.getRaydiumTokenPrice(),c=Object.keys(u).reduce((m,d)=>this._tokenMap.get(d)?K(L({},m),{[d]:Je({token:this._tokenMap.get(d),numberPrice:u[d],decimalDone:!0})}):m,{});return this._tokenPrice=new Map([...Object.entries(a),...Object.entries(c)]),this._tokenPrice}mintToToken(t){let o=E({publicKey:t,transformSol:!0}),r=this.allTokenMap.get(o.toBase58());r||this.logAndCreateError("token not found, mint:",o.toBase58());let{decimals:i,name:a,symbol:u}=r;return new G({mint:t,decimals:i,name:a,symbol:u})}mintToTokenAmount({mint:t,amount:o,decimalDone:r}){let i=this.mintToToken(t);return r?new O(i,x(o)):new O(i,this.decimalAmount({mint:t,amount:o,decimalDone:r}))}decimalAmount({mint:t,amount:o}){let r=se(o),i=this.mintToToken(t);return Ie(new I(r.numerator,r.denominator).mul(new Ur(10**i.decimals)))}uiAmount({mint:t,amount:o}){let r=se(o),i=this.mintToToken(t);return i?new I(r.numerator,r.denominator).div(new Ur(10**i.decimals)).toSignificant(i.decimals):""}};function Gr(n){let e=[];for(let t=0;t<n.length;t++)for(let o=0;o<n.length;o++)t!=o&&e.push([n[t],n[o]]);return e}var lt=class extends re{async load(){this.checkDisabled(),await this.scope.fetchLiquidity()}async _getBestSwapPool({availablePools:e,officialPoolIdSet:t}){if(e.length===0)return;if(e.length===1)return e[0];let o=e.filter(a=>t.has(a.id));return o.length===1?o[0]:(await this.scope.liquidity.sdkParseJsonLiquidityInfo(o.length?o:e)).reduce((a,u)=>{let c=a.version===5,m=u.version===5;return c&&!m?a:!c&&m?u:bo(zt(a.lpSupply,10**a.lpDecimals),zt(u.lpSupply,10**u.lpDecimals))?a:u}).jsonInfo}async getAvailablePools(e){this.checkDisabled();let{inputMint:t,outputMint:o}=e,[r,i]=[E({publicKey:t,transformSol:!0}).toBase58(),E({publicKey:o,transformSol:!0}).toBase58()],a=this.scope.liquidity.allPools.filter(p=>p.baseMint===r&&p.quoteMint===i||p.baseMint===i&&p.quoteMint===r),u=new Set([...Fr,r,i]),c=new Set(JSON.parse(JSON.stringify([...u])));c.delete(r),c.delete(i);let m=this.scope.liquidity.allPools.filter(p=>{let y=u.has(p.baseMint)&&u.has(p.quoteMint),f=c.has(p.baseMint)&&c.has(p.quoteMint);return y&&!f}),d=await this._getBestSwapPool({availablePools:a,officialPoolIdSet:this.scope.liquidity.allPoolIdSet.official});return{availablePools:a,best:d,routedPools:m}}async getBestAmountOut({pools:e,amountIn:t,inputToken:o,outputToken:r,slippage:i,features:a}){if(this.checkDisabled(),!e){let{routedPools:_}=await this.getAvailablePools({inputMint:o.mint,outputMint:r.mint});e=_}let u=await this.scope.liquidity.sdkParseJsonLiquidityInfo(e||[]),c=(e||[]).map((_,A)=>({poolKeys:me(_),poolInfo:u[A]})),m=a||qr;this.logDebug("features:",m),c.length||this.logAndCreateError("please provide at least one source of trade or (inputMint & outputMint)",c);let d=[],p="amm",y=new O(o,t),f=new O(r,0),b=f,w=null,S=null,g=new oe(ae),T=[];if(m.includes("amm"))for(let{poolKeys:_,poolInfo:A}of c)try{let{amountOut:q,minAmountOut:F,currentPrice:N,executionPrice:J,priceImpact:D,fee:U}=this.scope.liquidity.computeAmountOut({poolKeys:_,poolInfo:A,amountIn:y,outputToken:r,slippage:i});q.gt(f)&&(console.log("amm",A),d=[{source:"amm",keys:_}],p="amm",f=q,b=F,w=N,S=J,g=D,T=[U])}catch{}if(m.includes("route")){let _=Gr(c);for(let A of _){if(A.length!==2)continue;let[q,F]=A,{poolKeys:N,poolInfo:J}=q,{poolKeys:D,poolInfo:U}=F;try{let{amountOut:X,minAmountOut:$,executionPrice:ne,priceImpact:ie,fee:Ae}=this.scope.route.computeRouteAmountOut({fromPoolKeys:N,toPoolKeys:D,fromPoolInfo:J,toPoolInfo:U,amountIn:y,outputToken:r,slippage:i});X.gt(f)&&(d=[{source:"amm",keys:N},{source:"amm",keys:D}],p="route",f=X,b=$,S=ne,g=ie,T=Ae)}catch{}}}return{routes:d,routeType:p,amountOut:f,minAmountOut:b,fixedSide:"in",currentPrice:w,executionPrice:S,priceImpact:g,fee:T}}async directSwap(e){this.checkDisabled();let{amountOut:t,amountIn:o,slippage:r,config:i}=e,a=o.token,u=t.token,{routes:c,routeType:m,minAmountOut:d}=await this.getBestAmountOut({inputToken:a,outputToken:u,amountIn:o.raw,slippage:r});return await this.swap({routes:c,routeType:m,amountIn:o,amountOut:d,fixedSide:"in",config:i})}async swap(e){this.checkDisabled(),this.scope.checkOwner();let{routes:t,routeType:o,amountIn:r,amountOut:i,fixedSide:a,config:u}=e;if(o==="amm"&&t.length===1)return await this.scope.liquidity.swapWithAMM({poolKeys:t[0].keys,amountIn:r,amountOut:i,fixedSide:a,config:u});if(o==="route"&&t.length===2)return await this.scope.route.swapWithRoute({fromPoolKeys:t[0].keys,toPoolKeys:t[1].keys,amountIn:r,amountOut:i,fixedSide:a,config:u});throw this.logAndCreateError("invalid routes with routeType","routes",{routeType:o,routes:t}),new Error("invalid routes with routeType")}async getWSolAccounts(){this.scope.checkOwner(),await this.scope.account.fetchWalletTokenAccounts();let e=this.scope.account.tokenAccounts.filter(t=>t.mint.equals(xe));return e.sort((t,o)=>t.isAssociated?1:o.isAssociated||t.amount.lt(o.amount)?-1:1),e}async unWrapWSol(e){let t=await this.getWSolAccounts(),o=this.createTxBuilder(),r=await Le({connection:this.scope.connection,owner:this.scope.ownerPubKey,payer:this.scope.ownerPubKey,amount:0});o.addInstruction(r);let i=x(e);for(let a=0;a<t.length;a++)i.gte(t[a].amount)?(o.addInstruction({instructions:[qe({tokenAccount:t[a].publicKey,payer:this.scope.ownerPubKey,owner:this.scope.ownerPubKey})]}),i.sub(t[a].amount)):(o.addInstruction({instructions:[qe({tokenAccount:t[a].publicKey,payer:this.scope.ownerPubKey,owner:this.scope.ownerPubKey})]}),Ee({destination:r.signers[0].publicKey,source:t[a].publicKey,amount:i,owner:this.scope.ownerPubKey}));return o.build()}async wrapWSol(e){let t=await this.getWSolAccounts(),o=this.createTxBuilder(),r=await Le({connection:this.scope.connection,owner:this.scope.ownerPubKey,payer:this.scope.ownerPubKey,amount:e,skipCloseAccount:!0});return o.addInstruction(r),t.length&&o.addInstruction({instructions:[Ee({destination:t[0].publicKey,source:r.signers[0].publicKey,amount:e,owner:this.scope.ownerPubKey})],endInstructions:[qe({tokenAccount:r.signers[0].publicKey,payer:this.scope.ownerPubKey,owner:this.scope.ownerPubKey})]}),o.build()}};var Re={},Et=class{constructor(e){this.rawBalances=new Map;let{connection:t,cluster:o,owner:r,api:i,defaultApiTokens:a,defaultApiLiquidityPools:u,defaultApiFarmPools:c,defaultApiPairsInfo:m,apiCacheTime:d}=e;this._connection=t,this.cluster=o,this._owner=r?new le(r):void 0,this._signAllTransactions=e.signAllTransactions,this.api=i,this._apiCacheTime=d||5*60*1e3,this.logger=M("Raydium"),this.farm=new it({scope:this,moduleName:"Raydium_Farm"}),this.account=new Ze({scope:this,moduleName:"Raydium_Account",tokenAccounts:e.tokenAccounts,tokenAccountRawInfos:e.tokenAccountRawInfos}),this.liquidity=new st({scope:this,moduleName:"Raydium_Liquidity"}),this.token=new mt({scope:this,moduleName:"Raydium_token"}),this.trade=new lt({scope:this,moduleName:"Raydium_trade"}),this.route=new ct({scope:this,moduleName:"Raydium_route"});let p=new Date().getTime(),[y,f,b,w]=[a?{fetched:p,data:a}:Re.tokens,u?{fetched:p,data:u}:Re.liquidityPools,c?{fetched:p,data:c}:Re.farmPools,m?{fetched:p,data:m}:Re.liquidityPairsInfo];this.apiData=L(L(L(L({},y?{tokens:y}:{}),f?{liquidityPools:f}:{}),b?{farmPools:b}:{}),w?{liquidityPairsInfo:w}:{})}static async load(e){let t=Qa({cluster:"mainnet",owner:null,apiRequestInterval:3e5,apiRequestTimeout:1e4},e),{cluster:o,apiRequestTimeout:r}=t,i=new _t({cluster:o,timeout:r}),a=new Et(K(L({},t),{api:i}));return await a.token.load(),await a.liquidity.load(),a}get owner(){return this._owner}get ownerPubKey(){if(!this._owner)throw new Error(Rt);return this._owner.publicKey}setOwner(e){return this._owner=e?new le(e):void 0,this}get connection(){if(!this._connection)throw new Error(ko);return this._connection}setConnection(e){return this._connection=e,this}get signAllTransactions(){return this._signAllTransactions}setSignAllTransactions(e){return this._signAllTransactions=e,this}checkOwner(){if(!this.owner)throw this.logger.error(Rt),new Error(Rt)}isCacheInvalidate(e){return new Date().getTime()-e>this._apiCacheTime}async fetchTokens(e){if(this.apiData.tokens&&!this.isCacheInvalidate(this.apiData.tokens.fetched)&&!e)return this.apiData.tokens.data;let t={fetched:Date.now(),data:await this.api.getTokens()};return this.apiData.tokens=t,Re.tokens=t,t.data}async fetchLiquidity(e){if(this.apiData.liquidityPools&&!this.isCacheInvalidate(this.apiData.liquidityPools.fetched)&&!e)return this.apiData.liquidityPools.data;let t={fetched:Date.now(),data:await this.api.getLiquidityPools()};return this.apiData.liquidityPools=t,Re.liquidityPools=t,t.data}async fetchPairs(e){var o;if(this.apiData.liquidityPairsInfo&&!this.isCacheInvalidate(this.apiData.liquidityPairsInfo.fetched)&&!e)return((o=this.apiData.liquidityPairsInfo)==null?void 0:o.data)||[];let t={fetched:Date.now(),data:await this.api.getPairsInfo()};return this.apiData.liquidityPairsInfo=t,Re.liquidityPairsInfo=t,t.data}async fetchFarms(e){if(this.apiData.farmPools&&!this.isCacheInvalidate(this.apiData.farmPools.fetched)&&!e)return this.apiData.farmPools.data;let t={fetched:Date.now(),data:await this.api.getFarmPools()};return this.apiData.farmPools=t,Re.farmPools=t,t.data}async chainTimeOffset(){let e=await this.connection.getBlockTime(await this.connection.getSlot());return e?(e*1e3,Number((e*1e3-Date.now()).toFixed(0))):0}mintToToken(e){return this.token.mintToToken(e)}mintToTokenAmount(e){return this.token.mintToTokenAmount(e)}decimalAmount(e){return this.token.decimalAmount(e)}uiAmount(e){return this.token.uiAmount(e)}};var sy=n=>n;export{ka as DataElement,Vo as FARM_LOCK_MINT,Co as FARM_LOCK_VAULT,Do as FARM_PROGRAMID_TO_VERSION,Fo as FARM_PROGRAM_ID_V3,ea as FARM_PROGRAM_ID_V3_PUBKEY,No as FARM_PROGRAM_ID_V5,ta as FARM_PROGRAM_ID_V5_PUBKEY,vo as FARM_PROGRAM_ID_V6,na as FARM_PROGRAM_ID_V6_PUBKEY,Uo as FARM_VERSION_TO_LEDGER_LAYOUT,Eo as FARM_VERSION_TO_PROGRAMID,Wo as FARM_VERSION_TO_STATE_LAYOUT,ur as LIQUIDITY_FEES_DENOMINATOR,sr as LIQUIDITY_FEES_NUMERATOR,Xl as LIQUIDITY_PROGRAMID_TO_VERSION,ga as LIQUIDITY_PROGRAM_ID_V4,Pa as LIQUIDITY_PROGRAM_ID_V5,lr as LIQUIDITY_VERSION_TO_PROGRAM_ID,dr as LIQUIDITY_VERSION_TO_SERUM_VERSION,pr as LIQUIDITY_VERSION_TO_STATE_LAYOUT,ar as LiquidityPoolStatus,we as MODEL_DATA_PUBKEY,ut as ROUTE_PROGRAM_ID_V1,Et as Raydium,kd as SERUM_PROGRAMID_TO_VERSION,Fa as SERUM_PROGRAM_ID_V3,Na as SERUM_VERSION_TO_PROGRAM_ID,Ln as SPL_MINT_LAYOUT,Ot as StableLayout,Zn as TOKEN_SOL,j as TOKEN_WSOL,cr as _LIQUIDITY_PROGRAM_ID_V4,mr as _LIQUIDITY_PROGRAM_ID_V5,Ua as _ROUTE_PROGRAM_ID_V1,Sr as _SERUM_PROGRAM_ID_V3,hn as addLiquidityLayout,rn as associatedLedgerAccountLayout,dn as calFarmRewardAmount,nr as calculateFarmPoolAprList,qe as closeAccountInstruction,Yo as createAssociatedLedgerAccountInstruction,bn as createPoolV4Layout,Le as createWSolAccountInstructions,qr as defaultRoutes,et as dwLayout,cn as farmAddRewardLayout,Go as farmDespotVersionToInstruction,Gm as farmLedgerLayoutV3_1,Bo as farmLedgerLayoutV3_2,Jm as farmLedgerLayoutV5_1,Ko as farmLedgerLayoutV5_2,Oo as farmLedgerLayoutV6_1,Zo as farmRewardInfoToConfig,sn as farmRewardLayout,un as farmRewardRestartLayout,Xi as farmRewardTimeInfoLayout,Ro as farmStateV3Layout,Mo as farmStateV5Layout,Xe as farmStateV6Layout,Jo as farmWithdrawVersionToInstruction,pa as fetchMultipleFarmInfoAndUpdate,fn as fixedSwapInLayout,yn as fixedSwapOutLayout,Ba as formatLayout,In as getAmountSide,Kr as getAmountsSide,Ho as getAssociatedAuthority,ln as getAssociatedLedgerAccount,Kt as getAssociatedLedgerPoolAccount,Er as getAssociatedMiddleStatusAccount,Sn as getAssociatedPoolKeys,gr as getDxByDyBaseIn,br as getDyByDxBaseIn,ma as getFarmLedgerLayout,zo as getFarmProgramId,la as getFarmStateLayout,ca as getFarmVersion,Ea as getLiquidityAssociatedAuthority,_e as getLiquidityAssociatedId,Nd as getLiquidityInfo,Da as getLiquidityProgramId,Fd as getLiquidityStateLayout,xn as getPoolEnabledFeatures,Op as getSPLTokenInfo,Rr as getSerumAssociatedAuthority,_r as getSerumProgramId,Lr as getSerumVersion,Pr as getStablePrice,Mr as getTokenSide,Va as getTokensSide,Gr as groupPools,Ve as includesToken,gn as initPoolLayout,Ui as initTokenAccountInstruction,mn as isValidFarmVersion,Or as isValidFixedSide,er as judgeFarmType,Pn as liquidityStateV4Layout,ha as liquidityStateV5Layout,hr as makeAMMSwapInstruction,Ar as makeAddLiquidityInstruction,Qo as makeCreateFarmInstruction,kr as makeCreatePoolInstruction,Tr as makeInitPoolInstruction,Ir as makeRemoveLiquidityInstruction,Dr as makeRouteSwapInstruction,wr as makeSimulatePoolInfoInstruction,Br as makeSimulationPoolInfo,Oa as makeSwapFixedInInstruction,qa as makeSwapFixedOutInstruction,Ja as makeSwapInFixedInInstruction,$a as makeSwapOutFixedInInstruction,Ee as makeTransferInstruction,Xo as mergeSdkFarmInfo,Ta as modelDataInfoLayout,So as parseTokenAccountResp,Bt as poolTypeV6,Qe as quantumSOLHydratedTokenJsonInfo,Hi as realFarmStateV3Layout,zi as realFarmStateV5Layout,Zi as realFarmV6Layout,wn as removeLiquidityLayout,Nt as routeSwapInLayout,vt as routeSwapOutLayout,Wr as sortTokens,he as splAccountLayout,Fr as swapRouteMiddleMints,sy as unionArr,da as updateFarmPoolInfo,$o as validateFarmRewards,tr as whetherIsStakeFarmPool,an as withdrawRewardLayout};
//# sourceMappingURL=index.mjs.map