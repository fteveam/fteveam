import{PublicKey as h}from"@solana/web3.js";import{get as c,set as v}from"lodash";import I from"dayjs";import O from"dayjs/plugin/utc";I.extend(O);var i=class{constructor(e){this.logLevel=e.logLevel!==void 0?e.logLevel:3,this.name=e.name}set level(e){this.logLevel=e}get time(){return I().utc().format("YYYY/MM/DD HH:mm:ss UTC")}get moduleName(){return this.name}isLogLevel(e){return e<=this.logLevel}error(...e){return this.isLogLevel(0)?(console.error(this.time,this.name,"sdk logger error",...e),this):this}logWithError(...e){let o=e.map(n=>typeof n=="object"?JSON.stringify(n):n).join(", ");throw new Error(o)}warning(...e){return this.isLogLevel(1)?(console.warn(this.time,this.name,"sdk logger warning",...e),this):this}info(...e){return this.isLogLevel(2)?(console.info(this.time,this.name,"sdk logger info",...e),this):this}debug(...e){return this.isLogLevel(3)?(console.debug(this.time,this.name,"sdk logger debug",...e),this):this}},m={},E={};function p(r){let e=c(m,r);if(!e){let o=c(E,r);e=new i({name:r,logLevel:o}),v(m,r,e)}return e}import{PublicKey as _}from"@solana/web3.js";import f from"bn.js";var w=new f(25),K=new f(1e4),b="675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8",Y=new _(b),R="5quBtoiQqxF9Jv6KYKctB59NT3gtJD2Y65kdnB1Uev3h",A=new _(R),N={[b]:4,[R]:5};var a={4:3,5:3};var s=p("Raydium_liquidity_serum"),L="9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin",V=new h(L),P={[L]:3},D={3:V};function W(r){let e=a[r];return e||s.logWithError("invalid version","version",r),e}function B(r){let e=D[r];return e||s.logWithError("invalid version","version",r),e}async function F({programId:r,marketId:e}){let o=[e.toBuffer()],n=0,g;for(;n<100;){try{let t=o.concat(Buffer.from([n]),Buffer.alloc(7));g=await h.createProgramAddress(t,r)}catch(t){if(t instanceof TypeError)throw t;n++;continue}return{publicKey:g,nonce:n}}throw s.logWithError("unable to find a viable program address nonce","params",{programId:r,marketId:e}),new Error("unable to find a viable program address nonce")}export{P as SERUM_PROGRAMID_TO_VERSION,V as SERUM_PROGRAM_ID_V3,D as SERUM_VERSION_TO_PROGRAM_ID,L as _SERUM_PROGRAM_ID_V3,F as getSerumAssociatedAuthority,B as getSerumProgramId,W as getSerumVersion};
//# sourceMappingURL=serum.mjs.map