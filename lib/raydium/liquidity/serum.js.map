{"version":3,"sources":["../../../src/raydium/liquidity/serum.ts","../../../src/common/logger.ts","../../../src/raydium/liquidity/constant.ts"],"sourcesContent":["import { PublicKey } from \"@solana/web3.js\";\n\nimport { SerumVersion } from \"../../api\";\nimport { createLogger } from \"../../common/logger\";\n\nimport { LIQUIDITY_VERSION_TO_SERUM_VERSION } from \"./constant\";\n\nconst logger = createLogger(\"Raydium_liquidity_serum\");\n\n/* ================= program public keys ================= */\nexport const _SERUM_PROGRAM_ID_V3 = \"9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin\";\nexport const SERUM_PROGRAM_ID_V3 = new PublicKey(_SERUM_PROGRAM_ID_V3);\n\n// serum program id string => serum version\nexport const SERUM_PROGRAMID_TO_VERSION: {\n  [key: string]: SerumVersion;\n} = {\n  [_SERUM_PROGRAM_ID_V3]: 3,\n};\n\n// serum version => serum program id\nexport const SERUM_VERSION_TO_PROGRAM_ID: { [key in SerumVersion]?: PublicKey } & {\n  [K: number]: PublicKey;\n} = {\n  3: SERUM_PROGRAM_ID_V3,\n};\n\nexport function getSerumVersion(version: number): SerumVersion {\n  const serumVersion = LIQUIDITY_VERSION_TO_SERUM_VERSION[version];\n  if (!serumVersion) logger.logWithError(\"invalid version\", \"version\", version);\n\n  return serumVersion;\n}\n\nexport function getSerumProgramId(version: number): PublicKey {\n  const programId = SERUM_VERSION_TO_PROGRAM_ID[version];\n  if (!programId) logger.logWithError(\"invalid version\", \"version\", version);\n\n  return programId;\n}\n\nexport async function getSerumAssociatedAuthority({\n  programId,\n  marketId,\n}: {\n  programId: PublicKey;\n  marketId: PublicKey;\n}): Promise<{ publicKey: PublicKey; nonce: number }> {\n  const seeds = [marketId.toBuffer()];\n\n  let nonce = 0;\n  let publicKey: PublicKey;\n\n  while (nonce < 100) {\n    try {\n      const seedsWithNonce = seeds.concat(Buffer.from([nonce]), Buffer.alloc(7));\n      publicKey = await PublicKey.createProgramAddress(seedsWithNonce, programId);\n    } catch (err) {\n      if (err instanceof TypeError) {\n        throw err;\n      }\n      nonce++;\n      continue;\n    }\n    return { publicKey, nonce };\n  }\n\n  logger.logWithError(\"unable to find a viable program address nonce\", \"params\", {\n    programId,\n    marketId,\n  });\n  throw new Error(\"unable to find a viable program address nonce\");\n}\n","import { get, set } from \"lodash\";\nimport pino, { LevelWithSilent, Logger } from \"pino\";\nimport pretty from \"pino-pretty\";\n\nexport type ModuleName = \"Common.Api\";\n\nconst moduleLoggers: { [key in ModuleName]?: Logger } = {};\n\nconst moduleLevels: { [key in ModuleName]?: LevelWithSilent } = {};\n\nconst stream = pretty({\n  colorize: true,\n  levelFirst: true,\n  translateTime: \"SYS:yyyymmdd HH:MM:ss.l\",\n});\nconst globalLogger = pino({ base: null, level: \"silent\" }, stream);\n\nexport interface LoggerInstance extends Logger {\n  logWithError: (...args: any) => void;\n}\n\nexport function createLogger(moduleName: string): LoggerInstance {\n  let logger = get(moduleLoggers, moduleName);\n\n  if (!logger) {\n    // default level is silent\n    const level = get(moduleLevels, moduleName);\n\n    logger = globalLogger.child({ name: moduleName }, { level });\n    set(moduleLoggers, moduleName, logger);\n  }\n\n  logger.logWithError = (...args): void => {\n    const msg = args.map((arg) => (typeof arg === \"object\" ? JSON.stringify(arg) : arg)).join(\", \");\n    // logger.error(msg);\n    throw new Error(msg);\n  };\n\n  return logger;\n}\n\nexport function setLoggerLevel(moduleName: ModuleName, level: LevelWithSilent): void {\n  set(moduleLevels, moduleName, level);\n\n  const logger = get(moduleLoggers, moduleName);\n  if (logger) logger.level = level;\n}\n","import { PublicKey } from \"@solana/web3.js\";\nimport BN from \"bn.js\";\n\nimport { LiquidityVersion, SerumVersion } from \"../../api/type\";\n\nexport enum LiquidityPoolStatus {\n  Uninitialized,\n  Initialized,\n  Disabled,\n  RemoveLiquidityOnly,\n  LiquidityOnly,\n  OrderBook,\n  Swap,\n  WaitingForStart,\n}\n\nexport const LIQUIDITY_FEES_NUMERATOR = new BN(25);\nexport const LIQUIDITY_FEES_DENOMINATOR = new BN(10000);\n\n/* ================= program public keys ================= */\nexport const _LIQUIDITY_PROGRAM_ID_V4 = \"675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8\";\nexport const LIQUIDITY_PROGRAM_ID_V4 = new PublicKey(_LIQUIDITY_PROGRAM_ID_V4);\n\nexport const _LIQUIDITY_PROGRAM_ID_V5 = \"5quBtoiQqxF9Jv6KYKctB59NT3gtJD2Y65kdnB1Uev3h\";\nexport const LIQUIDITY_PROGRAM_ID_V5 = new PublicKey(_LIQUIDITY_PROGRAM_ID_V5);\n\n// liquidity program id string => liquidity version\nexport const LIQUIDITY_PROGRAMID_TO_VERSION: {\n  [key: string]: LiquidityVersion;\n} = {\n  [_LIQUIDITY_PROGRAM_ID_V4]: 4,\n  [_LIQUIDITY_PROGRAM_ID_V5]: 5,\n};\n\n// liquidity version => liquidity program id\nexport const LIQUIDITY_VERSION_TO_PROGRAM_ID: { [key in LiquidityVersion]?: PublicKey } & {\n  [K: number]: PublicKey;\n} = {\n  4: LIQUIDITY_PROGRAM_ID_V4,\n  5: LIQUIDITY_PROGRAM_ID_V5,\n};\n\n// liquidity version => serum version\nexport const LIQUIDITY_VERSION_TO_SERUM_VERSION: {\n  [key in LiquidityVersion]?: SerumVersion;\n} & {\n  [K: number]: SerumVersion;\n} = {\n  4: 3,\n  5: 3,\n};\n"],"mappings":"6iBAAA,4OAAA,MAA0B,2BCA1B,MAAyB,kBACzB,EAA8C,mBAC9C,EAAmB,0BAIb,EAAkD,CAAC,EAEnD,EAA0D,CAAC,EAE3D,EAAS,cAAO,CACpB,SAAU,GACV,WAAY,GACZ,cAAe,yBACjB,CAAC,EACK,EAAe,cAAK,CAAE,KAAM,KAAM,MAAO,QAAS,EAAG,CAAM,EAM1D,WAAsB,EAAoC,CAC/D,GAAI,GAAS,UAAI,EAAe,CAAU,EAE1C,GAAI,CAAC,EAAQ,CAEX,GAAM,GAAQ,UAAI,EAAc,CAAU,EAE1C,EAAS,EAAa,MAAM,CAAE,KAAM,CAAW,EAAG,CAAE,OAAM,CAAC,EAC3D,UAAI,EAAe,EAAY,CAAM,CACvC,CAEA,SAAO,aAAe,IAAI,IAAe,CACvC,GAAM,GAAM,EAAK,IAAI,AAAC,GAAS,MAAO,IAAQ,SAAW,KAAK,UAAU,CAAG,EAAI,CAAI,EAAE,KAAK,IAAI,EAE9F,KAAM,IAAI,OAAM,CAAG,CACrB,EAEO,CACT,CCvCA,MAA0B,2BAC1B,EAAe,oBAeR,GAAM,GAA2B,GAAI,WAAG,EAAE,EACpC,EAA6B,GAAI,WAAG,GAAK,EAGzC,EAA2B,+CAC3B,EAA0B,GAAI,aAAU,CAAwB,EAEhE,EAA2B,+CAC3B,EAA0B,GAAI,aAAU,CAAwB,EAGhE,EAET,EACD,GAA2B,GAC3B,GAA2B,CAC9B,EAWO,GAAM,GAIT,CACF,EAAG,EACH,EAAG,CACL,EF3CA,GAAM,GAAS,EAAa,yBAAyB,EAGxC,EAAuB,+CACvB,EAAsB,GAAI,aAAU,CAAoB,EAGxD,EAET,EACD,GAAuB,CAC1B,EAGa,EAET,CACF,EAAG,CACL,EAEO,WAAyB,EAA+B,CAC7D,GAAM,GAAe,EAAmC,GACxD,MAAK,IAAc,EAAO,aAAa,kBAAmB,UAAW,CAAO,EAErE,CACT,CAEO,WAA2B,EAA4B,CAC5D,GAAM,GAAY,EAA4B,GAC9C,MAAK,IAAW,EAAO,aAAa,kBAAmB,UAAW,CAAO,EAElE,CACT,CAEA,iBAAkD,CAChD,YACA,YAImD,CACnD,GAAM,GAAQ,CAAC,EAAS,SAAS,CAAC,EAE9B,EAAQ,EACR,EAEJ,KAAO,EAAQ,KAAK,CAClB,GAAI,CACF,GAAM,GAAiB,EAAM,OAAO,OAAO,KAAK,CAAC,CAAK,CAAC,EAAG,OAAO,MAAM,CAAC,CAAC,EACzE,EAAY,KAAM,aAAU,qBAAqB,EAAgB,CAAS,CAC5E,OAAS,EAAP,CACA,GAAI,YAAe,WACjB,KAAM,GAER,IACA,QACF,CACA,MAAO,CAAE,YAAW,OAAM,CAC5B,CAEA,QAAO,aAAa,gDAAiD,SAAU,CAC7E,YACA,UACF,CAAC,EACK,GAAI,OAAM,+CAA+C,CACjE","names":[]}