{"version":3,"sources":["../../../src/raydium/trade/type.ts"],"sourcesContent":["import { PublicKey } from \"@solana/web3.js\";\n\nimport { BigNumberish } from \"../../common/bignumber\";\nimport { Currency, Percent, Price, Token, TokenAmount } from \"../../module\";\nimport { LiquidityPoolJsonInfo, LiquidityPoolKeys, SerumSource, SwapSide } from \"../liquidity/type\";\n\nexport type TradeSource = \"amm\" | \"serum\" | \"stable\";\nexport type RouteType = \"amm\" | \"serum\" | \"route\";\n\nexport interface RouteInfo {\n  source: TradeSource;\n  keys: LiquidityPoolKeys;\n}\n\nexport interface GetBestAmountOutParams {\n  pools?: LiquidityPoolJsonInfo[];\n  markets?: SerumSource[];\n  inputToken: Token;\n  outputToken: Token;\n  amountIn: BigNumberish;\n  slippage: Percent;\n  midTokens?: Currency | Token[];\n  features?: RouteType[];\n}\n\nexport interface GetAmountOutReturn {\n  routes: RouteInfo[];\n  routeType: \"amm\" | \"route\";\n  amountOut: TokenAmount;\n  minAmountOut: TokenAmount;\n  fixedSide: \"in\";\n  currentPrice: Price | null;\n  executionPrice: Price | null;\n  priceImpact: Percent;\n  fee: TokenAmount[];\n}\n\nexport interface SwapParams {\n  payer?: PublicKey;\n  amountIn: TokenAmount;\n  amountOut: TokenAmount;\n  fixedSide: SwapSide;\n  slippage: Percent;\n  config?: {\n    bypassAssociatedCheck?: boolean;\n  };\n}\n\nexport interface CustomSwapParams {\n  routes: RouteInfo[];\n  routeType: RouteType;\n  payer?: PublicKey;\n  amountIn: TokenAmount;\n  amountOut: TokenAmount;\n  fixedSide: SwapSide;\n  config?: {\n    bypassAssociatedCheck?: boolean;\n  };\n}\n\nexport interface AvailableSwapPools {\n  availablePools: LiquidityPoolJsonInfo[];\n  best?: LiquidityPoolJsonInfo;\n  routedPools: LiquidityPoolJsonInfo[];\n}\n\nexport interface SwapExtInfo {\n  extInfo: {\n    amountOut: TokenAmount;\n  };\n}\n"],"mappings":"kWAAA","names":[]}