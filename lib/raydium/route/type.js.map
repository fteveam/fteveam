{"version":3,"sources":["../../../src/raydium/route/type.ts"],"sourcesContent":["import { PublicKey } from \"@solana/web3.js\";\n\nimport { BigNumberish } from \"../../common/bignumber\";\nimport { Fraction, Percent, Price, Token, TokenAmount } from \"../../module\";\nimport { LiquidityPoolInfo, LiquidityPoolKeys, SwapSide } from \"../liquidity/type\";\n\nexport interface RouteComputeAmountOutParams {\n  fromPoolKeys: LiquidityPoolKeys;\n  toPoolKeys: LiquidityPoolKeys;\n  fromPoolInfo: LiquidityPoolInfo;\n  toPoolInfo: LiquidityPoolInfo;\n  amountIn: TokenAmount;\n  outputToken: Token;\n  slippage: Percent;\n}\n\nexport interface RouteComputeAmountOutData {\n  amountOut: TokenAmount;\n  minAmountOut: TokenAmount;\n  executionPrice: Price | null;\n  priceImpact: Fraction;\n  fee: TokenAmount[];\n}\n\nexport interface RouteSwapTransactionParams {\n  fromPoolKeys: LiquidityPoolKeys;\n  toPoolKeys: LiquidityPoolKeys;\n  amountIn: TokenAmount;\n  amountOut: TokenAmount;\n  fixedSide: SwapSide;\n  config?: {\n    bypassAssociatedCheck?: boolean;\n  };\n}\n\nexport interface RouteUserKeys {\n  inTokenAccount: PublicKey;\n  outTokenAccount: PublicKey;\n  middleTokenAccount: PublicKey;\n  middleStatusAccount: PublicKey;\n  owner: PublicKey;\n}\n\nexport interface RouteSwapInFixedInInstructionParams {\n  fromPoolKeys: LiquidityPoolKeys;\n  toPoolKeys: LiquidityPoolKeys;\n  userKeys: Omit<RouteUserKeys, \"outTokenAccount\">;\n  amountIn: BigNumberish;\n  amountOut: BigNumberish;\n}\n\nexport interface RouteSwapInstructionParams {\n  fromPoolKeys: LiquidityPoolKeys;\n  toPoolKeys: LiquidityPoolKeys;\n  userKeys: RouteUserKeys;\n  amountIn: BigNumberish;\n  amountOut: BigNumberish;\n  fixedSide: SwapSide;\n}\n\nexport interface RouteSwapOutFixedInInstructionParams {\n  fromPoolKeys: LiquidityPoolKeys;\n  toPoolKeys: LiquidityPoolKeys;\n  userKeys: Omit<RouteUserKeys, \"inTokenAccount\">;\n}\n"],"mappings":"kWAAA","names":[]}