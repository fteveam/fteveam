var ba=Object.create;var yt=Object.defineProperty,ga=Object.defineProperties,Pa=Object.getOwnPropertyDescriptor,ha=Object.getOwnPropertyDescriptors,wa=Object.getOwnPropertyNames,$t=Object.getOwnPropertySymbols,ka=Object.getPrototypeOf,vo=Object.prototype.hasOwnProperty,Gr=Object.prototype.propertyIsEnumerable;var Ur=(o,e,t)=>e in o?yt(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t,S=(o,e)=>{for(var t in e||(e={}))vo.call(e,t)&&Ur(o,t,e[t]);if($t)for(var t of $t(e))Gr.call(e,t)&&Ur(o,t,e[t]);return o},O=(o,e)=>ga(o,ha(e));var oe=(o,e)=>{var t={};for(var n in o)vo.call(o,n)&&e.indexOf(n)<0&&(t[n]=o[n]);if(o!=null&&$t)for(var n of $t(o))e.indexOf(n)<0&&Gr.call(o,n)&&(t[n]=o[n]);return t};var Ta=(o,e)=>{for(var t in e)yt(o,t,{get:e[t],enumerable:!0})},Jr=(o,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of wa(e))!vo.call(o,r)&&r!==t&&yt(o,r,{get:()=>e[r],enumerable:!(n=Pa(e,r))||n.enumerable});return o};var X=(o,e,t)=>(t=o!=null?ba(ka(o)):{},Jr(e||!o||!o.__esModule?yt(t,"default",{value:o,enumerable:!0}):t,o)),Aa=o=>Jr(yt({},"__esModule",{value:!0}),o);var su={};Ta(su,{ANAMint:()=>Na,Api:()=>It,BNLayout:()=>Ge,BN_100:()=>Co,BN_1000:()=>_a,BN_10000:()=>Ra,BN_FIVE:()=>La,BN_ONE:()=>ye,BN_TEN:()=>ge,BN_THREE:()=>Sa,BN_TWO:()=>xa,BN_ZERO:()=>ae,BitStructure:()=>Qa,Blob:()=>bn,Currency:()=>eo,DataElement:()=>Ji,ETHMint:()=>Zo,FARM_LOCK_MINT:()=>Mn,FARM_LOCK_VAULT:()=>Bn,FARM_PROGRAMID_TO_VERSION:()=>_n,FARM_PROGRAM_ID_V3:()=>xn,FARM_PROGRAM_ID_V3_PUBKEY:()=>Ki,FARM_PROGRAM_ID_V5:()=>Sn,FARM_PROGRAM_ID_V5_PUBKEY:()=>Oi,FARM_PROGRAM_ID_V6:()=>Ln,FARM_PROGRAM_ID_V6_PUBKEY:()=>qi,FARM_VERSION_TO_LEDGER_LAYOUT:()=>On,FARM_VERSION_TO_PROGRAMID:()=>Rn,FARM_VERSION_TO_STATE_LAYOUT:()=>Kn,Fraction:()=>A,LIQUIDITY_FEES_DENOMINATOR:()=>Hn,LIQUIDITY_FEES_NUMERATOR:()=>Qn,LIQUIDITY_PROGRAMID_TO_VERSION:()=>$s,LIQUIDITY_PROGRAM_ID_V4:()=>Ci,LIQUIDITY_PROGRAM_ID_V5:()=>Wi,LIQUIDITY_VERSION_TO_PROGRAM_ID:()=>Xn,LIQUIDITY_VERSION_TO_SERUM_VERSION:()=>er,LIQUIDITY_VERSION_TO_STATE_LAYOUT:()=>tr,Layout:()=>ot,LiquidityPoolStatus:()=>Yn,LogLevel:()=>jr,Logger:()=>jt,MODEL_DATA_PUBKEY:()=>Te,NRVMint:()=>Fa,OptionLayout:()=>uo,Owner:()=>de,PAIMint:()=>$o,Percent:()=>ne,Price:()=>$,RAYMint:()=>kt,ROUTE_PROGRAM_ID_V1:()=>ct,Raydium:()=>Vt,Rounding:()=>Qt,SERUM_PROGRAMID_TO_VERSION:()=>tu,SERUM_PROGRAM_ID_V3:()=>Zi,SERUM_VERSION_TO_PROGRAM_ID:()=>Xi,SOLMint:()=>U,SPL_MINT_LAYOUT:()=>qo,SRMMint:()=>qa,StableLayout:()=>Bt,Structure:()=>co,TOKEN_SOL:()=>Go,TOKEN_WSOL:()=>j,Token:()=>W,TokenAmount:()=>B,TxBuilder:()=>Tt,UInt:()=>ro,USDCMint:()=>jo,USDHMint:()=>zo,USDTMint:()=>Yo,Union:()=>mo,WSOLMint:()=>Le,WideBits:()=>gn,WrappedLayout:()=>we,_100_PERCENT:()=>tn,_LIQUIDITY_PROGRAM_ID_V4:()=>zn,_LIQUIDITY_PROGRAM_ID_V5:()=>Zn,_ROUTE_PROGRAM_ID_V1:()=>aa,_SERUM_PROGRAM_ID_V3:()=>fr,accountMeta:()=>s,addLiquidityLayout:()=>So,array:()=>Ns,associatedLedgerAccountLayout:()=>lo,bits:()=>ao,blob:()=>Ue,bool:()=>Bs,calFarmRewardAmount:()=>ho,calculateFarmPoolAprList:()=>Jn,chunkArray:()=>sn,closeAccountInstruction:()=>Ne,commonSystemAccountMeta:()=>Ke,createAssociatedLedgerAccountInstruction:()=>vn,createLogger:()=>M,createPoolV4Layout:()=>Ao,createWSolAccountInstructions:()=>_e,cstr:()=>Ss,currencyEquals:()=>va,decodeBool:()=>hi,defaultRoutes:()=>Tr,div:()=>to,divCeil:()=>zt,dwLayout:()=>at,encodeBool:()=>wi,endlessRetry:()=>Ya,eq:()=>mi,f32:()=>ks,f32be:()=>Ts,f64:()=>As,f64be:()=>Is,farmAddRewardLayout:()=>bo,farmDespotVersionToInstruction:()=>qn,farmLedgerLayoutV3_1:()=>Cs,farmLedgerLayoutV3_2:()=>Tn,farmLedgerLayoutV5_1:()=>Ws,farmLedgerLayoutV5_2:()=>An,farmLedgerLayoutV6_1:()=>In,farmRewardInfoToConfig:()=>Cn,farmRewardLayout:()=>fo,farmRewardRestartLayout:()=>yo,farmRewardTimeInfoLayout:()=>Mi,farmStateV3Layout:()=>wn,farmStateV5Layout:()=>kn,farmStateV6Layout:()=>it,farmWithdrawVersionToInstruction:()=>Fn,fetchMultipleFarmInfoAndUpdate:()=>Vi,findProgramAddress:()=>he,fixedSwapInLayout:()=>ko,fixedSwapOutLayout:()=>To,forecastTransactionSize:()=>ai,formatLayout:()=>Qi,getAmountSide:()=>Bo,getAmountsSide:()=>wr,getAssociatedAuthority:()=>En,getAssociatedLedgerAccount:()=>Po,getAssociatedLedgerPoolAccount:()=>Rt,getAssociatedMiddleStatusAccount:()=>xr,getAssociatedPoolKeys:()=>Oo,getDate:()=>fn,getDxByDyBaseIn:()=>rr,getDyByDxBaseIn:()=>nr,getFarmLedgerLayout:()=>vi,getFarmProgramId:()=>Vn,getFarmStateLayout:()=>Di,getFarmVersion:()=>Ni,getLiquidityAssociatedAuthority:()=>oa,getLiquidityAssociatedId:()=>Re,getLiquidityInfo:()=>nu,getLiquidityProgramId:()=>ta,getLiquidityStateLayout:()=>ou,getMax:()=>dn,getMultipleAccountsInfo:()=>ui,getMultipleAccountsInfoWithCustomFlags:()=>cn,getPoolEnabledFeatures:()=>Ko,getRecentBlockHash:()=>nn,getSPLTokenInfo:()=>iu,getSerumAssociatedAuthority:()=>gr,getSerumProgramId:()=>br,getSerumVersion:()=>yr,getStablePrice:()=>ir,getTime:()=>li,getTimestamp:()=>Ea,getTokenSide:()=>Pr,getTokensSide:()=>na,greedy:()=>Ha,groupPools:()=>Rr,gt:()=>ci,gte:()=>mn,i128:()=>Rs,i64:()=>_s,includesToken:()=>Qe,initPoolLayout:()=>Io,initTokenAccountInstruction:()=>Ai,intersection:()=>Wa,isDateAfter:()=>We,isDateBefore:()=>et,isMeaningfulNumber:()=>At,isNumber:()=>pn,isValidFarmVersion:()=>go,isValidFixedSide:()=>kr,jsonInfo2PoolKeys:()=>le,judgeFarmType:()=>Un,liquidityStateV4Layout:()=>xo,liquidityStateV5Layout:()=>Ui,lt:()=>$a,lte:()=>ja,mSOLMint:()=>Qo,makeAMMSwapInstruction:()=>ar,makeAddLiquidityInstruction:()=>mr,makeCreateFarmInstruction:()=>Dn,makeCreatePoolInstruction:()=>ur,makeInitPoolInstruction:()=>cr,makeRemoveLiquidityInstruction:()=>lr,makeRouteSwapInstruction:()=>Ir,makeSimulatePoolInfoInstruction:()=>sr,makeSimulationPoolInfo:()=>hr,makeSwapFixedInInstruction:()=>Hi,makeSwapFixedOutInstruction:()=>zi,makeSwapInFixedInInstruction:()=>sa,makeSwapOutFixedInInstruction:()=>ua,makeTransferInstruction:()=>Je,mergeSdkFarmInfo:()=>Wn,modelDataInfoLayout:()=>$i,mul:()=>Wo,ns64:()=>fs,ns64be:()=>ws,nu64:()=>ts,nu64be:()=>ss,offset:()=>so,offsetDateTime:()=>oo,option:()=>Ms,parseBigNumberish:()=>x,parseNumberInfo:()=>ue,parseSimulateLogToJson:()=>an,parseSimulateValue:()=>Pe,parseTokenAccountResp:()=>hn,poolTypeV6:()=>Lt,publicKey:()=>k,quantumSOLHydratedTokenJsonInfo:()=>Xe,realFarmStateV3Layout:()=>Li,realFarmStateV5Layout:()=>_i,realFarmV6Layout:()=>Ri,removeLiquidityLayout:()=>Lo,routeSwapInLayout:()=>Ot,routeSwapOutLayout:()=>qt,rustEnum:()=>Fs,s16:()=>cs,s16be:()=>ys,s24:()=>ms,s24be:()=>bs,s32:()=>ls,s32be:()=>gs,s40:()=>ds,s40be:()=>Ps,s48:()=>ps,s48be:()=>hs,s8:()=>us,seq:()=>H,setLoggerLevel:()=>Ia,shakeFractionDecimal:()=>Hr,simulateMultipleInstruction:()=>rn,sleep:()=>on,sortTokens:()=>Lr,splAccountLayout:()=>ke,splitNumber:()=>ti,stSOLMint:()=>Ho,str:()=>qs,struct:()=>R,sub:()=>ln,swapRouteMiddleMints:()=>Ar,tagged:()=>Os,tenExponential:()=>Ht,toBN:()=>Se,toFraction:()=>Be,toFractionWithDecimals:()=>Ja,toPercent:()=>bt,toTokenPrice:()=>ze,toTotalPrice:()=>Ze,toUsdCurrency:()=>Vo,tryParsePublicKey:()=>Jo,u128:()=>Q,u16:()=>za,u16be:()=>os,u24:()=>Za,u24be:()=>ns,u32:()=>qe,u32be:()=>rs,u40:()=>Xa,u40be:()=>is,u48:()=>es,u48be:()=>as,u64:()=>l,u8:()=>D,union:()=>vs,unionArr:()=>au,unionLayoutDiscriminator:()=>xs,uniq:()=>Ga,updateFarmPoolInfo:()=>Ei,utf8:()=>Ls,validateAndParsePublicKey:()=>E,validateFarmRewards:()=>Nn,vec:()=>Ks,vecU8:()=>ki,whetherIsStakeFarmPool:()=>Gn,withdrawRewardLayout:()=>po,xor:()=>Ua,zeros:()=>Ds});module.exports=Aa(su);var di=X(require("axios"));var Ce=require("lodash"),Eo=X(require("dayjs")),$r=X(require("dayjs/plugin/utc"));Eo.default.extend($r.default);var jr=(r=>(r[r.Error=0]="Error",r[r.Warning=1]="Warning",r[r.Info=2]="Info",r[r.Debug=3]="Debug",r))(jr||{}),jt=class{constructor(e){this.logLevel=e.logLevel!==void 0?e.logLevel:3,this.name=e.name}set level(e){this.logLevel=e}get time(){return(0,Eo.default)().utc().format("YYYY/MM/DD HH:mm:ss UTC")}get moduleName(){return this.name}isLogLevel(e){return e<=this.logLevel}error(...e){return this.isLogLevel(0)?(console.error(this.time,this.name,"sdk logger error",...e),this):this}logWithError(...e){let t=e.map(n=>typeof n=="object"?JSON.stringify(n):n).join(", ");throw new Error(t)}warning(...e){return this.isLogLevel(1)?(console.warn(this.time,this.name,"sdk logger warning",...e),this):this}info(...e){return this.isLogLevel(2)?(console.info(this.time,this.name,"sdk logger info",...e),this):this}debug(...e){return this.isLogLevel(3)?(console.debug(this.time,this.name,"sdk logger debug",...e),this):this}},Do={},Yr={};function M(o){let e=(0,Ce.get)(Do,o);if(!e){let t=(0,Ce.get)(Yr,o);e=new jt({name:o,logLevel:t}),(0,Ce.set)(Do,o,e)}return e}function Ia(o,e){(0,Ce.set)(Yr,o,e);let t=(0,Ce.get)(Do,o);t&&(t.level=e)}var ri=require("@solana/web3.js"),ii=X(require("bn.js"));var ei=X(require("big.js")),wt=X(require("bn.js"));var C=X(require("bn.js"));var Yt=M("Raydium_bignumber"),Qt=(n=>(n[n.ROUND_DOWN=0]="ROUND_DOWN",n[n.ROUND_HALF_UP=1]="ROUND_HALF_UP",n[n.ROUND_UP=2]="ROUND_UP",n))(Qt||{}),ae=new C.default(0),ye=new C.default(1),xa=new C.default(2),Sa=new C.default(3),La=new C.default(5),ge=new C.default(10),Co=new C.default(100),_a=new C.default(1e3),Ra=new C.default(1e4),Qr=9007199254740991;function x(o){if(o instanceof C.default)return o;if(typeof o=="string"){if(o.match(/^-?[0-9]+$/))return new C.default(o);Yt.logWithError(`invalid BigNumberish string: ${o}`)}return typeof o=="number"?(o%1&&Yt.logWithError(`BigNumberish number underflow: ${o}`),(o>=Qr||o<=-Qr)&&Yt.logWithError(`BigNumberish number overflow: ${o}`),new C.default(String(o))):typeof o=="bigint"?new C.default(o.toString()):(Yt.logWithError(`invalid BigNumberish value: ${o}`),new C.default(0))}function Ht(o){return ge.pow(x(o))}function ue(o){var u;if(o===void 0)return{denominator:"1",numerator:"0"};if(o instanceof C.default)return{numerator:o.toString(),denominator:"1"};if(o instanceof A)return{denominator:o.denominator.toString(),numerator:o.numerator.toString()};let e=String(o),[,t="",n="",r=""]=(u=e.replace(",","").match(/(-?)(\d*)\.?(\d*)/))!=null?u:[],i="1"+"0".repeat(r.length),a=t+(n==="0"?"":n)+r||"0";return{denominator:i,numerator:a,sign:t,int:n,dec:r}}function zt(o,e){let t=o.divmod(e);return t.mod.isZero()?t.div:t.div.negative!==0?t.div.isubn(1):t.div.iaddn(1)}function Hr(o){var n;let[,e="",t=""]=(n=o.toFixed(2).match(/(-?)(\d*)\.?(\d*)/))!=null?n:[];return`${e}${t}`}function Se(o,e=0){return o instanceof C.default?o:new C.default(Hr(Be(o).mul(ge.pow(new C.default(String(e))))))}function Be(o){if(o instanceof ne)return new A(o.numerator,o.denominator);if(o instanceof $)return o.adjusted;if(o instanceof B)try{return Be(o.toExact())}catch{return new A(ae)}if(o instanceof A)return o;let e=String(o),t=ue(e);return new A(t.numerator,t.denominator)}function bt(o,e){let{numerator:t,denominator:n}=ue(o);return new ne(new C.default(t),new C.default(n).mul(e!=null&&e.alreadyDecimaled?new C.default(100):new C.default(1)))}function ze(o){let{token:e,numberPrice:t,decimalDone:n}=o,r=new W({mint:"",decimals:6,symbol:"usd",name:"usd",skipMint:!0}),{numerator:i,denominator:a}=ue(t),u=n?new C.default(i).mul(ge.pow(new C.default(e.decimals))):i,c=new C.default(a).mul(ge.pow(new C.default(r.decimals)));return new $({baseToken:r,denominator:c.toString(),quoteToken:new W(O(S({},e),{skipMint:!0,mint:""})),numerator:u.toString()})}function Wo(o,e){if(o==null||e==null)return;let t=Be(o),n=Be(e);return t.mul(n)}function Vo(o){let e=new W({mint:"",decimals:6,symbol:"usd",name:"usd",skipMint:!0}),t=Se(Wo(o,10**e.decimals));return new B(e,t)}function Ze(o,e){return Vo(!e||!o?0:Wo(o,e))}var zr=X(require("toformat")),Ma=zr.default,gt=Ma;var Pt=X(require("big.js")),Zr=X(require("decimal.js-light"));var Zt=M("module/fraction"),Uo=gt(Pt.default),ht=gt(Zr.default),Ba={[0]:ht.ROUND_DOWN,[1]:ht.ROUND_HALF_UP,[2]:ht.ROUND_UP},Ka={[0]:Pt.default.roundDown,[1]:Pt.default.roundHalfUp,[2]:Pt.default.roundUp},A=class{constructor(e,t=ye){this.numerator=x(e),this.denominator=x(t)}get quotient(){return this.numerator.div(this.denominator)}invert(){return new A(this.denominator,this.numerator)}add(e){let t=e instanceof A?e:new A(x(e));return this.denominator.eq(t.denominator)?new A(this.numerator.add(t.numerator),this.denominator):new A(this.numerator.mul(t.denominator).add(t.numerator.mul(this.denominator)),this.denominator.mul(t.denominator))}sub(e){let t=e instanceof A?e:new A(x(e));return this.denominator.eq(t.denominator)?new A(this.numerator.sub(t.numerator),this.denominator):new A(this.numerator.mul(t.denominator).sub(t.numerator.mul(this.denominator)),this.denominator.mul(t.denominator))}mul(e){let t=e instanceof A?e:new A(x(e));return new A(this.numerator.mul(t.numerator),this.denominator.mul(t.denominator))}div(e){let t=e instanceof A?e:new A(x(e));return new A(this.numerator.mul(t.denominator),this.denominator.mul(t.numerator))}toSignificant(e,t={groupSeparator:""},n=1){Number.isInteger(e)||Zt.logWithError(`${e} is not an integer.`),e<=0&&Zt.logWithError(`${e} is not positive.`),ht.set({precision:e+1,rounding:Ba[n]});let r=new ht(this.numerator.toString()).div(this.denominator.toString()).toSignificantDigits(e);return r.toFormat(r.decimalPlaces(),t)}toFixed(e,t={groupSeparator:""},n=1){return Number.isInteger(e)||Zt.logWithError(`${e} is not an integer.`),e<0&&Zt.logWithError(`${e} is negative.`),Uo.DP=e,Uo.RM=Ka[n]||1,new Uo(this.numerator.toString()).div(this.denominator.toString()).toFormat(e,t)}isZero(){return this.numerator.isZero()}};var Oa=M("Raydium_amount"),Xr=gt(ei.default);function ti(o,e){let t="0",n="0";if(o.includes(".")){let r=o.split(".");r.length===2?([t,n]=r,n=n.padEnd(e,"0")):Oa.logWithError(`invalid number string, num: ${o}`)}else t=o;return[t,n.slice(0,e)||n]}var B=class extends A{constructor(t,n,r=!0,i){let a=new wt.default(0),u=ge.pow(new wt.default(t.decimals));if(r)a=x(n);else{let c=new wt.default(0),m=new wt.default(0);if(typeof n=="string"||typeof n=="number"||typeof n=="bigint"){let[d,p]=ti(n.toString(),t.decimals);c=x(d),m=x(p)}c=c.mul(u),a=c.add(m)}super(a,u);this.logger=M(i||"Amount"),this.token=t}get raw(){return this.numerator}isZero(){return this.raw.isZero()}gt(t){return this.token.equals(t.token)||this.logger.logWithError("gt token not equals"),this.raw.gt(t.raw)}lt(t){return this.token.equals(t.token)||this.logger.logWithError("lt token not equals"),this.raw.lt(t.raw)}add(t){return this.token.equals(t.token)||this.logger.logWithError("add token not equals"),new B(this.token,this.raw.add(t.raw))}subtract(t){return this.token.equals(t.token)||this.logger.logWithError("sub token not equals"),new B(this.token,this.raw.sub(t.raw))}toSignificant(t=this.token.decimals,n,r=0){return super.toSignificant(t,n,r)}toFixed(t=this.token.decimals,n,r=0){return t>this.token.decimals&&this.logger.logWithError("decimals overflow"),super.toFixed(t,n,r)}toExact(t={groupSeparator:""}){return Xr.DP=this.token.decimals,new Xr(this.numerator.toString()).div(this.denominator.toString()).toFormat(t)}};var oi=require("@solana/web3.js"),Go={symbol:"SOL",name:"Solana",decimals:9},j={symbol:"WSOL",name:"Wrapped SOL",mint:"So11111111111111111111111111111111111111112",decimals:9,extensions:{coingeckoId:"solana"}},Xe={isQuantumSOL:!0,isLp:!1,official:!0,mint:new oi.PublicKey(j.mint),decimals:9,symbol:"SOL",id:"sol",name:"solana",icon:"https://img.raydium.io/icon/So11111111111111111111111111111111111111112.png",extensions:{coingeckoId:"solana"}};var Xt=require("@solana/web3.js");var ni=require("@solana/spl-token"),Y=require("@solana/web3.js");function s({pubkey:o,isSigner:e=!1,isWritable:t=!0}){return{pubkey:o,isWritable:t,isSigner:e}}var Ke=[s({pubkey:ni.TOKEN_PROGRAM_ID,isWritable:!1}),s({pubkey:Y.SystemProgram.programId,isWritable:!1}),s({pubkey:Y.SYSVAR_RENT_PUBKEY,isWritable:!1})];function E({publicKey:o,transformSol:e}){if(o instanceof Y.PublicKey)return e&&o.equals(U)?Le:o;if(e&&o===U.toBase58())return Le;if(typeof o=="string")try{return new Y.PublicKey(o)}catch{throw new Error("invalid public key")}throw new Error("invalid public key")}function Jo(o){try{return new Y.PublicKey(o)}catch{return o}}var kt=new Y.PublicKey("4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R"),$o=new Y.PublicKey("Ea5SjE2Y6yvCeW5dYTn7PYMuW5ikXkvbGdcmSnXeaLjS"),qa=new Y.PublicKey("SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt"),jo=new Y.PublicKey("EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"),Yo=new Y.PublicKey("Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB"),Qo=new Y.PublicKey("mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So"),Ho=new Y.PublicKey("7dHbWXmci3dT8UFYWYZweBLXgycu7Y3iL6trKn1Y7ARj"),zo=new Y.PublicKey("USDH1SM1ojwWUga67PGrgFWUHibbjqMvuMaDkRJTgkX"),Fa=new Y.PublicKey("NRVwhjBQiUPYtfDT5zRBVJajzFQHaBUNtC7SNVvqRFa"),Na=new Y.PublicKey("ANAxByE6G2WjFp7A4NqtWYXb3mgruyzZYg3spfxe6Lbo"),Zo=new Y.PublicKey("7vfCXTUXx5WJV5JADk17DUJ4ksgau7utNKj4b963voxs"),Le=new Y.PublicKey("So11111111111111111111111111111111111111112"),U=Y.PublicKey.default;var Xo=class{constructor({mint:e,decimals:t,symbol:n="UNKNOWN",name:r="UNKNOWN",skipMint:i=!1}){if(e===U.toBase58()||e instanceof Xt.PublicKey&&U.equals(e)){this.decimals=j.decimals,this.symbol=j.symbol,this.name=j.name,this.mint=new Xt.PublicKey(j.mint);return}this.decimals=t,this.symbol=n,this.name=r,this.mint=i?Xt.PublicKey.default:E({publicKey:e})}equals(e){return this===e?!0:this.mint.equals(e.mint)}},W=Xo;W.WSOL=new Xo(j);var en=class{constructor({decimals:e,symbol:t="UNKNOWN",name:n="UNKNOWN"}){this.decimals=e,this.symbol=t,this.name=n}equals(e){return this===e}},eo=en;eo.SOL=new en(Go);function va(o,e){return o instanceof W&&e instanceof W?o.equals(e):o instanceof W||e instanceof W?!1:o===e}var tn=new A(Co),ne=class extends A{toSignificant(e=5,t,n){return this.mul(tn).toSignificant(e,t,n)}toFixed(e=2,t,n){return this.mul(tn).toFixed(e,t,n)}};var Da=M("Raydium_price"),$=class extends A{constructor(t){let{baseToken:n,quoteToken:r,numerator:i,denominator:a}=t;super(i,a);this.baseToken=n,this.quoteToken=r,this.scalar=new A(Ht(n.decimals),Ht(r.decimals))}get raw(){return new A(this.numerator,this.denominator)}get adjusted(){return super.mul(this.scalar)}invert(){return new $({baseToken:this.quoteToken,quoteToken:this.baseToken,denominator:this.numerator,numerator:this.denominator})}mul(t){this.quoteToken!==t.baseToken&&Da.logWithError("mul token not equals");let n=super.mul(t);return new $({baseToken:this.baseToken,quoteToken:t.quoteToken,denominator:n.denominator,numerator:n.numerator})}toSignificant(t=this.quoteToken.decimals,n,r){return this.adjusted.toSignificant(t,n,r)}toFixed(t=this.quoteToken.decimals,n,r){return this.adjusted.toFixed(t,n,r)}};async function on(o){new Promise(e=>setTimeout(e,o))}function Ea(){return new Date().getTime()}var Va=[W,B,ri.PublicKey,A,ii.default,$,ne];function Ca(o){return typeof o=="object"&&o!==null&&!Va.some(e=>typeof e=="object"&&o instanceof e)}function le(o){return typeof o=="string"?Jo(o):Array.isArray(o)?o.map(e=>le(e)):Ca(o)?Object.fromEntries(Object.entries(o).map(([e,t])=>[e,le(t)])):o}var me=require("@solana/web3.js");var Oe=M("Raydium_txTool"),Tt=class{constructor(e){this.instructions=[];this.endInstructions=[];this.signers=[];this.connection=e.connection,this.feePayer=e.feePayer,this.signAllTransactions=e.signAllTransactions,this.owner=e.owner}get AllTxData(){return{instructions:this.instructions,endInstructions:this.endInstructions,signers:this.signers}}get allInstructions(){return[...this.instructions,...this.endInstructions]}addInstruction({instructions:e=[],endInstructions:t=[],signers:n=[]}){return this.instructions.push(...e),this.endInstructions.push(...t),this.signers.push(...n),this}build(e){let t=new me.Transaction;return this.allInstructions.length&&t.add(...this.allInstructions),t.feePayer=this.feePayer,{transaction:t,signers:this.signers,execute:async()=>{var r;let n=await nn(this.connection);if(t.recentBlockhash=n,(r=this.owner)!=null&&r.isKeyPair)return(0,me.sendAndConfirmTransaction)(this.connection,t,this.signers);if(this.signAllTransactions){this.signers.length&&t.partialSign(...this.signers);let i=await this.signAllTransactions([t]);return await this.connection.sendRawTransaction(i[0].serialize(),{skipPreflight:!0})}throw new Error("please connect wallet first")},extInfo:e||{}}}buildMultiTx(e){let{extraPreBuildData:t=[],extInfo:n}=e,{transaction:r}=this.build(n),i=t.filter(c=>c.transaction.instructions.length>0),a=[...i.map(c=>c.transaction),r],u=[...i.map(c=>c.signers),this.signers];return{transactions:a,signers:u,execute:async()=>{var m;let c=await nn(this.connection);if((m=this.owner)!=null&&m.isKeyPair)return await Promise.all(a.map(async(d,p)=>(d.recentBlockhash=c,await(0,me.sendAndConfirmTransaction)(this.connection,d,u[p]))));if(this.signAllTransactions){let d=a.map((f,b)=>(f.recentBlockhash=c,u[b].length&&f.partialSign(...u[b]),f)),p=await this.signAllTransactions(d),y=[];for(let f=0;f<p.length;f+=1){let b=await this.connection.sendRawTransaction(p[f].serialize(),{skipPreflight:!0});y.push(b)}return y}throw new Error("please connect wallet first")},extInfo:n||{}}}};async function nn(o){var e,t;try{return((t=await((e=o.getLatestBlockhash)==null?void 0:e.call(o)))==null?void 0:t.blockhash)||(await o.getRecentBlockhash()).blockhash}catch{return(await o.getRecentBlockhash()).blockhash}}function ai(o,e){o.length<1&&Oe.logWithError(`no instructions provided: ${o.toString()}`),e.length<1&&Oe.logWithError(`no signers provided:, ${e.toString()}`);let t=new me.Transaction;t.recentBlockhash="11111111111111111111111111111111",t.feePayer=e[0],t.add(...o);let n=t.compileMessage().serialize();return e.length+e.length*64+n.length}async function rn(o,e,t){let n=new me.PublicKey("RaydiumSimuLateTransaction11111111111111111"),r=[],i=new me.Transaction;i.feePayer=n;for(let c of e)ai([...i.instructions,c],[n])>me.PACKET_DATA_SIZE&&(r.push(i),i=new me.Transaction,i.feePayer=n),i.add(c);i.instructions.length>0&&r.push(i);let a=[];try{a=await Promise.all(r.map(c=>o.simulateTransaction(c)))}catch(c){c instanceof Error&&Oe.logWithError(`failed to simulate for instructions, RPC_ERROR, ${c.message}`)}let u=[];for(let c of a){let{value:m}=c;if(Oe.debug(`simulate result: ${JSON.stringify(c)}`),m.logs){let d=m.logs.filter(p=>p&&p.includes(t));Oe.debug(`filteredLog: ${JSON.stringify(u)}`),d.length||Oe.logWithError(` "simulate log not match keyword, keyword: ${t}`),u.push(...d)}}return u}function an(o,e){let t=o.match(/{["\w:,]+}/g);return!t||t.length!==1?Oe.logWithError(`simulate log fail to match json, keyword: ${e}`):t[0]}function Pe(o,e){let n=new RegExp(`"${e}":(\\d+)`,"g").exec(o);return!n||n.length!==2?Oe.logWithError(`simulate log fail to match key", key: ${e}`):n[1]}async function he(o,e){let[t,n]=await me.PublicKey.findProgramAddress(o,e);return{publicKey:t,nonce:n}}var de=class{constructor(e){this._owner=e}get publicKey(){return de.isKeyPair(this._owner)?this._owner.publicKey:this._owner}get signer(){return de.isKeyPair(this._owner)?this._owner:void 0}get isKeyPair(){return de.isKeyPair(this._owner)}get isPublicKey(){return de.isPublicKey(this._owner)}static isKeyPair(e){return e.secretKey!==void 0}static isPublicKey(e){return!de.isKeyPair(e)}};function sn(o,e=1,t=[]){let n=[...o];if(e<=0)return t;for(;n.length;)t.push(n.splice(0,e));return t}function Wa(o,...e){return o.filter(t=>e.every(n=>n.includes(t)))}function Ua(o,...e){return o.filter(t=>e.every(n=>!n.includes(t)))}function Ga(o){return[...new Set(o)]}var si=require("@solana/web3.js");var un=M("Raydium_accountInfo_util");async function ui(o,e,t){let{batchRequest:n,commitment:r}=S({batchRequest:!1},t),i=sn(e,100),a=new Array(i.length).fill([]);if(n){let u=i.map(m=>{let d=o._buildArgs([m.map(p=>p.toBase58())],r,"base64");return{methodName:"getMultipleAccounts",args:d}});a=(await o._rpcBatchRequest(u)).map(m=>(m.error&&un.logWithError(`failed to get info for multiple accounts, RPC_ERROR, ${m.error.message}`),m.result.value.map(d=>{if(d){let{data:p,executable:y,lamports:f,owner:b,rentEpoch:w}=d;return p.length!==2&&p[1]!=="base64"&&un.logWithError("info must be base64 encoded, RPC_ERROR"),{data:Buffer.from(p[0],"base64"),executable:y,lamports:f,owner:new si.PublicKey(b),rentEpoch:w}}return null})))}else try{a=await Promise.all(i.map(u=>o.getMultipleAccountsInfo(u,r)))}catch(u){u instanceof Error&&un.logWithError(`failed to get info for multiple accounts, RPC_ERROR, ${u.message}`)}return a.flat()}async function cn(o,e,t){let n=await ui(o,e.map(r=>r.pubkey),t);return e.map((r,i)=>O(S({},r),{accountInfo:n[i]}))}function re(o){if(o instanceof ne)return new A(o.numerator,o.denominator);if(o instanceof $)return o.adjusted;if(o instanceof B)try{return re(o.toExact())}catch{return new A(ae)}if(o instanceof A)return o;let e=String(o),t=ue(e);return new A(t.numerator,t.denominator)}function Ja(o){var n;if(o instanceof ne)return{fr:new A(o.numerator,o.denominator)};if(o instanceof $)return{fr:o.adjusted};if(o instanceof B)return{fr:re(o.toExact()),decimals:o.token.decimals};if(o instanceof A)return{fr:o};let e=String(o),t=ue(e);return{fr:new A(t.numerator,t.denominator),decimals:(n=t.dec)==null?void 0:n.length}}function $a(o,e){if(o==null||e==null)return!1;let t=re(o),n=re(e);return t.sub(n).numerator,t.sub(n).numerator.lt(ae)}function ci(o,e){if(o==null||e==null)return!1;let t=re(o),n=re(e);return t.sub(n).numerator.gt(ae)}function ja(o,e){if(o==null||e==null)return!1;let t=re(o),n=re(e);return t.sub(n).numerator.lte(ae)}function mn(o,e){if(o==null||e==null)return!1;let t=re(o),n=re(e);return t.sub(n).numerator.gte(ae)}function mi(o,e){if(o==null||e==null)return!1;let t=re(o),n=re(e);return t.sub(n).numerator.eq(ae)}function to(o,e){if(o==null||e==null)return;let t=re(o),n=re(e);try{return t.div(n)}catch{return t}}function ln(o,e){if(o==null||e==null)return;let t=re(o),n=re(e);return t.sub(n)}function At(o){return o==null?!1:!mi(o,0)}function dn(o,e){return ci(e,o)?e:o}var pn=o=>typeof o=="number",fn=o=>o?new Date(o):new Date,li=o=>fn(o).getTime();function et(o,e,t){let n=pn(e)?e*((t==null?void 0:t.unit)==="s"?1e3:1):e;return new Date(o).getTime()<=n}function We(o,e,t){let n=pn(e)?e*((t==null?void 0:t.unit)==="s"?1e3:1):e;return new Date(o).getTime()>n}function oo(o,e){let n=li(o)+(e.days?e.days*24*60*60*1e3:0)+(e.hours?e.hours*60*60*1e3:0)+(e.minutes?e.minutes*60*1e3:0)+(e.seconds?e.seconds*1e3:0)+(e.milliseconds?e.milliseconds:0);return fn(n)}var tt=M("Raydium_Api");async function Ya(o,e,t=1e3){let n;for(;n==null;)try{tt.debug(`Request ${o} through endlessRetry`),n=await e()}catch(r){tt.error(`Request ${o} failed, retry after ${t} ms`,r),await on(t)}return n}var It=class{constructor({cluster:e,timeout:t}){this.cluster=e,this.api=di.default.create({baseURL:"https://api.raydium.io/v2",timeout:t}),this.api.interceptors.request.use(n=>{let{method:r,baseURL:i,url:a}=n;return tt.debug(`${r==null?void 0:r.toUpperCase()} ${i}${a}`),n},n=>(tt.error("Request failed"),Promise.reject(n))),this.api.interceptors.response.use(n=>{let{config:r,data:i,status:a}=n,{method:u,baseURL:c,url:m}=r;return tt.debug(`${u==null?void 0:u.toUpperCase()} ${c}${m}  ${a}`),i},n=>{let{config:r,response:i={}}=n,{status:a}=i,{method:u,baseURL:c,url:m}=r;return tt.error(`${u.toUpperCase()} ${c}${m} ${a||n.message}`),Promise.reject(n)})}async getTokens(){return this.api.get("/sdk/token/raydium.mainnet.json")}async getLiquidityPools(){return this.api.get(`/sdk/liquidity/${this.cluster}.json`)}async getPairsInfo(){return this.api.get("https://api.raydium.io/v2/main/pairs")}async getFarmPools(){return this.api.get(`/sdk/farm-v2/${this.cluster}.json`)}async getCoingeckoPrice(e){return this.api.get(`https://api.coingecko.com/api/v3/simple/price?ids=${e.join(",")}&vs_currencies=usd`)}async getRaydiumTokenPrice(){return this.api.get("https://api.raydium.io/v2/main/price")}async getBlockSlotCountForSecond(e){if(!e)return 2;let n=(await this.api.post(e,{id:"getRecentPerformanceSamples",jsonrpc:"2.0",method:"getRecentPerformanceSamples",params:[4]})).result.map(r=>r.numSlots);return n.reduce((r,i)=>r+i,0)/n.length/60}};var ma=require("lodash");var no="please provide owner in load() initialization or you can set by calling raydium.setOwner(owner)",pi="please provide connection in load() initialization or set it by raydium.setConnection(connection)";var ve=require("@solana/spl-token"),Si=require("@solana/web3.js");var yn=(...o)=>o.map(e=>{try{return typeof e=="object"?JSON.stringify(e):e}catch{return e}}).join(", "),se=class{constructor({scope:e,moduleName:t}){this.disabled=!1;this.scope=e,this.logger=M(t)}createTxBuilder(e){return this.scope.checkOwner(),new Tt({connection:this.scope.connection,feePayer:e||this.scope.ownerPubKey,owner:this.scope.owner,signAllTransactions:this.scope.signAllTransactions})}logDebug(...e){this.logger.debug(yn(e))}logInfo(...e){this.logger.info(yn(e))}logAndCreateError(...e){let t=yn(e);throw new Error(t)}checkDisabled(){(this.disabled||!this.scope)&&this.logAndCreateError("module not working")}};var Fe=require("@solana/spl-token"),rt=require("@solana/web3.js"),Ti=X(require("bn.js"));var Pi=require("@solana/web3.js"),nt=X(require("bn.js"));var g=require("@solana/buffer-layout"),ot=g.Layout,fi=g.Structure,yi=g.Union,Qa=g.BitStructure,ro=g.UInt,bn=g.Blob,Ha=g.greedy,io=g.u8,za=g.u16,Za=g.u24,xt=g.u32,Xa=g.u40,es=g.u48,ts=g.nu64,os=g.u16be,ns=g.u24be,rs=g.u32be,is=g.u40be,as=g.u48be,ss=g.nu64be,us=g.s8,cs=g.s16,ms=g.s24,ls=g.s32,ds=g.s40,ps=g.s48,fs=g.ns64,ys=g.s16be,bs=g.s24be,gs=g.s32be,Ps=g.s40be,hs=g.s48be,ws=g.ns64be,ks=g.f32,Ts=g.f32be,As=g.f64,Is=g.f64be;var bi=g.seq,gi=g.union,xs=g.unionLayoutDiscriminator,Ue=g.blob,Ss=g.cstr,Ls=g.utf8,ao=g.bits,so=g.offset;var Ge=class extends ot{constructor(t,n,r){super(t,r);this.blob=Ue(t),this.signed=n}decode(t,n=0){let r=new nt.default(this.blob.decode(t,n),10,"le");return this.signed?r.fromTwos(this.span*8).clone():r}encode(t,n,r=0){return typeof t=="number"&&(t=new nt.default(t)),this.signed&&(t=t.toTwos(this.span*8)),this.blob.encode(t.toArrayLike(Buffer,"le",this.span),n,r)}},gn=class extends ot{constructor(t){super(8,t);this._lower=ao(xt(),!1),this._upper=ao(xt(),!1)}addBoolean(t){this._lower.fields.length<32?this._lower.addBoolean(t):this._upper.addBoolean(t)}decode(t,n=0){let r=this._lower.decode(t,n),i=this._upper.decode(t,n+this._lower.span);return S(S({},r),i)}encode(t,n,r=0){return this._lower.encode(t,n,r)+this._upper.encode(t,n,r+this._lower.span)}};function D(o){return new ro(1,o)}function qe(o){return new ro(4,o)}function l(o){return new Ge(8,!1,o)}function Q(o){return new Ge(16,!1,o)}function _s(o){return new Ge(8,!0,o)}function Rs(o){return new Ge(16,!0,o)}var we=class extends ot{constructor(t,n,r,i){super(t.span,i);this.layout=t,this.decoder=n,this.encoder=r}decode(t,n){return this.decoder(this.layout.decode(t,n))}encode(t,n,r){return this.layout.encode(this.encoder(t),n,r)}getSpan(t,n){return this.layout.getSpan(t,n)}};function k(o){return new we(Ue(32),e=>new Pi.PublicKey(e),e=>e.toBuffer(),o)}var uo=class extends ot{constructor(t,n){super(-1,n);this.layout=t,this.discriminator=io()}encode(t,n,r=0){return t==null?this.discriminator.encode(0,n,r):(this.discriminator.encode(1,n,r),this.layout.encode(t,n,r+1)+1)}decode(t,n=0){let r=this.discriminator.decode(t,n);if(r===0)return null;if(r===1)return this.layout.decode(t,n+1);throw new Error("Invalid option "+this.property)}getSpan(t,n=0){let r=this.discriminator.decode(t,n);if(r===0)return 1;if(r===1)return this.layout.getSpan(t,n+1)+1;throw new Error("Invalid option "+this.property)}};function Ms(o,e){return new uo(o,e)}function Bs(o){return new we(io(),hi,wi,o)}function hi(o){if(o===0)return!1;if(o===1)return!0;throw new Error("Invalid bool: "+o)}function wi(o){return o?1:0}function Ks(o,e){let t=xt("length"),n=R([t,H(o,so(t,-t.span),"values")]);return new we(n,({values:r})=>r,r=>({values:r}),e)}function Os(o,e,t){let n=R([l("tag"),e.replicate("data")]);function r({tag:i,data:a}){if(!i.eq(o))throw new Error("Invalid tag, expected: "+o.toString("hex")+", got: "+i.toString("hex"));return a}return new we(n,r,i=>({tag:o,data:i}),t)}function ki(o){let e=xt("length"),t=R([e,Ue(so(e,-e.span),"data")]);return new we(t,({data:n})=>n,n=>({data:n}),o)}function qs(o){return new we(ki(),e=>e.toString("utf-8"),e=>Buffer.from(e,"utf-8"),o)}function Fs(o,e){let t=gi(io(),e);return o.forEach((n,r)=>t.addVariant(r,n,n.property)),t}function Ns(o,e,t){let n=R([H(o,e,"values")]);return new we(n,({values:r})=>r,r=>({values:r}),t)}var co=class extends fi{decode(e,t){return super.decode(e,t)}};function R(o,e,t){return new co(o,e,t)}var mo=class extends yi{encodeInstruction(e){let t=Math.max(...Object.values(this.registry).map(r=>r.span)),n=Buffer.alloc(t);return n.slice(0,this.encode(e,n))}decodeInstruction(e){return this.decode(e)}};function vs(o,e,t){return new mo(o,e,t)}var Pn=class extends bn{decode(e,t){let n=super.decode(e,t);if(!n.every(r=>r===0))throw new Error("nonzero padding bytes");return n}};function Ds(o){return new Pn(o)}function H(o,e,t){let n,r=typeof e=="number"?e:(0,nt.isBN)(e)?e.toNumber():new Proxy(e,{get(i,a){if(!n){let u=Reflect.get(i,"count");n=(0,nt.isBN)(u)?u.toNumber():u,Reflect.set(i,"count",n)}return Reflect.get(i,a)},set(i,a,u){return a==="count"&&(n=u),Reflect.set(i,a,u)}});return bi(o,r,t)}var ke=R([k("mint"),k("owner"),l("amount"),qe("delegateOption"),k("delegate"),D("state"),qe("isNativeOption"),l("isNative"),l("delegatedAmount"),qe("closeAuthorityOption"),k("closeAuthority")]);function Ai(o){let{mint:e,tokenAccount:t,owner:n}=o;return(0,Fe.createInitializeAccountInstruction)(t,e,n)}function Ne(o){let{tokenAccount:e,payer:t,multiSigners:n=[],owner:r}=o;return(0,Fe.createCloseAccountInstruction)(e,t,r,n)}async function _e(o){let{connection:e,amount:t,commitment:n,payer:r,owner:i,skipCloseAccount:a}=o,u=await e.getMinimumBalanceForRentExemption(ke.span,n),c=x(t).add(new Ti.default(u)),m=rt.Keypair.generate();return{signers:[m],instructions:[rt.SystemProgram.createAccount({fromPubkey:r,newAccountPubkey:m.publicKey,lamports:c.toNumber(),space:ke.span,programId:Fe.TOKEN_PROGRAM_ID}),Ai({mint:new rt.PublicKey(j.mint),tokenAccount:m.publicKey,owner:i})],endInstructions:a?[]:[Ne({tokenAccount:m.publicKey,payer:r,owner:i})]}}function Je({source:o,destination:e,owner:t,amount:n,multiSigners:r=[]}){return(0,Fe.createTransferInstruction)(o,e,t,x(n).toNumber(),r)}var Ii=require("@solana/web3.js"),xi=X(require("bn.js"));var Es=M("Raydium_Util");function hn({solAccountResp:o,tokenAccountResp:e}){let t=[],n=[];for(let{pubkey:r,account:i}of e.value){if(i.data.length!==ke.span)throw Es.error("invalid token account layout length","publicKey",r.toBase58()),new Error("invalid token account layout length");let a=ke.decode(i.data),{mint:u,amount:c}=a;t.push({publicKey:r,mint:u,amount:c,isNative:!1}),n.push({pubkey:r,accountInfo:a})}return o&&t.push({mint:Ii.PublicKey.default,amount:new xi.default(o.lamports),isNative:!0}),{tokenAccounts:t,tokenAccountRawInfos:n}}var St=class extends se{constructor(t){super(t);this._tokenAccounts=[];this._tokenAccountRawInfos=[];this._ataCache=new Map;this._accountListener=[];this._clientOwnedToken=!1;let{tokenAccounts:n,tokenAccountRawInfos:r}=t;this._tokenAccounts=n||[],this._tokenAccountRawInfos=r||[],this._clientOwnedToken=!!(n||r)}get tokenAccounts(){return this._tokenAccounts}get tokenAccountRawInfos(){return this._tokenAccountRawInfos}updateTokenAccount({tokenAccounts:t,tokenAccountRawInfos:n}){return t&&(this._tokenAccounts=t),n&&(this._tokenAccountRawInfos=n),this._accountChangeListenerId&&this.scope.connection.removeAccountChangeListener(this._accountChangeListenerId),this._accountChangeListenerId=void 0,this._clientOwnedToken=!0,this}addAccountChangeListener(t){return this._accountListener.push(t),this}removeAccountChangeListener(t){return this._accountListener=this._accountListener.filter(n=>n!==t),this}async getAssociatedTokenAccount(t){this.scope.checkOwner();let n=`${this.scope.ownerPubKey.toBase58()}_${t.toBase58()}`;if(this._ataCache.has(n))return this._ataCache.get(n);let r=await(0,ve.getAssociatedTokenAddress)(t,this.scope.ownerPubKey,!0);return this._ataCache.set(n,r),r}async fetchWalletTokenAccounts(t){if(this._clientOwnedToken||!(t!=null&&t.forceUpdate)&&this._tokenAccounts.length)return{tokenAccounts:this._tokenAccounts,tokenAccountRawInfos:this._tokenAccountRawInfos};this.scope.checkOwner();let r=S(S({},{}),t),i=await this.scope.connection.getAccountInfo(this.scope.ownerPubKey,r.commitment),a=await this.scope.connection.getTokenAccountsByOwner(this.scope.ownerPubKey,{programId:ve.TOKEN_PROGRAM_ID},r.commitment),{tokenAccounts:u,tokenAccountRawInfos:c}=hn({solAccountResp:i,tokenAccountResp:a});return this._tokenAccounts=u,this._tokenAccountRawInfos=c,this._accountChangeListenerId&&this.scope.connection.removeAccountChangeListener(this._accountChangeListenerId),this._accountChangeListenerId=this.scope.connection.onAccountChange(this.scope.ownerPubKey,()=>this.fetchWalletTokenAccounts({forceUpdate:!0}),"confirmed"),{tokenAccounts:u,tokenAccountRawInfos:c}}async getCreatedTokenAccount({mint:t,associatedOnly:n=!0}){await this.fetchWalletTokenAccounts();let r=this._tokenAccounts.filter(({mint:a})=>a==null?void 0:a.equals(t)).sort((a,u)=>a.amount.lt(u.amount)?1:-1),i=await this.getAssociatedTokenAccount(t);for(let a of r){let{publicKey:u}=a;if(u)return n&&i.equals(u),u}}async checkOrCreateAta({mint:t,autoUnwrapWSOLToSOL:n}){var u;await this.fetchWalletTokenAccounts();let r=(u=this.scope.account.tokenAccounts.find(({mint:c})=>(c==null?void 0:c.toBase58())===t.toBase58()))==null?void 0:u.publicKey,i=this.scope.ownerPubKey,a={};if(!r){let c=await this.getAssociatedTokenAccount(t),m=await(0,ve.createAssociatedTokenAccountInstruction)(i,c,i,t);a.instructions=[m],r=c}return n&&j.mint===t.toBase58()&&(a.endInstructions=[Ne({owner:i,payer:i,tokenAccount:r})]),{pubKey:r,newInstructions:a}}async handleTokenAccount(t){let{side:n,amount:r,mint:i,tokenAccount:a,payer:u=this.scope.ownerPubKey,bypassAssociatedCheck:c,skipCloseAccount:m}=t,d=this.createTxBuilder(),p=await(0,ve.getAssociatedTokenAddress)(i,this.scope.ownerPubKey,!0);if(new Si.PublicKey(j.mint).equals(i)){let y=await _e({connection:this.scope.connection,owner:this.scope.ownerPubKey,payer:u,amount:r,skipCloseAccount:m});return d.addInstruction(y),S({tokenAccount:y.signers[0].publicKey},y)}else if(!a||n==="out"&&!p.equals(a)&&!c)return{tokenAccount:p,instructions:[(0,ve.createAssociatedTokenAccountInstruction)(this.scope.ownerPubKey,p,this.scope.ownerPubKey,i)]};return{tokenAccount:a}}};var De=require("@solana/spl-token"),q=require("@solana/web3.js"),wo=X(require("bn.js"));var st=require("@solana/web3.js");var lo=R([D("instruction")]),po=R([D("instruction")]),Vs=R([l("rewardState"),l("rewardOpenTime"),l("rewardEndTime"),l("rewardLastUpdateTime"),l("totalReward"),l("totalRewardEmissioned"),l("rewardClaimed"),l("rewardPerSecond"),Q("accRewardPerShare"),k("rewardVault"),k("rewardMint"),k("rewardSender"),l("rewardType"),H(l(),15,"padding")]),Li=R([l("state"),l("nonce"),k("lpVault"),k("rewardVault"),k(),k(),l(),l(),l("totalReward"),Q("perShareReward"),l("lastSlot"),l("perSlotReward")]),_i=R([l("state"),l("nonce"),k("lpVault"),k("rewardVaultA"),l("totalRewardA"),Q("perShareRewardA"),l("perSlotRewardA"),D("option"),k("rewardVaultB"),Ue(7),l("totalRewardB"),Q("perShareRewardB"),l("perSlotRewardB"),l("lastSlot"),k()]),Ri=R([l(),l("state"),l("nonce"),l("validRewardTokenNum"),Q("rewardMultiplier"),l("rewardPeriodMax"),l("rewardPeriodMin"),l("rewardPeriodExtend"),k("lpMint"),k("lpVault"),H(Vs,5,"rewardInfos"),k("creator"),k(),H(l(),32,"padding")]),wn=new Proxy(Li,{get(o,e,t){return e==="decode"?(...n)=>{let r=o.decode(...n);return O(S({},r),{version:3,rewardInfos:[{rewardVault:r.rewardVault,totalReward:r.totalReward,perSlotReward:r.perSlotReward,perShareReward:r.perShareReward}]})}:Reflect.get(o,e,t)}}),kn=new Proxy(_i,{get(o,e,t){return e==="decode"?(...n)=>{let r=o.decode(...n);return O(S({},r),{version:5,rewardInfos:[{rewardVault:r.rewardVaultA,totalReward:r.totalRewardA,perSlotReward:r.perSlotRewardA,perShareReward:r.perShareRewardA},{rewardVault:r.rewardVaultB,totalReward:r.totalRewardB,perSlotReward:r.perSlotRewardB,perShareReward:r.perShareRewardB}]})}:Reflect.get(o,e,t)}}),it=new Proxy(Ri,{get(o,e,t){return e==="decode"?(...n)=>{let r=o.decode(...n);return O(S({},r),{version:6,rewardInfos:r.rewardInfos.map(i=>{var a;return O(S({},i),{rewardType:((a=Object.entries(Lt).find(u=>String(u[1])===i.rewardType.toString()))!=null?a:["Standard SPL"])[0]})})})}:Reflect.get(o,e,t)}}),Mi=R([l("isSet"),l("rewardPerSecond"),l("rewardOpenTime"),l("rewardEndTime"),l("rewardType")]),fo=R([D("instruction"),l("nonce"),H(Mi,5,"rewardTimeInfo")]),yo=R([D("instruction"),l("rewardReopenTime"),l("rewardEndTime"),l("rewardPerSecond")]),bo=R([D("instruction"),l("isSet"),l("rewardPerSecond"),l("rewardOpenTime"),l("rewardEndTime")]),Cs=R([l("state"),k("id"),k("owner"),l("deposited"),H(l(),1,"rewardDebts")]),Tn=R([l("state"),k("id"),k("owner"),l("deposited"),H(Q(),1,"rewardDebts"),H(l(),17)]),Ws=R([l("state"),k("id"),k("owner"),l("deposited"),H(l(),2,"rewardDebts")]),An=R([l("state"),k("id"),k("owner"),l("deposited"),H(Q(),2,"rewardDebts"),H(l(),17)]),In=R([l(),l("state"),k("id"),k("owner"),l("deposited"),H(Q(),5,"rewardDebts"),H(l(),16)]),at=R([D("instruction"),l("amount")]);var Bi=M("Raydium_farm_config"),xn="EhhTKczWMGQt46ynNeRX1WfeagwwJd7ufHvCDjRxjo5Q",Ki=new st.PublicKey(xn),Sn="9KEPoZmtHUrBbhWN1v1KWLMkkvwY6WLtAVUCPRtRjP4z",Oi=new st.PublicKey(Sn),Ln="FarmqiPv5eAj3j1GMdMCMUGXqPUvmquZtMy86QH6rzhG",qi=new st.PublicKey(Ln),_n={[xn]:3,[Sn]:5,[Ln]:6},Rn={3:Ki,5:Oi,6:qi},Mn=new st.PublicKey("4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R"),Bn=new st.PublicKey("FrspKwj8i3pNmKwXreTveC4fu7KL5ZbGeXdZBe2XViu1"),Kn={3:wn,5:kn,6:it},On={3:Tn,5:An,6:In},go=o=>[3,5,6].indexOf(o)!==-1,Us={3:10,5:11,6:1},qn=o=>{let e=Us[o];return e||Bi.logWithError("invalid deposit farm version"),e},Gs={3:11,5:12,6:2},Fn=o=>{let e=Gs[o];return e||Bi.logWithError("invalid withdraw farm version"),e},Nn=o=>{var a;let{version:e,rewardInfos:t,rewardTokenAccountsPublicKeys:n}=o,r=`rewardInfo:${JSON.stringify(t)}, rewardAccount:${JSON.stringify(n)}`,i={3:()=>{if(t.length!==1||n.length!==1)return`rewardInfos or rewardTokenAccounts lengths not equal 1: ${r}`},5:()=>{if(t.length!==n.length)return`rewardInfos and rewardTokenAccounts lengths not equal: ${r}`},6:()=>{if(!n.length||t.length!==n.length)return`no rewardTokenAccounts or rewardInfos and rewardTokenAccounts lengths not equal: ${r}`}};return(a=i[e])==null?void 0:a.call(i)},Lt={"Standard SPL":0,"Option tokens":1};var $e=require("@solana/web3.js"),Fi=X(require("bn.js"));var Js=M("Raydium_farm_instruction");async function vn(o){let{version:e,id:t,ledger:n,programId:r,owner:i}=o,a={3:9,5:10}[e];a||Js.logWithError(`invalid farm pool version: ${e}`);let u=Buffer.alloc(lo.span);lo.encode({instruction:a},u);let c=[s({pubkey:t}),s({pubkey:n}),s({pubkey:i,isWritable:!1}),s({pubkey:$e.SystemProgram.programId,isWritable:!1}),s({pubkey:$e.SYSVAR_RENT_PUBKEY,isWritable:!1})];return new $e.TransactionInstruction({programId:r,keys:c,data:u})}function Dn(o){var n;let e=Buffer.alloc(fo.span);fo.encode({instruction:0,nonce:new Fi.default(o.nonce),rewardTimeInfo:o.rewardInfoConfig},e);let t=[...Ke,s({pubkey:o.farmKeyPair.publicKey}),s({pubkey:o.farmAuthority,isWritable:!1}),s({pubkey:o.lpVault}),s({pubkey:o.lpMint,isWritable:!1}),s({pubkey:o.lockVault}),s({pubkey:o.lockMint,isWritable:!1}),s({pubkey:(n=o.lockUserAccount)!=null?n:U}),s({pubkey:o.owner,isWritable:!1,isSigner:!0})];for(let r of o.rewardInfo)t.push(s({pubkey:r.rewardMint,isWritable:!1}),s({pubkey:r.rewardVault}),s({pubkey:r.userRewardToken}));return new $e.TransactionInstruction({programId:o.programId,keys:t,data:e})}var ee=X(require("bn.js"));var _t=M("Raydium.farm.util");async function Rt({programId:o,poolId:e,mint:t,type:n}){let{publicKey:r}=await he([e.toBuffer(),t.toBuffer(),Buffer.from(n==="lpVault"?"lp_vault_associated_seed":n==="rewardVault"?"reward_vault_associated_seed":"","utf-8")],o);return r}function Ni(o){let t=E({publicKey:o}).toBase58();return _n[t]}async function Po({programId:o,poolId:e,owner:t}){let{publicKey:n}=await he([e.toBuffer(),t.toBuffer(),Buffer.from(Ni(o)===6?"farmer_info_associated_seed":"staker_info_v2_associated_seed","utf-8")],o);return n}var En=async({programId:o,poolId:e})=>await he([e.toBuffer()],o);function Vn(o){return Rn[o]}function Cn(o){return{isSet:new ee.default(1),rewardPerSecond:x(o.rewardPerSecond),rewardOpenTime:x(o.rewardOpenTime),rewardEndTime:x(o.rewardEndTime),rewardType:x(o.rewardType)}}function ho(o){return x(o.rewardEndTime).sub(x(o.rewardOpenTime)).mul(x(o.rewardPerSecond))}function vi(o){let e=On[o];return e||_t.logWithError("invalid version",o),e}function Di(o){let e=Kn[o];return e||_t.logWithError("invalid version",o),e}function Ei(o,e,t,n){if(o.version===3||o.version===5){if(o.lastSlot.gte(new ee.default(t)))return o;let r=new ee.default(t).sub(o.lastSlot);o.lastSlot=new ee.default(t);for(let i of o.rewardInfos){if(e.amount.eq(new ee.default(0)))continue;let a=i.perSlotReward.mul(r);i.perShareReward=i.perShareReward.add(a.mul(new ee.default(10).pow(new ee.default(o.version===3?9:15))).div(e.amount)),i.totalReward=i.totalReward.add(a)}}else if(o.version===6)for(let r of o.rewardInfos){if(r.rewardState.eq(new ee.default(0)))continue;let i=ee.default.min(new ee.default(n),r.rewardEndTime);if(r.rewardOpenTime.gte(i))continue;let u=i.sub(r.rewardLastUpdateTime).mul(r.rewardPerSecond),c=r.totalReward.sub(r.totalRewardEmissioned);c.lt(u)?(u=c,r.rewardLastUpdateTime=r.rewardLastUpdateTime.add(c.div(r.rewardPerSecond))):r.rewardLastUpdateTime=i,!e.amount.eq(new ee.default(0))&&(r.accRewardPerShare=r.accRewardPerShare.add(u.mul(o.rewardMultiplier).div(e.amount)),r.totalRewardEmissioned=r.totalRewardEmissioned.add(u))}return o}async function Vi({connection:o,farmPools:e,owner:t,config:n}){var y;let r=!1,i=!1,a=new ee.default(10),u=[];for(let f of e){let b=le(f);b.version===6?i=!0:r=!0,u.push({pubkey:b.id,version:b.version,key:"state",poolId:b.id},{pubkey:b.lpVault,version:b.version,key:"lpVault",poolId:b.id}),t&&u.push({pubkey:await Po({programId:b.programId,poolId:b.id,owner:t}),version:b.version,key:"ledger",poolId:b.id})}let c={},m=await cn(o,u,n);for(let{pubkey:f,version:b,key:w,poolId:L,accountInfo:P}of m){let T=L.toBase58();if(c[T]=S({},c[T]),w==="state"){let _=Di(b);(!P||!P.data||P.data.length!==_.span)&&_t.logWithError(`invalid farm state account info, pools.id, ${f}`),c[T].state=_.decode(P.data)}else if(w==="lpVault")(!P||!P.data||P.data.length!==ke.span)&&_t.logWithError(`invalid farm lp vault account info, pools.lpVault, ${f}`),c[T].lpVault=ke.decode(P.data);else if(w==="ledger"){let _=vi(b);P&&P.data&&(P.data.length!==_.span&&_t.logWithError(`invalid farm ledger account info, ledger, ${f}`),c[T].ledger=_.decode(P.data))}}let d=i||r?await o.getSlot():0,p=i&&(y=await o.getBlockTime(d))!=null?y:0;for(let f of Object.keys(c))c[f].state=Ei(c[f].state,c[f].lpVault,d,p);for(let[f,{state:b,ledger:w}]of Object.entries(c))if(w){let L=b.version===6?b.rewardMultiplier:b.rewardInfos.length===1?a.pow(new ee.default(9)):a.pow(new ee.default(15)),P=b.rewardInfos.map((T,_)=>{let I=w.rewardDebts[_];return w.deposited.mul(b.version===6?T.accRewardPerShare:T.perShareReward).div(L).sub(I)});c[f].wrapped=O(S({},c[f].wrapped),{pendingRewards:P})}return c}async function Wn(o){let{farmPools:e}=o,t=await Vi(o);return e.map((r,i)=>O(S(S(S({},e[i]),le(r)),t[r.id]),{jsonInfo:e[i]}))}function Un(o,e=Date.now()){if(o.version===6){let t=o.state.rewardInfos;if(t.every(({rewardOpenTime:n})=>et(e,n.toNumber(),{unit:"s"})))return"upcoming pool";if(t.every(({rewardEndTime:n})=>We(e,n.toNumber(),{unit:"s"})))return"closed pool"}else{let t=o.state.rewardInfos.map(({perSlotReward:n})=>n);if(t.length===2){if(String(t[0])==="0"&&String(t[1])!=="0")return"normal fusion pool";if(String(t[0])!=="0"&&String(t[1])!=="0")return"dual fusion pool";if(String(t[0])==="0"&&String(t[1])==="0")return"closed pool"}else if(t.length===1&&String(t[0])==="0")return"closed pool"}}function Gn(o){return o.state.rewardInfos.length===1&&String(o.lpMint)===kt.toBase58()}function Jn(o,e){return o.version===6?o.state.rewardInfos.map(({rewardPerSecond:t,rewardOpenTime:n,rewardEndTime:r},i)=>{var y;let a=et(e.currentBlockChainDate,n.toNumber(),{unit:"s"}),u=We(e.currentBlockChainDate,r.toNumber(),{unit:"s"});if(a||u)return;let c=e.rewardTokens[i];if(!c)return;let m=e.rewardTokenPrices[i];if(!m)return;let d=Ze(new A(t,ye).div(ge.pow(new ee.default(c.decimals||1))).mul(new ee.default(60*60*24*365)),m);return e.tvl?e.tvl.isZero()?Be(0):d.div((y=e.tvl)!=null?y:ye):void 0}):o.state.rewardInfos.map(({perSlotReward:n},r)=>{var m;let i=e.rewardTokens[r];if(!i)return;let a=e.rewardTokenPrices[r];if(!a)return;let u=Ze(new A(n,ye).div(ge.pow(new ee.default(i.decimals||1))).mul(new ee.default(e.blockSlotCountForSecond*60*60*24*365)),a);return e.tvl?e.tvl.isZero()?Be(0):u.div((m=e.tvl)!=null?m:ye):void 0})}var Mt=class extends se{constructor(){super(...arguments);this._farmPools=[];this._hydratedFarmPools=[];this._hydratedFarmMap=new Map;this._sdkParsedFarmPools=[];this._lpTokenInfoMap=new Map}async load(t){var r;await this.scope.liquidity.load(t),await this.scope.fetchFarms(t==null?void 0:t.forceUpdate);let n=((r=this.scope.apiData.farmPools)==null?void 0:r.data)||{};this._farmPools=Object.keys(n||{}).reduce((i,a)=>{var u,c;return i.concat(((c=(u=n[a]).map)==null?void 0:c.call(u,m=>{let d=this.scope.token.allTokenMap.get(m.baseMint),p=this.scope.token.allTokenMap.get(m.quoteMint);return d&&p&&this._lpTokenInfoMap.set(m.lpMint,new W({mint:m.lpMint,decimals:d.decimals,symbol:`${d.symbol} - ${p.name}`,name:`${d.symbol} - ${p.name} LP`})),O(S({},m),{name:m.symbol,category:a})}))||[])},[]),await this.fetchSdkFarmInfo()}async fetchSdkFarmInfo(){var t;this._sdkParsedFarmPools=await Wn({connection:this.scope.connection,farmPools:this._farmPools,owner:(t=this.scope.owner)==null?void 0:t.publicKey,config:{commitment:"confirmed"}})}async loadHydratedFarmInfo(t){let{forceUpdate:n,skipPrice:r}=t||{};if(this._hydratedFarmPools.length&&!n)return this._hydratedFarmPools;await this.scope.farm.load();try{await this.scope.account.fetchWalletTokenAccounts()}catch{}!r&&await this.scope.token.fetchTokenPrices(),await this.scope.liquidity.loadPairs();let i=await this.scope.chainTimeOffset(),a=oo(Date.now()+i,{minutes:0}),u=await this.scope.api.getBlockSlotCountForSecond(this.scope.connection.rpcEndpoint),c=Object.fromEntries(this.scope.liquidity.allPairs.map(m=>[m.ammId,{apr30d:m.apr30d,apr7d:m.apr7d,apr24h:m.apr24h}]));return this._hydratedFarmPools=this._sdkParsedFarmPools.map(m=>{let d=this.hydrateFarmInfo({farmInfo:m,blockSlotCountForSecond:u,farmAprs:c,currentBlockChainDate:a,chainTimeOffset:i});return this._hydratedFarmMap.set(m.id.toBase58(),d),d}),this._hydratedFarmPools}get allFarms(){return this._farmPools}get allParsedFarms(){return this._sdkParsedFarmPools}get allHydratedFarms(){return this._hydratedFarmPools}get allHydratedFarmMap(){return this._hydratedFarmMap}getFarm(t){let n=E({publicKey:t}),r=this.allFarms.find(i=>i.id===n.toBase58());return r||this.logAndCreateError("invalid farm id"),r}getParsedFarm(t){let n=E({publicKey:t}),r=this.allParsedFarms.find(i=>n.equals(i.id));return r||this.logAndCreateError("invalid farm id"),r}getLpTokenInfo(t){let n=E({publicKey:t}),r=this._lpTokenInfoMap.get(n.toBase58());return r||this.logAndCreateError("LP Token not found",n.toBase58()),r}lpDecimalAmount({mint:t,amount:n}){let r=ue(n),i=this.getLpTokenInfo(t);return Se(new A(r.numerator,r.denominator).mul(new wo.default(10).pow(new wo.default(i.decimals))))}hydrateFarmInfo(t){var Ct,Wt,lt,dt,pt,Ut,Mr,Br,Kr,Or,qr,Fr;let{farmInfo:n,blockSlotCountForSecond:r,farmAprs:i,currentBlockChainDate:a,chainTimeOffset:u=0}=t,c=Un(n,a),m=Gn(n),d=c==="dual fusion pool",p=c==="normal fusion pool",y=c==="closed pool"&&!n.upcoming,f=n.version!==6?n.upcoming&&y:n.upcoming,b=n.version!==6&&n.upcoming&&!y,w=((Ct=this.scope.liquidity.allPools.find(K=>K.lpMint===n.lpMint.toBase58()))==null?void 0:Ct.version)===5,L=m?this.scope.mintToToken(n.lpMint):this.getLpTokenInfo(n.lpMint),P=this.scope.mintToToken(m?n.lpMint:n.baseMint),T=this.scope.mintToToken(m?n.lpMint:n.quoteMint);P!=null&&P.symbol;let _=m?`${(Wt=P==null?void 0:P.symbol)!=null?Wt:"unknown"}`:`${(lt=P==null?void 0:P.symbol)!=null?lt:"unknown"}-${(dt=T==null?void 0:T.symbol)!=null?dt:"unknown"}`,I=n.jsonInfo.rewardInfos.map(({rewardMint:K})=>this.scope.mintToToken(K)),F=(pt=n.wrapped)==null?void 0:pt.pendingRewards.map((K,G)=>I[G]?new B(I[G],Se(dn(K,0))):void 0),N=m?this.scope.token.tokenPrices.get(n.lpMint.toBase58()):this.scope.liquidity.lpPriceMap.get(n.lpMint.toBase58()),v=L&&new B(L,n.lpVault.amount),z=N&&L?Ze(new B(L,n.lpVault.amount),N):void 0,V=Jn(n,{tvl:z,currentBlockChainDate:a,rewardTokens:I,rewardTokenPrices:(Ut=n.rewardInfos.map(({rewardMint:K})=>this.scope.token.tokenPrices.get(K.toBase58())))!=null?Ut:[],blockSlotCountForSecond:r}),J=(Mr=this.scope.liquidity.allPools.find(K=>K.lpMint===n.lpMint.toBase58()))==null?void 0:Mr.id,te=J?bt((Br=i[J])==null?void 0:Br.apr7d,{alreadyDecimaled:!0}):void 0,Z=J?bt((Kr=i[J])==null?void 0:Kr.apr30d,{alreadyDecimaled:!0}):void 0,ie=J?bt((Or=i[J])==null?void 0:Or.apr24h,{alreadyDecimaled:!0}):void 0,ce=V.reduce((K,G)=>K?G?K.add(G):K:G,te),Me=V.reduce((K,G)=>K?G?K.add(G):K:G,Z),fe=V.reduce((K,G)=>K?G?K.add(G):K:G,ie),Ie=n.version===6?n.state.rewardInfos.map((K,G)=>{var Er,Vr,Cr,Wr;let{rewardOpenTime:ft,rewardEndTime:Gt,rewardPerSecond:Fo}=K,Ve=ft.toNumber()?new Date(ft.toNumber()*1e3+u):void 0,xe=Gt.toNumber()?new Date(Gt.toNumber()*1e3+u):void 0,No=Date.now()+u;if(!Ve&&!xe)return;let He=this.scope.mintToToken((Cr=(Vr=K.rewardMint)!=null?Vr:(Er=n.rewardInfos[G])==null?void 0:Er.rewardMint)==null?void 0:Cr.toBase58()),Nr=Boolean(Ve&&et(No,Ve)),vr=Boolean(xe&&We(No,xe)),Dr=!Ve&&!xe||!vr&&!Nr,la=Dr&&We(No,oo(xe,{seconds:-((Wr=n.jsonInfo.rewardPeriodExtend)!=null?Wr:72*60*60)})),da=He&&this.scope.mintToTokenAmount({mint:He.mint,amount:ln(K.totalReward,K.totalRewardEmissioned).toFixed(He.decimals)}),pa=F==null?void 0:F[G],fa=V[G],ya=Boolean(xe),Jt=n.rewardInfos[G];return O(S(S({},Jt),K),{owner:Jt==null?void 0:Jt.rewardSender,apr:fa,token:He,userPendingReward:pa,userHavedReward:ya,perSecond:He&&this.scope.mintToTokenAmount({mint:He.mint,amount:Fo}).toSignificant(),openTime:Ve,endTime:xe,isOptionToken:K.rewardType==="Option tokens",isRewardBeforeStart:Nr,isRewardEnded:vr,isRewarding:Dr,isRwardingBeforeEnd72h:la,claimableRewards:da,version:6})}).filter(K=>!!K):n.state.rewardInfos.map((K,G)=>{let ft=F==null?void 0:F[G],Gt=V[G],Fo=I[G],{perSlotReward:Ve}=K,xe=At(ft)||At(Ve);return O(S({},K),{apr:Gt,token:Fo,userPendingReward:ft,userHavedReward:xe,version:n.version})}),be=L&&((qr=n.ledger)==null?void 0:qr.deposited)?new B(L,(Fr=n.ledger)==null?void 0:Fr.deposited):void 0;return O(S({},n),{lp:L,lpPrice:N,base:P,quote:T,name:_,isStakePool:m,isDualFusionPool:d,isNormalFusionPool:p,isClosedPool:y,isUpcomingPool:f,isStablePool:w,isNewPool:b,totalApr7d:ce,raydiumFeeApr7d:te,totalApr24h:fe,raydiumFeeApr24h:ie,totalApr30d:Me,raydiumFeeApr30d:Z,ammId:J,tvl:z,userHasStaked:At(be),rewards:Ie,userStakedLpAmount:be,stakedLpAmount:v})}async _getUserRewardInfo({payer:t,rewardInfo:n}){if(n.rewardMint.equals(U)){let r=await _e({connection:this.scope.connection,owner:this.scope.ownerPubKey,payer:t,amount:ho(n)});return{rewardPubKey:r.signers[0].publicKey,newInstruction:r}}return{rewardPubKey:await this.scope.account.getCreatedTokenAccount({mint:n.rewardMint})}}async create({poolId:t,rewardInfos:n,payer:r}){this.checkDisabled(),this.scope.checkOwner();let i=E({publicKey:t}),a=this.scope.liquidity.allPools.find(I=>I.id===i.toBase58());a||this.logAndCreateError("invalid pool id");let c={lpMint:new q.PublicKey(a.lpMint),lockInfo:{lockMint:Mn,lockVault:Bn},version:6,rewardInfos:n,programId:Vn(6)},m=this.createTxBuilder(),d=r!=null?r:this.scope.ownerPubKey,p=q.Keypair.generate(),y=await this.scope.connection.getMinimumBalanceForRentExemption(it.span);m.addInstruction({instructions:[q.SystemProgram.createAccount({fromPubkey:d,newAccountPubkey:p.publicKey,lamports:y,space:it.span,programId:c.programId})],signers:[p]});let{publicKey:f,nonce:b}=await En({programId:c.programId,poolId:p.publicKey}),w=await Rt({programId:c.programId,poolId:p.publicKey,mint:c.lpMint,type:"lpVault"}),L=[],P=[];for(let I of c.rewardInfos){I.rewardOpenTime>=I.rewardEndTime&&this.logAndCreateError("start time error","rewardInfo.rewardOpenTime",I.rewardOpenTime.toString()),Lt[I.rewardType]||this.logAndCreateError("rewardType error",I.rewardType),I.rewardPerSecond<=0&&this.logAndCreateError("rewardPerSecond error",I.rewardPerSecond.toString()),L.push(Cn(I));let{rewardPubKey:F,newInstruction:N}=await this._getUserRewardInfo({rewardInfo:I,payer:d});N&&m.addInstruction(N),F||this.logAndCreateError("cannot found target token accounts",this.scope.account.tokenAccounts);let v=I.rewardMint.equals(U)?new q.PublicKey(j.mint):I.rewardMint;P.push({rewardMint:v,rewardVault:await Rt({programId:c.programId,poolId:p.publicKey,mint:v,type:"rewardVault"}),userRewardToken:F})}let T=await this.scope.account.getCreatedTokenAccount({mint:c.lockInfo.lockMint});T||this.logAndCreateError("cannot found lock vault","tokenAccounts",this.scope.account.tokenAccounts);let _=Dn({farmKeyPair:p,owner:this.scope.ownerPubKey,farmAuthority:f,lpVault:w,lpMint:c.lpMint,lockVault:c.lockInfo.lockVault,lockMint:c.lockInfo.lockMint,lockUserAccount:T,programId:c.programId,rewardInfo:P,rewardInfoConfig:L,nonce:b});return await m.addInstruction({instructions:[_]}).build()}async restartReward({farmId:t,payer:n,newRewardInfo:r}){let i=this.getFarm(t);i.version!==6&&this.logAndCreateError("invalid farm version",i.version);let a={id:new q.PublicKey(i.id),rewardInfos:i.rewardInfos,lpVault:new q.PublicKey(i.lpVault),programId:new q.PublicKey(i.programId)};r.rewardOpenTime>=r.rewardEndTime&&this.logAndCreateError("start time error","newRewardInfo",r);let u=n||this.scope.ownerPubKey,c=r.rewardMint.equals(U)?new q.PublicKey(j.mint):r.rewardMint,m=a.rewardInfos.find(L=>new q.PublicKey(L.rewardMint).equals(c));m||this.logAndCreateError("configuration does not exist","rewardMint",c);let d=m.rewardVault?new q.PublicKey(m.rewardVault):U,p=this.createTxBuilder(),{rewardPubKey:y,newInstruction:f}=await this._getUserRewardInfo({rewardInfo:r,payer:u});f&&p.addInstruction(f),y||this.logAndCreateError("cannot found target token accounts",this.scope.account.tokenAccounts);let b=Buffer.alloc(yo.span);yo.encode({instruction:3,rewardReopenTime:x(r.rewardOpenTime),rewardEndTime:x(r.rewardEndTime),rewardPerSecond:x(r.rewardPerSecond)},b);let w=[s({pubkey:De.TOKEN_PROGRAM_ID,isWritable:!1}),s({pubkey:a.id}),s({pubkey:a.lpVault,isWritable:!1}),s({pubkey:d}),s({pubkey:y}),s({pubkey:this.scope.ownerPubKey,isWritable:!1,isSigner:!0})];return await p.addInstruction({instructions:[new q.TransactionInstruction({programId:a.programId,keys:w,data:b})]}).build()}async addNewRewardToken(t){let{farmId:n,newRewardInfo:r,payer:i}=t,a=this.getFarm(n);a.version!==6&&this.logAndCreateError("invalid farm version",a.version);let u=i!=null?i:this.scope.ownerPubKey,c=this.createTxBuilder(),m=await Rt({programId:new q.PublicKey(a.programId),poolId:new q.PublicKey(a.id),mint:r.rewardMint,type:"rewardVault"}),{rewardPubKey:d,newInstruction:p}=await this._getUserRewardInfo({rewardInfo:r,payer:u});p&&c.addInstruction(p),d||this.logAndCreateError("annot found target token accounts",this.scope.account.tokenAccounts);let y=r.rewardMint.equals(U)?new q.PublicKey(j.mint):r.rewardMint,f=Buffer.alloc(bo.span);bo.encode({instruction:4,isSet:new wo.default(1),rewardPerSecond:x(r.rewardPerSecond),rewardOpenTime:x(r.rewardOpenTime),rewardEndTime:x(r.rewardEndTime)},f);let b=[...Ke,s({pubkey:new q.PublicKey(a.id)}),s({pubkey:new q.PublicKey(a.authority),isWritable:!1}),s({pubkey:y,isWritable:!1}),s({pubkey:m}),s({pubkey:d}),s({pubkey:this.scope.ownerPubKey,isWritable:!1,isSigner:!0})];return await c.addInstruction({instructions:[new q.TransactionInstruction({programId:new q.PublicKey(a.programId),keys:b,data:f})]}).build()}async _prepareFarmAccounts(t){let n=this.createTxBuilder(),{farmInfo:r}=t,{pubKey:i,newInstructions:a}=await this.scope.account.checkOrCreateAta({mint:r.lpMint});n.addInstruction(a);let u=await Promise.all(r.rewardInfos.map(async({rewardMint:d})=>{let{pubKey:p,newInstructions:y}=await this.scope.account.checkOrCreateAta({mint:d,autoUnwrapWSOLToSOL:!0});return n.addInstruction(y),p})),c=await Po({programId:new q.PublicKey(r.programId),poolId:new q.PublicKey(r.id),owner:this.scope.ownerPubKey});if(!r.ledger&&r.version<6){let d=await vn({id:r.id,programId:r.programId,version:r.version,ledger:c,owner:this.scope.ownerPubKey});n.addInstruction({instructions:[d]})}let m=[s({pubkey:r.id}),s({pubkey:r.authority,isWritable:!1}),s({pubkey:c}),s({pubkey:this.scope.ownerPubKey,isWritable:!1,isSigner:!0}),s({pubkey:i}),s({pubkey:new q.PublicKey(r.jsonInfo.lpVault)}),s({pubkey:u[0]}),s({pubkey:r.rewardInfos[0].rewardVault}),s({pubkey:q.SYSVAR_CLOCK_PUBKEY,isWritable:!1}),s({pubkey:De.TOKEN_PROGRAM_ID,isWritable:!1})];return{txBuilder:n,lpTokenAccount:i,rewardTokenAccountsPublicKeys:u,ledgerAddress:c,lowVersionKeys:m}}async deposit(t){this.scope.checkOwner();let{farmId:n,amount:r}=t,i=this.getParsedFarm(n),a=i.lpMint,{version:u,rewardInfos:c}=i;go(u)||this.logAndCreateError("invalid farm version:",u);let{txBuilder:m,ledgerAddress:d,lpTokenAccount:p,lowVersionKeys:y,rewardTokenAccountsPublicKeys:f}=await this._prepareFarmAccounts({mint:a,farmInfo:i}),b=Nn({version:u,rewardInfos:c,rewardTokenAccountsPublicKeys:f});b&&this.logAndCreateError(b);let w=Buffer.alloc(at.span);at.encode({instruction:qn(u),amount:x(r)},w);let L=u===6?[s({pubkey:De.TOKEN_PROGRAM_ID,isWritable:!1}),s({pubkey:q.SystemProgram.programId,isWritable:!1}),s({pubkey:i.id}),s({pubkey:i.authority,isWritable:!1}),s({pubkey:i.lpVault.mint}),s({pubkey:d}),s({pubkey:this.scope.ownerPubKey,isWritable:!1,isSigner:!0}),s({pubkey:p})]:y;if(u!==3)for(let T=1;T<c.length;T++)L.push(s({pubkey:f[T]})),L.push(s({pubkey:c[T].rewardVault}));let P=new q.TransactionInstruction({programId:i.programId,keys:L,data:w});return await m.addInstruction({instructions:[P]}).build()}async withdraw(t){this.scope.checkOwner();let{farmId:n,amount:r}=t,i=this.getParsedFarm(n),a=i.lpMint,{version:u,rewardInfos:c}=i;go(u)||this.logAndCreateError("invalid farm version:",u);let{txBuilder:m,ledgerAddress:d,lpTokenAccount:p,lowVersionKeys:y,rewardTokenAccountsPublicKeys:f}=await this._prepareFarmAccounts({mint:a,farmInfo:i}),b=Buffer.alloc(at.span);at.encode({instruction:Fn(u),amount:x(r)},b);let w=u===6?[s({pubkey:De.TOKEN_PROGRAM_ID,isWritable:!1}),s({pubkey:i.id}),s({pubkey:i.authority,isWritable:!1}),s({pubkey:i.lpVault.mint}),s({pubkey:d}),s({pubkey:this.scope.ownerPubKey,isWritable:!1,isSigner:!0}),s({pubkey:p})]:y;if(u!==3)for(let P=1;P<c.length;P++)w.push(s({pubkey:f[P]})),w.push(s({pubkey:c[P].rewardVault}));let L=new q.TransactionInstruction({programId:i.programId,keys:w,data:b});return await m.addInstruction({instructions:[L]}).build()}async withdrawFarmReward({farmId:t,withdrawMint:n}){var y;this.scope.checkOwner();let r=this.getParsedFarm(t),{version:i}=r;i!==6&&this.logAndCreateError("invalid farm version",r.version);let a=r.rewardInfos.find(f=>f.rewardMint.equals(n.equals(U)?new q.PublicKey(j.mint):n));a||this.logAndCreateError("withdraw mint error","rewardInfos",r);let u=(y=a==null?void 0:a.rewardVault)!=null?y:U,c=this.createTxBuilder(),m;if(this._getUserRewardInfo({payer:this.scope.ownerPubKey,rewardInfo:a}),n.equals(U)){let f=await _e({connection:this.scope.connection,owner:this.scope.ownerPubKey,payer:this.scope.ownerPubKey,amount:ho(a)});m=f.signers[0].publicKey,c.addInstruction(f)}else{let f=await this.scope.account.getCreatedTokenAccount({mint:n});f===null?(m=await this.scope.account.getAssociatedTokenAccount(n),c.addInstruction({instructions:[(0,De.createAssociatedTokenAccountInstruction)(this.scope.ownerPubKey,m,this.scope.ownerPubKey,n)]})):m=f}let d=Buffer.alloc(po.span);po.encode({instruction:5},d);let p=[s({pubkey:De.TOKEN_PROGRAM_ID,isWritable:!1}),s({pubkey:r.id}),s({pubkey:r.authority,isWritable:!1}),s({pubkey:r.lpVault.mint,isWritable:!1}),s({pubkey:u}),s({pubkey:m}),s({pubkey:this.scope.ownerPubKey,isWritable:!1,isSigner:!0})];return await c.addInstruction({instructions:[new q.TransactionInstruction({programId:r.programId,keys:p,data:d})]}).build()}};var ra=require("@solana/web3.js"),Ae=X(require("bn.js"));var $n=require("@solana/web3.js"),jn=X(require("bn.js")),Yn=(c=>(c[c.Uninitialized=0]="Uninitialized",c[c.Initialized=1]="Initialized",c[c.Disabled=2]="Disabled",c[c.RemoveLiquidityOnly=3]="RemoveLiquidityOnly",c[c.LiquidityOnly=4]="LiquidityOnly",c[c.OrderBook=5]="OrderBook",c[c.Swap=6]="Swap",c[c.WaitingForStart=7]="WaitingForStart",c))(Yn||{}),Qn=new jn.default(25),Hn=new jn.default(1e4),zn="675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8",Ci=new $n.PublicKey(zn),Zn="5quBtoiQqxF9Jv6KYKctB59NT3gtJD2Y65kdnB1Uev3h",Wi=new $n.PublicKey(Zn),$s={[zn]:4,[Zn]:5},Xn={4:Ci,5:Wi},er={4:3,5:3};var Ro=require("@solana/spl-token"),pe=require("@solana/web3.js");var ko=R([D("instruction"),l("amountIn"),l("minAmountOut")]),To=R([D("instruction"),l("maxAmountIn"),l("amountOut")]),Ao=R([D("instruction"),D("nonce")]),Io=R([D("instruction"),D("nonce"),l("startTime")]),xo=R([l("status"),l("nonce"),l("maxOrder"),l("depth"),l("baseDecimal"),l("quoteDecimal"),l("state"),l("resetFlag"),l("minSize"),l("volMaxCutRatio"),l("amountWaveRatio"),l("baseLotSize"),l("quoteLotSize"),l("minPriceMultiplier"),l("maxPriceMultiplier"),l("systemDecimalValue"),l("minSeparateNumerator"),l("minSeparateDenominator"),l("tradeFeeNumerator"),l("tradeFeeDenominator"),l("pnlNumerator"),l("pnlDenominator"),l("swapFeeNumerator"),l("swapFeeDenominator"),l("baseNeedTakePnl"),l("quoteNeedTakePnl"),l("quoteTotalPnl"),l("baseTotalPnl"),Q("quoteTotalDeposited"),Q("baseTotalDeposited"),Q("swapBaseInAmount"),Q("swapQuoteOutAmount"),l("swapBase2QuoteFee"),Q("swapQuoteInAmount"),Q("swapBaseOutAmount"),l("swapQuote2BaseFee"),k("baseVault"),k("quoteVault"),k("baseMint"),k("quoteMint"),k("lpMint"),k("openOrders"),k("marketId"),k("marketProgramId"),k("targetOrders"),k("withdrawQueue"),k("lpVault"),k("owner"),l("lpReserve"),H(l(),3,"padding")]),Ui=R([l("accountType"),l("status"),l("nonce"),l("maxOrder"),l("depth"),l("baseDecimal"),l("quoteDecimal"),l("state"),l("resetFlag"),l("minSize"),l("volMaxCutRatio"),l("amountWaveRatio"),l("baseLotSize"),l("quoteLotSize"),l("minPriceMultiplier"),l("maxPriceMultiplier"),l("systemDecimalsValue"),l("abortTradeFactor"),l("priceTickMultiplier"),l("priceTick"),l("minSeparateNumerator"),l("minSeparateDenominator"),l("tradeFeeNumerator"),l("tradeFeeDenominator"),l("pnlNumerator"),l("pnlDenominator"),l("swapFeeNumerator"),l("swapFeeDenominator"),l("baseNeedTakePnl"),l("quoteNeedTakePnl"),l("quoteTotalPnl"),l("baseTotalPnl"),l("poolOpenTime"),l("punishPcAmount"),l("punishCoinAmount"),l("orderbookToInitTime"),Q("swapBaseInAmount"),Q("swapQuoteOutAmount"),Q("swapQuoteInAmount"),Q("swapBaseOutAmount"),l("swapQuote2BaseFee"),l("swapBase2QuoteFee"),k("baseVault"),k("quoteVault"),k("baseMint"),k("quoteMint"),k("lpMint"),k("modelDataAccount"),k("openOrders"),k("marketId"),k("marketProgramId"),k("targetOrders"),k("owner"),H(l(),64,"padding")]),So=R([D("instruction"),l("baseAmountIn"),l("quoteAmountIn"),l("fixedSide")]),Lo=R([D("instruction"),l("amountIn")]),tr={4:xo,5:Ui};var Gi=require("@solana/web3.js");var Te=new Gi.PublicKey("CDSr3ssLcRB6XYPJwAfFt18MZvEZp4LjHcvzBVZ45duo"),Ye=5e4,Ji=R([l("x"),l("y"),l("price")]),$i=R([l("accountType"),l("status"),l("multiplier"),l("validDataCount"),H(Ji,Ye,"DataElement")]);function js(o,e){return[0,Ye-2]}function Ys(o){return[0,Ye-2]}function Qs(o){return[0,Ye-2]}function Hs(o,e,t){let[n,r]=js(e,t),i=n,a=r,u=0,c=e*o.multiplier/t;for(;i<=a;){if(u=Math.floor((a+i)/2),u===0||u>=Ye-2)return[u,u,!1];let m=o.DataElement[u].x*o.multiplier/o.DataElement[u].y,d=o.DataElement[u-1].x*o.multiplier/o.DataElement[u-1].y,p=o.DataElement[u+1].x*o.multiplier/o.DataElement[u+1].y;if(c===m)return[u,u,!0];if(c===d)return[u-1,u-1,!0];if(c===p)return[u+1,u+1,!0];if(c<d)a=u-1;else{if(c>d&&c<m)return[u-1,u,!0];if(c>m&&c<p)return[u,u+1,!0];i=u+1}}return[u,u,!1]}function or(o,e,t){let[n,r,i]=Hs(o,e,t);if(!i)return 0;if(n===r){let a=o.DataElement[n].x;return e*o.multiplier/a}else{let a=o.DataElement[n].x,u=o.DataElement[n].y,c=o.DataElement[r].x,m=o.DataElement[r].y,d=t*(c*u-a*m),p=a*d,y=(c-a)*(e*u-a*t)*m,f=p+y;return e*o.multiplier*d/f}}function je(o,e,t){return e*o.multiplier/t}function ji(o,e,t){return e*t/o.multiplier}function zs(o,e){let[t,n]=Ys(e),r=t,i=n,a=0,u=e;for(;r<i;){if(a=Math.floor((i+r)/2),a<=0||a>Ye-2)return[a,a,!1];let c=o.DataElement[a].x,m=o.DataElement[a-1].x,d=o.DataElement[a+1].x;if(u===c)return[a,a,!0];if(u===m)return[a-1,a-1,!0];if(u===d)return[a+1,a+1,!0];if(u<m)i=a-1;else{if(u>m&&u<c)return[a-1,a,!0];if(u>c&&u<d)return[a,a+1,!0];r=a+1}}return[a,a,!1]}function Zs(o,e){let[t,n]=Qs(e),r=t,i=n,a=0,u=e;for(;r<=i;){if(a=Math.floor((i+r)/2),a<=0||a>=Ye-2)return[a,a,!1];let c=o.DataElement[a].y,m=o.DataElement[a-1].y,d=o.DataElement[a+1].y;if(u===c)return[a,a,!0];if(u===m)return[a-1,a-1,!0];if(u===d)return[a+1,a+1,!0];if(u<d)r=a+1;else{if(u<m&&u>c)return[a-1,a,!0];if(u<c&&u>d)return[a,a+1,!0];i=a-1}}return[a,a,!1]}function Yi(o,e,t,n){let r=n?e+t:e-t,[i,a,u]=zs(o,r);if(!u)return[0,0,!1,u];if(i===a)return[o.DataElement[a].price,o.DataElement[a].y,!1,u];{let c=o.DataElement[i].x,m=o.DataElement[a].x,d=o.DataElement[i].price,p=o.DataElement[a].price,y=o.DataElement[i].y,f=o.DataElement[a].y;if(e>=c&&e<=m)return n?[p,f,!0,u]:[d,y,!0,u];{let b,w;return n?(b=d+(p-d)*(e-c)/(m-c),w=y-(r-c)*o.multiplier/p):(b=d+(p-d)*(e-c)/(m-c),w=f+(m-r)*o.multiplier/d),[b,w,!1,u]}}}function Xs(o,e,t,n){let r=n?e-t:e+t,[i,a,u]=Zs(o,r);if(!u)return[0,0,!1,u];if(i===a)return[o.DataElement[a].price,o.DataElement[a].x,!1,u];{let c=o.DataElement[i].x,m=o.DataElement[a].x,d=o.DataElement[i].price,p=o.DataElement[a].price,y=o.DataElement[i].y,f=o.DataElement[a].y;if(e>=f&&e<=y)return n?[p,m,!0,u]:[d,c,!0,u];{let b,w;return n?(b=d+(p-d)*(y-e)/(y-f),w=c+p*(y-r)/o.multiplier):(b=d+(p-d)*(y-e)/(y-f),w=m-d*(r-f)/o.multiplier),[b,w,!1,u]}}}function eu(o,e){let t=Yi(o,e,0,!1);return t[3]?t[0]:0}function nr(o,e,t,n){let r=or(o,e,t),i=je(o,e,r),a=je(o,t,r),u=je(o,n,r),c=!0,[m,d,p,y]=Yi(o,i,u,c);if(!y)return 0;if(p)return n*o.multiplier/m;{let f=a-d;return ji(o,f,r)}}function rr(o,e,t,n){let r=or(o,e,t),i=je(o,e,r),a=je(o,t,r),u=je(o,n,r),c=!1,[m,d,p,y]=Xs(o,a,u,c);if(!y)return 0;if(p)return n*m/o.multiplier;{let f=i-d;return ji(o,f,r)}}function Qi(o){let e=$i.decode(o);return{accountType:e.accountType.toNumber(),status:e.status.toNumber(),multiplier:e.multiplier.toNumber(),validDataCount:e.validDataCount.toNumber(),DataElement:e.DataElement.map(t=>({x:t.x.toNumber(),y:t.y.toNumber(),price:t.price.toNumber()}))}}function ir(o,e,t,n){let r=eu(o,je(o,e,or(o,e,t)))/o.multiplier;return n?r:1/r}var Bt=class{constructor({connection:e}){this._layoutData={accountType:0,status:0,multiplier:0,validDataCount:0,DataElement:[]};this.connection=e}get stableModelData(){return this._layoutData}async initStableModelLayout(){if(this._layoutData.validDataCount===0&&this.connection){let e=await this.connection.getAccountInfo(Te);e&&(this._layoutData=Qi(e==null?void 0:e.data))}}};var _o=M("Raydium_liquidity_instruction");function ar(o){let{poolKeys:e,userKeys:t,amountIn:n,amountOut:r,fixedSide:i}=o,{version:a}=e;if(a===4||a===5){let u={poolKeys:e,userKeys:t};if(i==="in")return Hi(O(S({},u),{amountIn:n,minAmountOut:r}),a);if(i==="out")return zi(O(S({},u),{maxAmountIn:n,amountOut:r}),a);_o.logWithError("invalid params","params",o)}throw _o.logWithError("invalid version","poolKeys.version",a),new Error("invalid version")}function sr(o){let e=R([D("instruction"),D("simulateType")]),t=Buffer.alloc(e.span);e.encode({instruction:12,simulateType:0},t);let n=[s({pubkey:o.id,isWritable:!1}),s({pubkey:o.authority,isWritable:!1}),s({pubkey:o.openOrders,isWritable:!1}),s({pubkey:o.baseVault,isWritable:!1}),s({pubkey:o.quoteVault,isWritable:!1}),s({pubkey:o.lpMint,isWritable:!1}),s({pubkey:o.marketId,isWritable:!1})];return new pe.TransactionInstruction({programId:o.programId,keys:n,data:t})}function Hi({poolKeys:o,userKeys:e,amountIn:t,minAmountOut:n},r){let i=Buffer.alloc(ko.span);ko.encode({instruction:9,amountIn:x(t),minAmountOut:x(n)},i);let a=[s({pubkey:Ro.TOKEN_PROGRAM_ID,isWritable:!1}),s({pubkey:o.id}),s({pubkey:o.authority,isWritable:!1}),s({pubkey:o.openOrders})];return r===4&&a.push(s({pubkey:o.targetOrders})),a.push(s({pubkey:o.baseVault}),s({pubkey:o.quoteVault})),r===5&&a.push(s({pubkey:Te})),a.push(s({pubkey:o.marketProgramId,isWritable:!1}),s({pubkey:o.marketId}),s({pubkey:o.marketBids}),s({pubkey:o.marketAsks}),s({pubkey:o.marketEventQueue}),s({pubkey:o.marketBaseVault}),s({pubkey:o.marketQuoteVault}),s({pubkey:o.marketAuthority,isWritable:!1}),s({pubkey:e.tokenAccountIn}),s({pubkey:e.tokenAccountOut}),s({pubkey:e.owner,isWritable:!1})),new pe.TransactionInstruction({programId:o.programId,keys:a,data:i})}function zi({poolKeys:o,userKeys:e,maxAmountIn:t,amountOut:n},r){let i=Buffer.alloc(To.span);To.encode({instruction:11,maxAmountIn:x(t),amountOut:x(n)},i);let a=[s({pubkey:pe.SystemProgram.programId,isWritable:!1}),s({pubkey:o.id}),s({pubkey:o.authority,isWritable:!1}),s({pubkey:o.openOrders}),s({pubkey:o.targetOrders}),s({pubkey:o.baseVault}),s({pubkey:o.quoteVault})];return r===5&&a.push(s({pubkey:Te})),a.push(s({pubkey:o.marketProgramId,isWritable:!1}),s({pubkey:o.marketId}),s({pubkey:o.marketBids}),s({pubkey:o.marketAsks}),s({pubkey:o.marketEventQueue}),s({pubkey:o.marketBaseVault}),s({pubkey:o.marketQuoteVault}),s({pubkey:o.marketAuthority,isWritable:!1}),s({pubkey:e.tokenAccountIn}),s({pubkey:e.tokenAccountOut}),s({pubkey:e.owner,isWritable:!1,isSigner:!0})),new pe.TransactionInstruction({programId:o.programId,keys:a,data:i})}function ur(o){let i=o,{owner:e}=i,t=oe(i,["owner"]),n=Buffer.alloc(Ao.span);Ao.encode({instruction:10,nonce:t.nonce},n);let r=[...Ke,s({pubkey:t.targetOrders}),s({pubkey:t.withdrawQueue}),s({pubkey:t.authority,isWritable:!1}),s({pubkey:t.lpMint}),s({pubkey:t.baseMint,isWritable:!1}),s({pubkey:t.quoteMint,isWritable:!1}),s({pubkey:t.baseVault}),s({pubkey:t.quoteVault}),s({pubkey:t.lpVault}),s({pubkey:t.marketId,isWritable:!1}),s({pubkey:e,isSigner:!0})];return new pe.TransactionInstruction({programId:t.programId,keys:r,data:n})}function cr(o){let{poolKeys:e,userKeys:t,startTime:n}=o,r=Buffer.alloc(Io.span);Io.encode({instruction:0,nonce:e.nonce,startTime:x(n)},r);let i=[...Ke,s({pubkey:e.id}),s({pubkey:e.authority,isWritable:!1}),s({pubkey:e.openOrders}),s({pubkey:e.lpMint}),s({pubkey:e.baseMint,isWritable:!1}),s({pubkey:e.quoteMint,isWritable:!1}),s({pubkey:e.baseVault,isWritable:!1}),s({pubkey:e.quoteVault,isWritable:!1}),s({pubkey:e.withdrawQueue}),s({pubkey:e.targetOrders}),s({pubkey:t.lpTokenAccount}),s({pubkey:e.lpVault,isWritable:!1}),s({pubkey:e.marketProgramId,isWritable:!1}),s({pubkey:e.marketId,isWritable:!1}),s({pubkey:t.payer,isSigner:!0})];return new pe.TransactionInstruction({programId:e.programId,keys:i,data:r})}function mr(o){let{poolKeys:e,userKeys:t,baseAmountIn:n,quoteAmountIn:r,fixedSide:i}=o,{version:a}=e;if(a===4||a===5){let u=Buffer.alloc(So.span);So.encode({instruction:3,baseAmountIn:x(n),quoteAmountIn:x(r),fixedSide:x(i==="base"?0:1)},u);let c=[s({pubkey:Ro.TOKEN_PROGRAM_ID,isWritable:!1}),s({pubkey:e.id}),s({pubkey:e.authority,isWritable:!1}),s({pubkey:e.openOrders,isWritable:!1}),s({pubkey:e.targetOrders}),s({pubkey:e.lpMint}),s({pubkey:e.baseVault}),s({pubkey:e.quoteVault})];return a===5&&c.push(s({pubkey:Te})),c.push(s({pubkey:e.marketId,isWritable:!1}),s({pubkey:t.baseTokenAccount}),s({pubkey:t.quoteTokenAccount}),s({pubkey:t.lpTokenAccount}),s({pubkey:t.owner,isWritable:!1,isSigner:!0})),new pe.TransactionInstruction({programId:e.programId,keys:c,data:u})}return _o.logWithError("invalid version","poolKeys.version",a),new pe.TransactionInstruction({programId:e.programId,keys:[]})}function lr(o){let{poolKeys:e,userKeys:t,amountIn:n}=o,{version:r}=e;if(r===4||r===5){let i=Buffer.alloc(Lo.span);Lo.encode({instruction:4,amountIn:x(n)},i);let a=[s({pubkey:Ro.TOKEN_PROGRAM_ID,isWritable:!1}),s({pubkey:e.id}),s({pubkey:e.authority,isWritable:!1}),s({pubkey:e.openOrders}),s({pubkey:e.targetOrders}),s({pubkey:e.lpMint}),s({pubkey:e.baseVault}),s({pubkey:e.quoteVault})];return r===5?a.push(s({pubkey:Te})):a.push(s({pubkey:e.withdrawQueue}),s({pubkey:e.lpVault})),a.push(s({pubkey:e.marketProgramId,isWritable:!1}),s({pubkey:e.marketId}),s({pubkey:e.marketBaseVault}),s({pubkey:e.marketQuoteVault}),s({pubkey:e.marketAuthority,isWritable:!1}),s({pubkey:t.lpTokenAccount}),s({pubkey:t.baseTokenAccount}),s({pubkey:t.quoteTokenAccount}),s({pubkey:t.owner,isWritable:!1,isSigner:!0}),s({pubkey:e.marketEventQueue}),s({pubkey:e.marketBids}),s({pubkey:e.marketAsks})),new pe.TransactionInstruction({programId:e.programId,keys:a,data:i})}return _o.logWithError("invalid version","poolKeys.version",r),new pe.TransactionInstruction({programId:e.programId,keys:[]})}var ea=require("@project-serum/serum"),ut=X(require("bn.js"));var dr=require("@solana/web3.js");var pr=M("Raydium_liquidity_serum"),fr="9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin",Zi=new dr.PublicKey(fr),tu={[fr]:3},Xi={3:Zi};function yr(o){let e=er[o];return e||pr.logWithError("invalid version","version",o),e}function br(o){let e=Xi[o];return e||pr.logWithError("invalid version","version",o),e}async function gr({programId:o,marketId:e}){let t=[e.toBuffer()],n=0,r;for(;n<100;){try{let i=t.concat(Buffer.from([n]),Buffer.alloc(7));r=await dr.PublicKey.createProgramAddress(i,o)}catch(i){if(i instanceof TypeError)throw i;n++;continue}return{publicKey:r,nonce:n}}throw pr.logWithError("unable to find a viable program address nonce","params",{programId:o,marketId:e}),new Error("unable to find a viable program address nonce")}var Mo=M("Raydium_liquidity_util");function Bo(o,e){let t=o instanceof B?o.token:W.WSOL,{baseMint:n,quoteMint:r}=e;if(t.mint.equals(n))return"base";if(t.mint.equals(r))return"quote";let i=`liquidity getTokenSide - token not match with pool, params: ${JSON.stringify({token:t.mint,baseMint:n,quoteMint:r})}`;throw console.error(i),new Error(i)}function Qe(o,e){let{baseMint:t,quoteMint:n}=e;return o.mint.equals(t)||o.mint.equals(n)}function Ko(o){let{status:e,startTime:t}=o,n=e.toNumber();return{[0]:{swap:!1,addLiquidity:!1,removeLiquidity:!1},[1]:{swap:!0,addLiquidity:!0,removeLiquidity:!0},[2]:{swap:!1,addLiquidity:!1,removeLiquidity:!1},[3]:{swap:!1,addLiquidity:!1,removeLiquidity:!0},[4]:{swap:!1,addLiquidity:!0,removeLiquidity:!0},[5]:{swap:!1,addLiquidity:!0,removeLiquidity:!0},[6]:{swap:!0,addLiquidity:!0,removeLiquidity:!0},[7]:{swap:Date.now()/1e3>=t.toNumber(),addLiquidity:!0,removeLiquidity:!0}}[n]||{swap:!1,addLiquidity:!1,removeLiquidity:!1}}function ou(o){let e=tr[o];return e||Mo.logWithError("invalid version","version",o),e}function ta(o){let e=Xn[o];return e||Mo.logWithError("invalid version","version",o),e}async function Re({name:o,programId:e,marketId:t}){let{publicKey:n}=await he([e.toBuffer(),t.toBuffer(),Buffer.from(o,"utf-8")],e);return n}async function oa({programId:o}){return he([Buffer.from([97,109,109,32,97,117,116,104,111,114,105,116,121])],o)}async function Oo({version:o,marketId:e,baseMint:t,quoteMint:n}){let r=ta(o),[i,a,u]=[E({publicKey:e}),E({publicKey:t,transformSol:!0}),E({publicKey:n,transformSol:!0})],c=await Re({name:"amm_associated_seed",programId:r,marketId:i}),m=await Re({name:"lp_mint_associated_seed",programId:r,marketId:i}),{publicKey:d,nonce:p}=await oa({programId:r}),y=await Re({name:"coin_vault_associated_seed",programId:r,marketId:i}),f=await Re({name:"pc_vault_associated_seed",programId:r,marketId:i}),b=await Re({name:"temp_lp_token_associated_seed",programId:r,marketId:i}),w=await Re({name:"open_order_associated_seed",programId:r,marketId:i}),L=await Re({name:"target_associated_seed",programId:r,marketId:i}),P=await Re({name:"withdraw_associated_seed",programId:r,marketId:i}),T=yr(o),_=br(T),{publicKey:I}=await gr({programId:_,marketId:i});return{id:c,baseMint:a,quoteMint:u,lpMint:m,version:o,programId:r,authority:d,nonce:p,baseVault:y,quoteVault:f,lpVault:b,openOrders:w,targetOrders:L,withdrawQueue:P,marketVersion:T,marketProgramId:_,marketId:i,marketAuthority:I}}async function hr({connection:o,pools:e}){let t=e.map(r=>sr(r));return(await rn(o,t,"GetPoolData")).map(r=>{let i=an(r,"GetPoolData"),a=new ut.default(Pe(i,"status")),u=Number(Pe(i,"coin_decimals")),c=Number(Pe(i,"pc_decimals")),m=Number(Pe(i,"lp_decimals")),d=new ut.default(Pe(i,"pool_coin_amount")),p=new ut.default(Pe(i,"pool_pc_amount")),y=new ut.default(Pe(i,"pool_lp_supply")),f="0";try{f=Pe(i,"pool_open_time")}catch{f="0"}return{status:a,baseDecimals:u,quoteDecimals:c,lpDecimals:m,baseReserve:d,quoteReserve:p,lpSupply:y,startTime:new ut.default(f)}})}function wr(o,e,t){return na(o.token,e.token,t)}function na(o,e,t){let{baseMint:n,quoteMint:r}=t,i=Pr(o,t),a=Pr(e,t);return i===a&&Mo.logWithError("tokens not match with pool","params",{tokenA:o.mint,tokenB:e.mint,baseMint:n,quoteMint:r}),[i,a]}function Pr(o,e){let{baseMint:t,quoteMint:n}=e;return o.mint.equals(t)?"base":o.mint.equals(n)?"quote":(Mo.logWithError("token not match with pool","params",{token:o.mint,baseMint:t,quoteMint:n}),"base")}var kr=o=>o==="a"||o==="b";async function nu(o,e,t){let n=await o.getAccountInfo(e);if(n===null)return null;let r=xo.decode(n.data),i=await o.getTokenAccountBalance(r.baseVault),a=await o.getTokenAccountBalance(r.quoteVault),u=await ea.OpenOrders.load(o,r.openOrders,t),c=10**r.baseDecimal.toNumber(),m=10**r.quoteDecimal.toNumber(),d=u.baseTokenTotal.toNumber()/c,p=u.quoteTokenTotal.toNumber()/m,y=r.baseNeedTakePnl.toNumber()/c,f=r.quoteNeedTakePnl.toNumber()/m,b=i.value.uiAmount+d-y,w=a.value.uiAmount+p-f,L=parseFloat(r.lpReserve.toString()),P=b/w;return{baseAmount:b,quoteAmount:w,lpSupply:L,baseVaultKey:r.baseVault,quoteVaultKey:r.quoteVault,baseVaultBalance:i.value.uiAmount,quoteVaultBalance:a.value.uiAmount,openOrdersKey:r.openOrders,openOrdersTotalBase:d,openOrdersTotalQuote:p,basePnl:y,quotePnl:f,priceInQuote:P}}var Kt=class extends se{constructor(t){super(t);this._poolInfos=[];this._poolInfoMap=new Map;this._pairsInfo=[];this._pairsInfoMap=new Map;this._lpTokenMap=new Map;this._lpPriceMap=new Map;this._officialIds=new Set;this._unOfficialIds=new Set;this._sdkParseInfoCache=new Map;this._stableLayout=new Bt({connection:this.scope.connection})}async load(t){if(await this.scope.fetchLiquidity(t==null?void 0:t.forceUpdate),!this.scope.apiData.liquidityPools)return;let{data:n}=this.scope.apiData.liquidityPools,[r,i]=[n.official||[],n.unOfficial||[]];this._poolInfos=[...r,...i],this._officialIds=new Set(r.map(a=>{var c,m;let u=`${(c=this.scope.token.allTokenMap.get(a.baseMint))==null?void 0:c.symbol} - ${(m=this.scope.token.allTokenMap.get(a.quoteMint))==null?void 0:m.symbol}`;return this._poolInfoMap.set(a.id,a),this._lpTokenMap.set(a.lpMint,new W({mint:a.lpMint,decimals:a.lpDecimals,symbol:u,name:`${u} LP`})),a.id})),this._unOfficialIds=new Set(i.map(a=>{var c,m;let u=`${(c=this.scope.token.allTokenMap.get(a.baseMint))==null?void 0:c.symbol} - ${(m=this.scope.token.allTokenMap.get(a.quoteMint))==null?void 0:m.symbol}`;return this._poolInfoMap.set(a.id,a),this._lpTokenMap.set(a.lpMint,new W({mint:a.lpMint,decimals:a.lpDecimals,symbol:u,name:`${u} LP`})),a.id}))}async loadPairs(t){var n;return await this.scope.fetchPairs(t==null?void 0:t.forceUpdate),this._pairsInfo=((n=this.scope.apiData.liquidityPairsInfo)==null?void 0:n.data)||[],this._pairsInfoMap=new Map(this._pairsInfo.map(r=>{let i=this._lpTokenMap.get(r.lpMint),a=i&&r.lpPrice?ze({token:i,numberPrice:r.lpPrice,decimalDone:!0}):null;return a&&this._lpPriceMap.set(r.lpMint,a),[r.ammId,r]})),this._pairsInfo}get allPools(){return this._poolInfos}get allPoolIdSet(){return{official:this._officialIds,unOfficial:this._unOfficialIds}}get allPoolMap(){return this._poolInfoMap}get allPairs(){return this._pairsInfo}get allPairsMap(){return this._pairsInfoMap}get lpTokenMap(){return this._lpTokenMap}get lpPriceMap(){return this._lpPriceMap}async fetchMultipleInfo(t){return await this._stableLayout.initStableModelLayout(),await hr(O(S({},t),{connection:this.scope.connection}))}async sdkParseJsonLiquidityInfo(t){if(!t.length)return[];let n=t.map(r=>r.id).join("-");if(this._sdkParseInfoCache.has(n))return this._sdkParseInfoCache.get(n);try{let i=(await this.fetchMultipleInfo({pools:t.map(le)})).map((a,u)=>S(S({jsonInfo:t[u]},le(t[u])),a));return this._sdkParseInfoCache.set(n,i),i}catch(r){return console.error(r),[]}}computeAmountOut({poolKeys:t,poolInfo:n,amountIn:r,outputToken:i,slippage:a}){this.checkDisabled();let u=M("Raydium_computeAmountOut"),c=r.token,m=i;(!Qe(c,t)||!Qe(m,t))&&u.logWithError("token not match with pool","poolKeys",t);let{baseReserve:d,quoteReserve:p}=n;this.logDebug("baseReserve:",d.toString(),"quoteReserve:",p.toString());let y=r.token;this.logDebug("inputToken:",y),this.logDebug("amountIn:",r.toFixed()),this.logDebug("outputToken:",i),this.logDebug("slippage:",`${a.toSignificant()}%`);let f=[d,p],b=Bo(r,t);b==="quote"&&f.reverse(),this.logDebug("input side:",b);let[w,L]=f,P;if(t.version===4)P=new $({baseToken:y,denominator:w,quoteToken:i,numerator:L});else{let Z=ir(this._stableLayout.stableModelData,d.toNumber(),p.toNumber(),!1);P=new $({baseToken:y,denominator:b==="quote"?new Ae.default(Z*1e6):new Ae.default(1e6),quoteToken:i,numerator:b==="quote"?new Ae.default(1e6):new Ae.default(Z*1e6)})}this.logDebug("currentPrice:",`1 ${y.symbol} \u2248 ${P.toFixed()} ${i.symbol}`),this.logDebug("currentPrice invert:",`1 ${i.symbol} \u2248 ${P.invert().toFixed()} ${y.symbol}`);let T=r.raw,_=ae,I=ae;if(!T.isZero())if(t.version===4){I=T.mul(Qn).div(Hn);let Z=T.sub(I),ie=w.add(Z);_=L.mul(Z).div(ie)}else{I=T.mul(new Ae.default(2)).div(new Ae.default(1e4));let Z=T.sub(I),ie=b==="quote"?nr:rr;_=new Ae.default(ie(this._stableLayout.stableModelData,p.toNumber(),d.toNumber(),Z.toNumber()))}let N=new ne(ye).add(a).invert().mul(_).quotient,v=new B(i,_),z=new B(i,N);this.logDebug("amountOut:",v.toFixed(),"minAmountOut:",z.toFixed());let V=new $({baseToken:y,denominator:T.sub(I),quoteToken:i,numerator:_});!T.isZero()&&!_.isZero()&&(V=new $({baseToken:y,denominator:T.sub(I),quoteToken:i,numerator:_}),this.logDebug("executionPrice:",`1 ${y.symbol} \u2248 ${V.toFixed()} ${i.symbol}`),this.logDebug("executionPrice invert:",`1 ${i.symbol} \u2248 ${V.invert().toFixed()} ${y.symbol}`));let J=new ne(parseInt(String(Math.abs(parseFloat(V.toFixed())-parseFloat(P.toFixed()))*1e9)),parseInt(String(parseFloat(P.toFixed())*1e9))),te=new B(y,I);return{amountOut:v,minAmountOut:z,currentPrice:P,executionPrice:V,priceImpact:J,fee:te}}async computePairAmount({poolId:t,amount:n,anotherToken:r,slippage:i}){let a=E({publicKey:t}),u=this._poolInfoMap.get(a.toBase58());u||this.logAndCreateError("pool not found",a.toBase58());let c=(await this.sdkParseJsonLiquidityInfo([u]))[0];c||this.logAndCreateError("pool parseInfo not found",a.toBase58());let{baseReserve:m,quoteReserve:d}=c;this.logDebug("baseReserve:",m.toString(),"quoteReserve:",d.toString());let p=n.token;this.logDebug("tokenIn:",p,"amount:",n.toFixed(),"anotherToken:",r,"slippage:",`${i.toSignificant()}%`);let y=Bo(n,le(u));this.logDebug("input side:",y);let f=ae;n.isZero()||(f=y==="base"?zt(n.raw.mul(d),m):zt(n.raw.mul(m),d));let w=new ne(ye).add(i).mul(f).quotient,L=new B(r,f),P=new B(r,w);return this.logDebug("anotherAmount:",L.toFixed(),"maxAnotherAmount:",P.toFixed()),{anotherAmount:L,maxAnotherAmount:P}}async swapWithAMM(t){let{poolKeys:n,payer:r,amountIn:i,amountOut:a,fixedSide:u,config:c}=t;this.logDebug("amountIn:",i),this.logDebug("amountOut:",a),(i.isZero()||a.isZero())&&this.logAndCreateError("amounts must greater than zero","amounts",{amountIn:i.toFixed(),amountOut:a.toFixed()});let{account:m}=this.scope,d=this.createTxBuilder(),{bypassAssociatedCheck:p=!1}=c||{},[y,f]=[i.token,a.token],b=await m.getCreatedTokenAccount({mint:y.mint,associatedOnly:!1}),w=await m.getCreatedTokenAccount({mint:f.mint}),[L,P]=[i.raw,a.raw],N=await m.handleTokenAccount({side:"in",amount:L,mint:y.mint,tokenAccount:b,bypassAssociatedCheck:p}),{tokenAccount:T}=N,_=oe(N,["tokenAccount"]);d.addInstruction(_);let v=await m.handleTokenAccount({side:"out",amount:0,mint:f.mint,tokenAccount:w,payer:r,bypassAssociatedCheck:p}),{tokenAccount:I}=v,F=oe(v,["tokenAccount"]);return d.addInstruction(F),d.addInstruction({instructions:[ar({poolKeys:n,userKeys:{tokenAccountIn:T,tokenAccountOut:I,owner:this.scope.ownerPubKey},amountIn:L,amountOut:P,fixedSide:u})]}),d.buildMultiTx({extInfo:{amountOut:a}})}async createPool(t){this.checkDisabled(),this.scope.checkOwner(),t.version!==4&&this.logAndCreateError("invalid version","poolKeys.version",t.version);let n=this.createTxBuilder(),r=await Oo(t);return await n.addInstruction({instructions:[ur(O(S({},r),{owner:this.scope.ownerPubKey}))]}).build()}async initPool(t){t.version!==4&&this.logAndCreateError("invalid version","poolKeys.version",t.version);let{baseAmount:n,quoteAmount:r,startTime:i=0,config:a}=t,u=await Oo(t),{baseMint:c,quoteMint:m,lpMint:d,baseVault:p,quoteVault:y}=u,f=this.createTxBuilder(),{account:b}=this.scope,w=!!(a!=null&&a.bypassAssociatedCheck),L=await b.getCreatedTokenAccount({mint:c,associatedOnly:!1}),P=await b.getCreatedTokenAccount({mint:m,associatedOnly:!1});!L&&!P&&this.logAndCreateError("cannot found target token accounts","tokenAccounts",b.tokenAccounts);let T=await b.getCreatedTokenAccount({mint:d,associatedOnly:!1}),V=await b.handleTokenAccount({side:"in",amount:n.raw,mint:c,tokenAccount:L,bypassAssociatedCheck:w}),{tokenAccount:_}=V,I=oe(V,["tokenAccount"]);f.addInstruction(I);let J=await b.handleTokenAccount({side:"in",amount:r.raw,mint:m,tokenAccount:P,bypassAssociatedCheck:w}),{tokenAccount:F}=J,N=oe(J,["tokenAccount"]);f.addInstruction(N);let te=await b.handleTokenAccount({side:"out",amount:0,mint:d,tokenAccount:T,bypassAssociatedCheck:w}),{tokenAccount:v}=te,z=oe(te,["tokenAccount"]);return f.addInstruction(z),f.addInstruction({instructions:[Je({source:_,destination:p,owner:this.scope.ownerPubKey,amount:n.raw}),Je({source:F,destination:y,owner:this.scope.ownerPubKey,amount:r.raw}),cr({poolKeys:u,userKeys:{lpTokenAccount:v,payer:this.scope.ownerPubKey},startTime:i})]}),await f.build()}async addLiquidity(t){let{poolId:n,amountInA:r,amountInB:i,fixedSide:a,config:u}=t,c=E({publicKey:n}),m=this.allPools.find(Ut=>Ut.id===c.toBase58());m||this.logAndCreateError("pool not found",n);let p=(await this.sdkParseJsonLiquidityInfo([m]))[0];p||this.logAndCreateError("pool parse error",p),this.logDebug("amountInA:",r,"amountInB:",i),(r.isZero()||i.isZero())&&this.logAndCreateError("amounts must greater than zero","amountInA & amountInB",{amountInA:r.toFixed(),amountInB:i.toFixed()});let{account:y}=this.scope,f=(u==null?void 0:u.bypassAssociatedCheck)||!1,[b,w]=[r.token,i.token],L=await y.getCreatedTokenAccount({mint:b.mint,associatedOnly:!1}),P=await y.getCreatedTokenAccount({mint:w.mint,associatedOnly:!1});!L&&!P&&this.logAndCreateError("cannot found target token accounts","tokenAccounts",y.tokenAccounts);let T=await y.getCreatedTokenAccount({mint:p.lpMint}),_=[b,w],I=[L,P],F=[r.raw,i.raw],[N]=wr(r,i,p),v="base";(!["quote","base"].includes(N)||!kr(a))&&this.logAndCreateError("invalid fixedSide","fixedSide",a),N==="quote"?(_.reverse(),I.reverse(),F.reverse(),v=a==="a"?"quote":"base"):N==="base"&&(v=a==="a"?"base":"quote");let[z,V]=_,[J,te]=I,[Z,ie]=F,ce=this.createTxBuilder(),lt=await y.handleTokenAccount({side:"in",amount:Z,mint:z.mint,tokenAccount:J,bypassAssociatedCheck:f}),{tokenAccount:Me}=lt,fe=oe(lt,["tokenAccount"]);ce.addInstruction(fe);let dt=await y.handleTokenAccount({side:"in",amount:ie,mint:V.mint,tokenAccount:te,bypassAssociatedCheck:f}),{tokenAccount:Ie}=dt,be=oe(dt,["tokenAccount"]);ce.addInstruction(be);let pt=await y.handleTokenAccount({side:"out",amount:0,mint:p.lpMint,tokenAccount:T,bypassAssociatedCheck:f}),{tokenAccount:Ct}=pt,Wt=oe(pt,["tokenAccount"]);return ce.addInstruction(Wt),ce.addInstruction({instructions:[mr({poolKeys:p,userKeys:{baseTokenAccount:Me,quoteTokenAccount:Ie,lpTokenAccount:Ct,owner:this.scope.ownerPubKey},baseAmountIn:Z,quoteAmountIn:ie,fixedSide:v})]}),await ce.build()}async removeLiquidity(t){let{poolId:n,amountIn:r,config:i}=t,a=E({publicKey:n}),u=this.allPools.find(V=>V.id===a.toBase58());u||this.logAndCreateError("pool not found",n);let m=(await this.sdkParseJsonLiquidityInfo([u]))[0];m||this.logAndCreateError("pool pass error",m);let{baseMint:d,quoteMint:p,lpMint:y}=m;this.logDebug("amountIn:",r),r.isZero()&&this.logAndCreateError("amount must greater than zero","amountIn",r.toFixed()),r.token.mint.equals(y)||this.logAndCreateError("amountIn's token not match lpMint","amountIn",r);let{account:f}=this.scope,b=await f.getCreatedTokenAccount({mint:y,associatedOnly:!1});b||this.logAndCreateError("cannot found lpTokenAccount","tokenAccounts",f.tokenAccounts);let w=await f.getCreatedTokenAccount({mint:d}),L=await f.getCreatedTokenAccount({mint:p}),P=this.createTxBuilder(),T=(i==null?void 0:i.bypassAssociatedCheck)||!1,v=await f.handleTokenAccount({side:"out",amount:0,mint:d,tokenAccount:w,bypassAssociatedCheck:T}),{tokenAccount:_}=v,I=oe(v,["tokenAccount"]);P.addInstruction(I);let z=await f.handleTokenAccount({side:"out",amount:0,mint:p,tokenAccount:L,bypassAssociatedCheck:T}),{tokenAccount:F}=z,N=oe(z,["tokenAccount"]);return P.addInstruction(N),P.addInstruction({instructions:[ra.ComputeBudgetProgram.requestUnits({units:4e5,additionalFee:0}),lr({poolKeys:m,userKeys:{lpTokenAccount:b,baseTokenAccount:_,quoteTokenAccount:F,owner:this.scope.ownerPubKey},amountIn:r.raw})]}),await P.build()}lpMintToTokenAmount({poolId:t,amount:n,decimalDone:r}){let i=E({publicKey:t});i||this.logAndCreateError("pool not found");let a=this._poolInfoMap.get(i.toBase58()),u=ue(n),c=new W({mint:a.lpMint,decimals:a.lpDecimals}),m=r?new A(u.numerator,u.denominator):new A(u.numerator,u.denominator).mul(new Ae.default(10).pow(new Ae.default(c.decimals)));return new B(c,Se(m))}getFixedSide({poolId:t,inputMint:n}){let[r,i]=[E({publicKey:t}),E({publicKey:n})],a=this._poolInfoMap.get(r.toBase58());a||this.logAndCreateError("pool not found",r.toBase58());let u=a.baseMint===i.toBase58();return(i.equals(Le)||i.equals(U))&&(u=!u),u?"a":"b"}};var Sr=require("@solana/web3.js"),Nt=require("lodash");var ia=require("@solana/web3.js");var aa="routeUGWgWzqBWFcrCfv8tritsqukccJPu3q5GPP3xS",ct=new ia.PublicKey(aa),Tr=["amm","serum","route"],Ar=[jo,kt,Le,Qo,$o,Ho,zo,Yo,Zo].map(o=>o.toBase58());var Ft=require("@solana/spl-token"),mt=require("@solana/web3.js");var Ot=R([D("instruction"),l("amountIn"),l("amountOut")]),qt=R([D("instruction")]);var ru=M("Raydium_route_instruction");function Ir(o){let{fixedSide:e}=o;if(e==="in")return[sa(o),ua(o)];throw ru.logWithError("invalid params","params",o),new Error(`invalid params, params: ${o}`)}function sa({fromPoolKeys:o,toPoolKeys:e,userKeys:t,amountIn:n,amountOut:r}){let i=Buffer.alloc(Ot.span),a;return o.version===4?(Ot.encode({instruction:0,amountIn:x(n),amountOut:x(r)},i),a=[s({pubkey:mt.SystemProgram.programId,isWritable:!1}),s({pubkey:Ft.TOKEN_PROGRAM_ID,isWritable:!1}),s({pubkey:o.programId,isWritable:!1}),s({pubkey:o.id}),s({pubkey:e.id,isWritable:!1}),s({pubkey:o.authority,isWritable:!1}),s({pubkey:o.openOrders}),s({pubkey:o.baseVault}),s({pubkey:o.quoteVault}),s({pubkey:o.marketProgramId,isWritable:!1}),s({pubkey:o.marketId}),s({pubkey:o.marketBids}),s({pubkey:o.marketAsks}),s({pubkey:o.marketEventQueue}),s({pubkey:o.marketBaseVault}),s({pubkey:o.marketQuoteVault}),s({pubkey:o.marketAuthority,isWritable:!1}),s({pubkey:t.inTokenAccount}),s({pubkey:t.middleTokenAccount}),s({pubkey:t.middleStatusAccount}),s({pubkey:t.owner,isWritable:!1,isSigner:!0})]):(Ot.encode({instruction:2,amountIn:x(n),amountOut:x(r)},i),a=[s({pubkey:mt.SystemProgram.programId,isWritable:!1}),s({pubkey:Ft.TOKEN_PROGRAM_ID,isWritable:!1}),s({pubkey:o.programId,isWritable:!1}),s({pubkey:o.id}),s({pubkey:e.id,isWritable:!1}),s({pubkey:o.authority,isWritable:!1}),s({pubkey:o.openOrders}),s({pubkey:o.baseVault}),s({pubkey:o.quoteVault}),s({pubkey:Te,isWritable:!1}),s({pubkey:o.marketProgramId,isWritable:!1}),s({pubkey:o.marketId}),s({pubkey:o.marketBids}),s({pubkey:o.marketAsks}),s({pubkey:o.marketEventQueue}),s({pubkey:o.id}),s({pubkey:o.id}),s({pubkey:o.id}),s({pubkey:t.inTokenAccount}),s({pubkey:t.middleTokenAccount}),s({pubkey:t.middleStatusAccount}),s({pubkey:t.owner,isWritable:!1,isSigner:!0})]),new mt.TransactionInstruction({programId:ct,keys:a,data:i})}function ua({fromPoolKeys:o,toPoolKeys:e,userKeys:t}){let n=Buffer.alloc(qt.span),r;return e.version===4?(qt.encode({instruction:1},n),r=[s({pubkey:Ft.TOKEN_PROGRAM_ID,isWritable:!1}),s({pubkey:e.programId,isWritable:!1}),s({pubkey:o.id,isWritable:!1}),s({pubkey:e.id}),s({pubkey:e.authority,isWritable:!1}),s({pubkey:e.openOrders}),s({pubkey:e.baseVault}),s({pubkey:e.quoteVault}),s({pubkey:e.marketProgramId,isWritable:!1}),s({pubkey:e.marketId}),s({pubkey:e.marketBids}),s({pubkey:e.marketAsks}),s({pubkey:e.marketEventQueue}),s({pubkey:e.marketBaseVault}),s({pubkey:e.marketQuoteVault}),s({pubkey:e.marketAuthority,isWritable:!1}),s({pubkey:t.middleTokenAccount}),s({pubkey:t.outTokenAccount}),s({pubkey:t.middleStatusAccount}),s({pubkey:t.owner,isWritable:!1,isSigner:!0})]):(qt.encode({instruction:3},n),r=[s({pubkey:Ft.TOKEN_PROGRAM_ID,isWritable:!1}),s({pubkey:e.programId,isWritable:!1}),s({pubkey:o.id,isWritable:!1}),s({pubkey:e.id}),s({pubkey:e.authority,isWritable:!1}),s({pubkey:e.openOrders}),s({pubkey:e.baseVault}),s({pubkey:e.quoteVault}),s({pubkey:Te,isWritable:!1}),s({pubkey:e.marketProgramId,isWritable:!1}),s({pubkey:e.marketId}),s({pubkey:e.marketBids}),s({pubkey:e.marketAsks}),s({pubkey:e.marketEventQueue}),s({pubkey:e.id}),s({pubkey:e.id}),s({pubkey:e.id}),s({pubkey:t.middleTokenAccount}),s({pubkey:t.outTokenAccount}),s({pubkey:t.middleStatusAccount}),s({pubkey:t.owner,isWritable:!1,isSigner:!0})]),new mt.TransactionInstruction({programId:ct,keys:r,data:n})}async function xr({programId:o,fromPoolId:e,middleMint:t,owner:n}){let{publicKey:r}=await he([e.toBuffer(),t.toBuffer(),n.toBuffer()],o);return r}var vt=class extends se{constructor(e){super(e)}computeRouteAmountOut({fromPoolKeys:e,toPoolKeys:t,fromPoolInfo:n,toPoolInfo:r,amountIn:i,outputToken:a,slippage:u}){let{swap:c}=Ko(n),{swap:m}=Ko(r);(!c||!m)&&this.logAndCreateError("pools swap not enabled","pools",{fromPoolKeys:e,toPoolKeys:t,fromPoolInfo:n,toPoolInfo:r});let d=i.token,p=a;(!Qe(d,e)||!Qe(p,t))&&this.logAndCreateError("pools cannot be routed","pools",{fromPoolKeys:e,toPoolKeys:t});let y=[e.baseMint.toBase58(),e.quoteMint.toBase58()],f=[t.baseMint.toBase58(),t.quoteMint.toBase58()],b=[...y,...f],w=[n.baseDecimals,n.quoteDecimals,r.baseDecimals,r.quoteDecimals],[L,P]=[d.mint.toBase58(),p.mint.toBase58()],T=(0,Nt.xor)(y,f);(T.length!==2||!T.includes(L)||!T.includes(P))&&this.logAndCreateError("xor tokens not match","pools",{fromPoolKeys:e,toPoolKeys:t});let _=(0,Nt.intersection)(y,f);_.length!==1&&this.logAndCreateError("cannot found middle token of two pools","pools",{fromPoolKeys:e,toPoolKeys:t});let I=_[0],F=b.indexOf(I);F===-1&&this.logAndCreateError("cannot found middle token","pools",{fromPoolKeys:e,toPoolKeys:t});let N=w[F],v=new Sr.PublicKey(I),z=new W({mint:v,decimals:N});this.logInfo("from pool:",e),this.logInfo("to pool:",t),this.logInfo("intersection mints:",_),this.logInfo("xor mints:",T),this.logInfo("middleMint:",I);let{minAmountOut:V,priceImpact:J,fee:te}=this.scope.liquidity.computeAmountOut({poolKeys:e,poolInfo:n,amountIn:i,outputToken:z,slippage:u}),{amountOut:Z,minAmountOut:ie,priceImpact:ce,fee:Me}=this.scope.liquidity.computeAmountOut({poolKeys:t,poolInfo:r,amountIn:V,outputToken:a,slippage:u}),fe=null,[Ie,be]=[i.raw,Z.raw];return!Ie.isZero()&&!be.isZero()&&(fe=new $({baseToken:d,denominator:Ie,quoteToken:a,numerator:be}),this.logDebug("executionPrice:",`1 ${d.symbol} \u2248 ${fe.toFixed()} ${a.symbol}`),this.logDebug("executionPrice invert:",`1 ${a.symbol} \u2248 ${fe.invert().toFixed()} ${d.symbol}`)),{amountOut:Z,minAmountOut:ie,executionPrice:fe,priceImpact:J.add(ce),fee:[te,Me]}}async swapWithRoute(e){let{fromPoolKeys:t,toPoolKeys:n,amountIn:r,amountOut:i,fixedSide:a,config:u}=e;this.logDebug("amountIn:",r,"amountOut:",i),(r.isZero()||i.isZero())&&this.logAndCreateError("amounts must greater than zero","amounts",{amountIn:r.toFixed(),amountOut:i.toFixed()});let{account:c}=this.scope,{bypassAssociatedCheck:m=!1}=u||{},[d,p]=[r.token,i.token],y=await this.scope.account.getCreatedTokenAccount({mint:d.mint,associatedOnly:!1}),f=await this.scope.account.getCreatedTokenAccount({mint:p.mint}),b=[t.baseMint.toBase58(),t.quoteMint.toBase58()],w=[n.baseMint.toBase58(),n.quoteMint.toBase58()],P=(0,Nt.intersection)(b,w)[0],T=new Sr.PublicKey(P),_=await this.scope.account.getCreatedTokenAccount({mint:T}),[I,F]=[r.raw,i.raw],N=this.createTxBuilder(),v=this.createTxBuilder(),fe=await c.handleTokenAccount({side:"in",amount:I,mint:d.mint,tokenAccount:y,bypassAssociatedCheck:m,skipCloseAccount:!0}),{tokenAccount:z}=fe,V=oe(fe,["tokenAccount"]);N.addInstruction(V);let Ie=await c.handleTokenAccount({side:"out",amount:0,mint:p.mint,tokenAccount:f,bypassAssociatedCheck:m,skipCloseAccount:!0}),{tokenAccount:J}=Ie,te=oe(Ie,["tokenAccount"]);N.addInstruction(te);let be=await c.handleTokenAccount({side:"in",amount:0,mint:T,tokenAccount:_,bypassAssociatedCheck:m,skipCloseAccount:!0}),{tokenAccount:Z}=be,ie=oe(be,["tokenAccount"]);N.addInstruction(ie),v.addInstruction({instructions:Ir({fromPoolKeys:t,toPoolKeys:n,userKeys:{inTokenAccount:z,outTokenAccount:J,middleTokenAccount:Z,middleStatusAccount:await xr({programId:ct,fromPoolId:t.id,middleMint:T,owner:this.scope.ownerPubKey}),owner:this.scope.ownerPubKey},amountIn:I,amountOut:F,fixedSide:a})});let ce=N.build();return await v.buildMultiTx({extraPreBuildData:[ce],extInfo:{amountOut:F}})}};var ca=require("@solana/web3.js"),_r=X(require("bn.js"));var qo=R([qe("mintAuthorityOption"),k("mintAuthority"),l("supply"),D("decimals"),D("isInitialized"),qe("freezeAuthorityOption"),k("freezeAuthority")]);function Lr(o,e){return o.sort((t,n)=>{let{official:r,unOfficial:i}=e,a=new Set(r),u=new Set(i),c=p=>a.has(p.mint)?1:u.has(p.mint)?2:3,m=c(t)-c(n),d=p=>!/^[a-zA-Z]/.test(p);if(m===0){let p=d(t.symbol),y=d(n.symbol);return p&&!y?1:!p&&y?-1:t.symbol.localeCompare(n.symbol)}else return m})}async function iu(o,e){try{if(!o)return;let t=await o.getAccountInfo(E({publicKey:e}));return!t||t.data.length!==qo.span?void 0:qo.decode(t.data)}catch{return}}var Dt=class extends se{constructor(t){super(t);this._tokens=[];this._tokenMap=new Map;this._tokenPrice=new Map;this._mintList={official:[],unOfficial:[],unNamed:[]}}async load(t){this.checkDisabled(),await this.scope.fetchTokens(t==null?void 0:t.forceUpdate),this._mintList={official:[],unOfficial:[],unNamed:[]},this._tokens=[],this._tokenMap=new Map;let{data:n}=this.scope.apiData.tokens||{data:{official:[],unOfficial:[],unNamed:[],blacklist:[]}},r=new Set(n.blacklist);[n.official,n.unOfficial,n.unNamed].forEach((i,a)=>{i.forEach(u=>{let c=["official","unOfficial","unNamed"][a];!r.has(u.mint)&&u.mint!==U.toBase58()&&(this._tokens.push(O(S({},u),{symbol:u.symbol||"",name:u.name||""})),this._mintList[c].push(u.mint))})}),this._mintList.official.push(Xe.mint.toBase58()),this._tokens=Lr(this._tokens,this._mintList),this._tokens.push(O(S({},Xe),{mint:U.toBase58()})),this._tokens.forEach(i=>{this._tokenMap.set(i.mint,O(S({},i),{id:i.mint}))}),this._tokenMap.set(j.mint,O(S({},j),{icon:Xe.icon,id:"wsol"})),this._tokenMap.set(U.toBase58(),O(S({},Xe),{mint:U.toBase58()}))}get allTokens(){return this._tokens}get allTokenMap(){return this._tokenMap}get tokenMints(){return this._mintList}get tokenPrices(){return this._tokenPrice}async fetchTokenPrices(t){let n=this.allTokens.filter(m=>{var d;return!!((d=m.extensions)!=null&&d.coingeckoId)&&m.mint!==ca.PublicKey.default.toBase58()}),r=n.map(m=>m.extensions.coingeckoId),i=await this.scope.api.getCoingeckoPrice(r),a=n.reduce((m,d)=>i[d.extensions.coingeckoId].usd?O(S({},m),{[d.mint]:ze({token:this._tokenMap.get(d.mint),numberPrice:i[d.extensions.coingeckoId].usd,decimalDone:!0})}):m,{}),u=t||await this.scope.api.getRaydiumTokenPrice(),c=Object.keys(u).reduce((m,d)=>this._tokenMap.get(d)?O(S({},m),{[d]:ze({token:this._tokenMap.get(d),numberPrice:u[d],decimalDone:!0})}):m,{});return this._tokenPrice=new Map([...Object.entries(a),...Object.entries(c)]),this._tokenPrice}mintToToken(t){let n=E({publicKey:t,transformSol:!0}),r=this.allTokenMap.get(n.toBase58());r||this.logAndCreateError("token not found, mint:",n.toBase58());let{decimals:i,name:a,symbol:u}=r;return new W({mint:t,decimals:i,name:a,symbol:u})}mintToTokenAmount({mint:t,amount:n,decimalDone:r}){let i=this.mintToToken(t);return r?new B(i,x(n)):new B(i,this.decimalAmount({mint:t,amount:n,decimalDone:r}))}decimalAmount({mint:t,amount:n}){let r=ue(n),i=this.mintToToken(t);return Se(new A(r.numerator,r.denominator).mul(new _r.default(10**i.decimals)))}uiAmount({mint:t,amount:n}){let r=ue(n),i=this.mintToToken(t);return i?new A(r.numerator,r.denominator).div(new _r.default(10**i.decimals)).toSignificant(i.decimals):""}};function Rr(o){let e=[];for(let t=0;t<o.length;t++)for(let n=0;n<o.length;n++)t!=n&&e.push([o[t],o[n]]);return e}var Et=class extends se{async load(){this.checkDisabled(),await this.scope.fetchLiquidity()}async _getBestSwapPool({availablePools:e,officialPoolIdSet:t}){if(e.length===0)return;if(e.length===1)return e[0];let n=e.filter(a=>t.has(a.id));return n.length===1?n[0]:(await this.scope.liquidity.sdkParseJsonLiquidityInfo(n.length?n:e)).reduce((a,u)=>{let c=a.version===5,m=u.version===5;return c&&!m?a:!c&&m?u:mn(to(a.lpSupply,10**a.lpDecimals),to(u.lpSupply,10**u.lpDecimals))?a:u}).jsonInfo}async getAvailablePools(e){this.checkDisabled();let{inputMint:t,outputMint:n}=e,[r,i]=[E({publicKey:t,transformSol:!0}).toBase58(),E({publicKey:n,transformSol:!0}).toBase58()],a=this.scope.liquidity.allPools.filter(p=>p.baseMint===r&&p.quoteMint===i||p.baseMint===i&&p.quoteMint===r),u=new Set([...Ar,r,i]),c=new Set(JSON.parse(JSON.stringify([...u])));c.delete(r),c.delete(i);let m=this.scope.liquidity.allPools.filter(p=>{let y=u.has(p.baseMint)&&u.has(p.quoteMint),f=c.has(p.baseMint)&&c.has(p.quoteMint);return y&&!f}),d=await this._getBestSwapPool({availablePools:a,officialPoolIdSet:this.scope.liquidity.allPoolIdSet.official});return{availablePools:a,best:d,routedPools:m}}async getBestAmountOut({pools:e,amountIn:t,inputToken:n,outputToken:r,slippage:i,features:a}){if(this.checkDisabled(),!e){let{routedPools:_}=await this.getAvailablePools({inputMint:n.mint,outputMint:r.mint});e=_}let u=await this.scope.liquidity.sdkParseJsonLiquidityInfo(e||[]),c=(e||[]).map((_,I)=>({poolKeys:le(_),poolInfo:u[I]})),m=a||Tr;this.logDebug("features:",m),c.length||this.logAndCreateError("please provide at least one source of trade or (inputMint & outputMint)",c);let d=[],p="amm",y=new B(n,t),f=new B(r,0),b=f,w=null,L=null,P=new ne(ae),T=[];if(m.includes("amm"))for(let{poolKeys:_,poolInfo:I}of c)try{let{amountOut:F,minAmountOut:N,currentPrice:v,executionPrice:z,priceImpact:V,fee:J}=this.scope.liquidity.computeAmountOut({poolKeys:_,poolInfo:I,amountIn:y,outputToken:r,slippage:i});F.gt(f)&&(console.log("amm",I),d=[{source:"amm",keys:_}],p="amm",f=F,b=N,w=v,L=z,P=V,T=[J])}catch{}if(m.includes("route")){let _=Rr(c);for(let I of _){if(I.length!==2)continue;let[F,N]=I,{poolKeys:v,poolInfo:z}=F,{poolKeys:V,poolInfo:J}=N;try{let{amountOut:te,minAmountOut:Z,executionPrice:ie,priceImpact:ce,fee:Me}=this.scope.route.computeRouteAmountOut({fromPoolKeys:v,toPoolKeys:V,fromPoolInfo:z,toPoolInfo:J,amountIn:y,outputToken:r,slippage:i});te.gt(f)&&(d=[{source:"amm",keys:v},{source:"amm",keys:V}],p="route",f=te,b=Z,L=ie,P=ce,T=Me)}catch{}}}return{routes:d,routeType:p,amountOut:f,minAmountOut:b,fixedSide:"in",currentPrice:w,executionPrice:L,priceImpact:P,fee:T}}async directSwap(e){this.checkDisabled();let{amountOut:t,amountIn:n,slippage:r,config:i}=e,a=n.token,u=t.token,{routes:c,routeType:m,minAmountOut:d}=await this.getBestAmountOut({inputToken:a,outputToken:u,amountIn:n.raw,slippage:r});return await this.swap({routes:c,routeType:m,amountIn:n,amountOut:d,fixedSide:"in",config:i})}async swap(e){this.checkDisabled(),this.scope.checkOwner();let{routes:t,routeType:n,amountIn:r,amountOut:i,fixedSide:a,config:u}=e;if(n==="amm"&&t.length===1)return await this.scope.liquidity.swapWithAMM({poolKeys:t[0].keys,amountIn:r,amountOut:i,fixedSide:a,config:u});if(n==="route"&&t.length===2)return await this.scope.route.swapWithRoute({fromPoolKeys:t[0].keys,toPoolKeys:t[1].keys,amountIn:r,amountOut:i,fixedSide:a,config:u});throw this.logAndCreateError("invalid routes with routeType","routes",{routeType:n,routes:t}),new Error("invalid routes with routeType")}async getWSolAccounts(){this.scope.checkOwner(),await this.scope.account.fetchWalletTokenAccounts();let e=this.scope.account.tokenAccounts.filter(t=>t.mint.equals(Le));return e.sort((t,n)=>t.isAssociated?1:n.isAssociated||t.amount.lt(n.amount)?-1:1),e}async unWrapWSol(e){let t=await this.getWSolAccounts(),n=this.createTxBuilder(),r=await _e({connection:this.scope.connection,owner:this.scope.ownerPubKey,payer:this.scope.ownerPubKey,amount:0});n.addInstruction(r);let i=x(e);for(let a=0;a<t.length;a++)i.gte(t[a].amount)?(n.addInstruction({instructions:[Ne({tokenAccount:t[a].publicKey,payer:this.scope.ownerPubKey,owner:this.scope.ownerPubKey})]}),i.sub(t[a].amount)):(n.addInstruction({instructions:[Ne({tokenAccount:t[a].publicKey,payer:this.scope.ownerPubKey,owner:this.scope.ownerPubKey})]}),Je({destination:r.signers[0].publicKey,source:t[a].publicKey,amount:i,owner:this.scope.ownerPubKey}));return n.build()}async wrapWSol(e){let t=await this.getWSolAccounts(),n=this.createTxBuilder(),r=await _e({connection:this.scope.connection,owner:this.scope.ownerPubKey,payer:this.scope.ownerPubKey,amount:e,skipCloseAccount:!0});return n.addInstruction(r),t.length&&n.addInstruction({instructions:[Je({destination:t[0].publicKey,source:r.signers[0].publicKey,amount:e,owner:this.scope.ownerPubKey})],endInstructions:[Ne({tokenAccount:r.signers[0].publicKey,payer:this.scope.ownerPubKey,owner:this.scope.ownerPubKey})]}),n.build()}};var Ee={},Vt=class{constructor(e){this.rawBalances=new Map;let{connection:t,cluster:n,owner:r,api:i,defaultApiTokens:a,defaultApiLiquidityPools:u,defaultApiFarmPools:c,defaultApiPairsInfo:m,apiCacheTime:d}=e;this._connection=t,this.cluster=n,this._owner=r?new de(r):void 0,this._signAllTransactions=e.signAllTransactions,this.api=i,this._apiCacheTime=d||5*60*1e3,this.logger=M("Raydium"),this.farm=new Mt({scope:this,moduleName:"Raydium_Farm"}),this.account=new St({scope:this,moduleName:"Raydium_Account",tokenAccounts:e.tokenAccounts,tokenAccountRawInfos:e.tokenAccountRawInfos}),this.liquidity=new Kt({scope:this,moduleName:"Raydium_Liquidity"}),this.token=new Dt({scope:this,moduleName:"Raydium_token"}),this.trade=new Et({scope:this,moduleName:"Raydium_trade"}),this.route=new vt({scope:this,moduleName:"Raydium_route"});let p=new Date().getTime(),[y,f,b,w]=[a?{fetched:p,data:a}:Ee.tokens,u?{fetched:p,data:u}:Ee.liquidityPools,c?{fetched:p,data:c}:Ee.farmPools,m?{fetched:p,data:m}:Ee.liquidityPairsInfo];this.apiData=S(S(S(S({},y?{tokens:y}:{}),f?{liquidityPools:f}:{}),b?{farmPools:b}:{}),w?{liquidityPairsInfo:w}:{})}static async load(e){let t=(0,ma.merge)({cluster:"mainnet",owner:null,apiRequestInterval:3e5,apiRequestTimeout:1e4},e),{cluster:n,apiRequestTimeout:r}=t,i=new It({cluster:n,timeout:r}),a=new Vt(O(S({},t),{api:i}));return await a.token.load(),await a.liquidity.load(),a}get owner(){return this._owner}get ownerPubKey(){if(!this._owner)throw new Error(no);return this._owner.publicKey}setOwner(e){return this._owner=e?new de(e):void 0,this}get connection(){if(!this._connection)throw new Error(pi);return this._connection}setConnection(e){return this._connection=e,this}get signAllTransactions(){return this._signAllTransactions}setSignAllTransactions(e){return this._signAllTransactions=e,this}checkOwner(){if(!this.owner)throw this.logger.error(no),new Error(no)}isCacheInvalidate(e){return new Date().getTime()-e>this._apiCacheTime}async fetchTokens(e){if(this.apiData.tokens&&!this.isCacheInvalidate(this.apiData.tokens.fetched)&&!e)return this.apiData.tokens.data;let t={fetched:Date.now(),data:await this.api.getTokens()};return this.apiData.tokens=t,Ee.tokens=t,t.data}async fetchLiquidity(e){if(this.apiData.liquidityPools&&!this.isCacheInvalidate(this.apiData.liquidityPools.fetched)&&!e)return this.apiData.liquidityPools.data;let t={fetched:Date.now(),data:await this.api.getLiquidityPools()};return this.apiData.liquidityPools=t,Ee.liquidityPools=t,t.data}async fetchPairs(e){var n;if(this.apiData.liquidityPairsInfo&&!this.isCacheInvalidate(this.apiData.liquidityPairsInfo.fetched)&&!e)return((n=this.apiData.liquidityPairsInfo)==null?void 0:n.data)||[];let t={fetched:Date.now(),data:await this.api.getPairsInfo()};return this.apiData.liquidityPairsInfo=t,Ee.liquidityPairsInfo=t,t.data}async fetchFarms(e){if(this.apiData.farmPools&&!this.isCacheInvalidate(this.apiData.farmPools.fetched)&&!e)return this.apiData.farmPools.data;let t={fetched:Date.now(),data:await this.api.getFarmPools()};return this.apiData.farmPools=t,Ee.farmPools=t,t.data}async chainTimeOffset(){let e=await this.connection.getBlockTime(await this.connection.getSlot());return e?(e*1e3,Number((e*1e3-Date.now()).toFixed(0))):0}mintToToken(e){return this.token.mintToToken(e)}mintToTokenAmount(e){return this.token.mintToTokenAmount(e)}decimalAmount(e){return this.token.decimalAmount(e)}uiAmount(e){return this.token.uiAmount(e)}};var au=o=>o;0&&(module.exports={ANAMint,Api,BNLayout,BN_100,BN_1000,BN_10000,BN_FIVE,BN_ONE,BN_TEN,BN_THREE,BN_TWO,BN_ZERO,BitStructure,Blob,Currency,DataElement,ETHMint,FARM_LOCK_MINT,FARM_LOCK_VAULT,FARM_PROGRAMID_TO_VERSION,FARM_PROGRAM_ID_V3,FARM_PROGRAM_ID_V3_PUBKEY,FARM_PROGRAM_ID_V5,FARM_PROGRAM_ID_V5_PUBKEY,FARM_PROGRAM_ID_V6,FARM_PROGRAM_ID_V6_PUBKEY,FARM_VERSION_TO_LEDGER_LAYOUT,FARM_VERSION_TO_PROGRAMID,FARM_VERSION_TO_STATE_LAYOUT,Fraction,LIQUIDITY_FEES_DENOMINATOR,LIQUIDITY_FEES_NUMERATOR,LIQUIDITY_PROGRAMID_TO_VERSION,LIQUIDITY_PROGRAM_ID_V4,LIQUIDITY_PROGRAM_ID_V5,LIQUIDITY_VERSION_TO_PROGRAM_ID,LIQUIDITY_VERSION_TO_SERUM_VERSION,LIQUIDITY_VERSION_TO_STATE_LAYOUT,Layout,LiquidityPoolStatus,LogLevel,Logger,MODEL_DATA_PUBKEY,NRVMint,OptionLayout,Owner,PAIMint,Percent,Price,RAYMint,ROUTE_PROGRAM_ID_V1,Raydium,Rounding,SERUM_PROGRAMID_TO_VERSION,SERUM_PROGRAM_ID_V3,SERUM_VERSION_TO_PROGRAM_ID,SOLMint,SPL_MINT_LAYOUT,SRMMint,StableLayout,Structure,TOKEN_SOL,TOKEN_WSOL,Token,TokenAmount,TxBuilder,UInt,USDCMint,USDHMint,USDTMint,Union,WSOLMint,WideBits,WrappedLayout,_100_PERCENT,_LIQUIDITY_PROGRAM_ID_V4,_LIQUIDITY_PROGRAM_ID_V5,_ROUTE_PROGRAM_ID_V1,_SERUM_PROGRAM_ID_V3,accountMeta,addLiquidityLayout,array,associatedLedgerAccountLayout,bits,blob,bool,calFarmRewardAmount,calculateFarmPoolAprList,chunkArray,closeAccountInstruction,commonSystemAccountMeta,createAssociatedLedgerAccountInstruction,createLogger,createPoolV4Layout,createWSolAccountInstructions,cstr,currencyEquals,decodeBool,defaultRoutes,div,divCeil,dwLayout,encodeBool,endlessRetry,eq,f32,f32be,f64,f64be,farmAddRewardLayout,farmDespotVersionToInstruction,farmLedgerLayoutV3_1,farmLedgerLayoutV3_2,farmLedgerLayoutV5_1,farmLedgerLayoutV5_2,farmLedgerLayoutV6_1,farmRewardInfoToConfig,farmRewardLayout,farmRewardRestartLayout,farmRewardTimeInfoLayout,farmStateV3Layout,farmStateV5Layout,farmStateV6Layout,farmWithdrawVersionToInstruction,fetchMultipleFarmInfoAndUpdate,findProgramAddress,fixedSwapInLayout,fixedSwapOutLayout,forecastTransactionSize,formatLayout,getAmountSide,getAmountsSide,getAssociatedAuthority,getAssociatedLedgerAccount,getAssociatedLedgerPoolAccount,getAssociatedMiddleStatusAccount,getAssociatedPoolKeys,getDate,getDxByDyBaseIn,getDyByDxBaseIn,getFarmLedgerLayout,getFarmProgramId,getFarmStateLayout,getFarmVersion,getLiquidityAssociatedAuthority,getLiquidityAssociatedId,getLiquidityInfo,getLiquidityProgramId,getLiquidityStateLayout,getMax,getMultipleAccountsInfo,getMultipleAccountsInfoWithCustomFlags,getPoolEnabledFeatures,getRecentBlockHash,getSPLTokenInfo,getSerumAssociatedAuthority,getSerumProgramId,getSerumVersion,getStablePrice,getTime,getTimestamp,getTokenSide,getTokensSide,greedy,groupPools,gt,gte,i128,i64,includesToken,initPoolLayout,initTokenAccountInstruction,intersection,isDateAfter,isDateBefore,isMeaningfulNumber,isNumber,isValidFarmVersion,isValidFixedSide,jsonInfo2PoolKeys,judgeFarmType,liquidityStateV4Layout,liquidityStateV5Layout,lt,lte,mSOLMint,makeAMMSwapInstruction,makeAddLiquidityInstruction,makeCreateFarmInstruction,makeCreatePoolInstruction,makeInitPoolInstruction,makeRemoveLiquidityInstruction,makeRouteSwapInstruction,makeSimulatePoolInfoInstruction,makeSimulationPoolInfo,makeSwapFixedInInstruction,makeSwapFixedOutInstruction,makeSwapInFixedInInstruction,makeSwapOutFixedInInstruction,makeTransferInstruction,mergeSdkFarmInfo,modelDataInfoLayout,mul,ns64,ns64be,nu64,nu64be,offset,offsetDateTime,option,parseBigNumberish,parseNumberInfo,parseSimulateLogToJson,parseSimulateValue,parseTokenAccountResp,poolTypeV6,publicKey,quantumSOLHydratedTokenJsonInfo,realFarmStateV3Layout,realFarmStateV5Layout,realFarmV6Layout,removeLiquidityLayout,routeSwapInLayout,routeSwapOutLayout,rustEnum,s16,s16be,s24,s24be,s32,s32be,s40,s40be,s48,s48be,s8,seq,setLoggerLevel,shakeFractionDecimal,simulateMultipleInstruction,sleep,sortTokens,splAccountLayout,splitNumber,stSOLMint,str,struct,sub,swapRouteMiddleMints,tagged,tenExponential,toBN,toFraction,toFractionWithDecimals,toPercent,toTokenPrice,toTotalPrice,toUsdCurrency,tryParsePublicKey,u128,u16,u16be,u24,u24be,u32,u32be,u40,u40be,u48,u48be,u64,u8,union,unionArr,unionLayoutDiscriminator,uniq,updateFarmPoolInfo,utf8,validateAndParsePublicKey,validateFarmRewards,vec,vecU8,whetherIsStakeFarmPool,withdrawRewardLayout,xor,zeros});
//# sourceMappingURL=index.js.map