var L=Object.defineProperty,w=Object.defineProperties;var C=Object.getOwnPropertyDescriptors;var m=Object.getOwnPropertySymbols;var E=Object.prototype.hasOwnProperty,P=Object.prototype.propertyIsEnumerable;var g=(t,e,o)=>e in t?L(t,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[e]=o,f=(t,e)=>{for(var o in e||(e={}))E.call(e,o)&&g(t,o,e[o]);if(m)for(var o of m(e))P.call(e,o)&&g(t,o,e[o]);return t},y=(t,e)=>w(t,C(e));import{PublicKey as J}from"@solana/web3.js";function h(t,e=1,o=[]){let r=[...t];if(e<=0)return o;for(;r.length;)o.push(r.splice(0,e));return o}import{get as R,set as W}from"lodash";import B from"pino";import _ from"pino-pretty";var A={},k={},S=_({colorize:!0,levelFirst:!0,translateTime:"SYS:yyyymmdd HH:MM:ss.l"}),q=B({base:null,level:"silent"},S);function T(t){let e=R(A,t);if(!e){let o=R(k,t);e=q.child({name:t},{level:o}),W(A,t,e)}return e.logWithError=(...o)=>{let r=o.map(n=>typeof n=="object"?JSON.stringify(n):n).join(", ");throw new Error(r)},e}var p=T("Raydium_accountInfo_util");async function O(t,e,o){let{batchRequest:r,commitment:n}=f({batchRequest:!1},o),l=h(e,100),a=new Array(l.length).fill([]);if(r){let i=l.map(s=>{let u=t._buildArgs([s.map(c=>c.toBase58())],n,"base64");return{methodName:"getMultipleAccounts",args:u}});a=(await t._rpcBatchRequest(i)).map(s=>(s.error&&p.logWithError(`failed to get info for multiple accounts, RPC_ERROR, ${s.error.message}`),s.result.value.map(u=>{if(u){let{data:c,executable:x,lamports:I,owner:M,rentEpoch:v}=u;return c.length!==2&&c[1]!=="base64"&&p.logWithError("info must be base64 encoded, RPC_ERROR"),{data:Buffer.from(c[0],"base64"),executable:x,lamports:I,owner:new J(M),rentEpoch:v}}return null})))}else try{a=await Promise.all(l.map(i=>t.getMultipleAccountsInfo(i,n)))}catch(i){i instanceof Error&&p.logWithError(`failed to get info for multiple accounts, RPC_ERROR, ${i.message}`)}return a.flat()}async function ee(t,e,o){let r=await O(t,e.map(n=>n.pubkey),o);return e.map((n,l)=>y(f({},n),{accountInfo:r[l]}))}export{O as getMultipleAccountsInfo,ee as getMultipleAccountsInfoWithCustomFlags};
//# sourceMappingURL=accountInfo.mjs.map