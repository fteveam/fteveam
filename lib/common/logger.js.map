{"version":3,"sources":["../../src/common/logger.ts"],"sourcesContent":["import { get, set } from \"lodash\";\nimport pino, { LevelWithSilent, Logger } from \"pino\";\nimport pretty from \"pino-pretty\";\n\nexport type ModuleName = \"Common.Api\";\n\nconst moduleLoggers: { [key in ModuleName]?: Logger } = {};\n\nconst moduleLevels: { [key in ModuleName]?: LevelWithSilent } = {};\n\nconst stream = pretty({\n  colorize: true,\n  levelFirst: true,\n  translateTime: \"SYS:yyyymmdd HH:MM:ss.l\",\n});\nconst globalLogger = pino({ base: null, level: \"silent\" }, stream);\n\nexport interface LoggerInstance extends Logger {\n  logWithError: (...args: any) => void;\n}\n\nexport function createLogger(moduleName: string): LoggerInstance {\n  let logger = get(moduleLoggers, moduleName);\n\n  if (!logger) {\n    // default level is silent\n    const level = get(moduleLevels, moduleName);\n\n    logger = globalLogger.child({ name: moduleName }, { level });\n    set(moduleLoggers, moduleName, logger);\n  }\n\n  logger.logWithError = (...args): void => {\n    const msg = args.map((arg) => (typeof arg === \"object\" ? JSON.stringify(arg) : arg)).join(\", \");\n    // logger.error(msg);\n    throw new Error(msg);\n  };\n\n  return logger;\n}\n\nexport function setLoggerLevel(moduleName: ModuleName, level: LevelWithSilent): void {\n  set(moduleLevels, moduleName, level);\n\n  const logger = get(moduleLoggers, moduleName);\n  if (logger) logger.level = level;\n}\n"],"mappings":"6iBAAA,4EAAA,MAAyB,kBACzB,EAA8C,mBAC9C,EAAmB,0BAIb,EAAkD,CAAC,EAEnD,EAA0D,CAAC,EAE3D,EAAS,cAAO,CACpB,SAAU,GACV,WAAY,GACZ,cAAe,yBACjB,CAAC,EACK,EAAe,cAAK,CAAE,KAAM,KAAM,MAAO,QAAS,EAAG,CAAM,EAM1D,WAAsB,EAAoC,CAC/D,GAAI,GAAS,UAAI,EAAe,CAAU,EAE1C,GAAI,CAAC,EAAQ,CAEX,GAAM,GAAQ,UAAI,EAAc,CAAU,EAE1C,EAAS,EAAa,MAAM,CAAE,KAAM,CAAW,EAAG,CAAE,OAAM,CAAC,EAC3D,UAAI,EAAe,EAAY,CAAM,CACvC,CAEA,SAAO,aAAe,IAAI,IAAe,CACvC,GAAM,GAAM,EAAK,IAAI,AAAC,GAAS,MAAO,IAAQ,SAAW,KAAK,UAAU,CAAG,EAAI,CAAI,EAAE,KAAK,IAAI,EAE9F,KAAM,IAAI,OAAM,CAAG,CACrB,EAEO,CACT,CAEO,WAAwB,EAAwB,EAA8B,CACnF,UAAI,EAAc,EAAY,CAAK,EAEnC,GAAM,GAAS,UAAI,EAAe,CAAU,EAC5C,AAAI,GAAQ,GAAO,MAAQ,EAC7B","names":[]}